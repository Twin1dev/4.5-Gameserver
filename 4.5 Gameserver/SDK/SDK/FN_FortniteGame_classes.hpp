#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x188 (0x4B0 - 0x328)
// Class FortniteGame.AIHotSpot
class AAIHotSpot : public AActor
{
public:
	uint8                                        Pad_BE1[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAIHotSpotSlot*>                UserSlots;                                         // 0x330(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAIHotSpotSlotGenerator*               SlotGenerator;                                     // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAIHotSpotSlot*>                Slots;                                             // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	class AActor*                                FocusActor;                                        // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CustomNavmeshSearchExtent;                         // 0x368(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStartEnabled : 1;                                 // Mask: 0x1, PropSize: 0x10x374(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowSlotlessAssignment : 1;                      // Mask: 0x2, PropSize: 0x10x374(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowClaimingMultipleSlots : 1;                   // Mask: 0x4, PropSize: 0x10x374(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTrackOverlappingSlots : 1;                        // Mask: 0x8, PropSize: 0x10x374(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bProjectSlotsOnNavmesh : 1;                        // Mask: 0x10, PropSize: 0x10x374(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCustomNavmeshSearchExtent : 1;                    // Mask: 0x20, PropSize: 0x10x374(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsEnabled : 1;                                    // Mask: 0x40, PropSize: 0x10x374(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_C4 : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_BE3[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AAIController*>                 NoSlotAssignees;                                   // 0x378(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_BE4[0x110];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   RenderingComponent;                                // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBillboardComponent*                   SpriteComponent;                                   // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_BE5[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAIHotSpot* GetDefaultObj();

	void SetEnabled(bool bEnabled);
	int32 RemoveGroupFromHotspot(const TArray<class AAIController*>& GroupOfAI);
	bool RemoveFromHotspot(class AAIController* AI, bool bAssignFromWaitingList);
	void OnSlotOccupied(class AAIController* AI, int32 Index, int32 UserId);
	void OnSlotFreed(class AAIController* AI, int32 Index, int32 UserId);
	void OnSlotEnabled(int32 Index, int32 UserId);
	void OnSlotDisabled(int32 Index, int32 UserId);
	void OnSlotClaimed(class AAIController* AI, int32 Index, int32 UserId);
	void OnSlotBlocked(class AAIController* AI, int32 Index, int32 UserId);
	void OnRemovedSlotlessBehavior(class AAIController* AI, bool bIsClamingSlot);
	void OnRemovedBehavior(class AAIController* AI, int32 Index, int32 UserId, enum class EAIHotSpotSlot PrevState, bool bWasOnWaitingList);
	void OnMoveToSlotFinished(class AAIController* AI, int32 Index, int32 UserId, bool bResult);
	void OnHotSpotEnabled();
	void OnHotSpotDisabled();
	bool OnAssignedSlotlessBehavior(class AAIController* AI);
	bool OnAssignedOccupiedBehavior(class AAIController* AI, int32 Index, int32 UserId);
	bool OnAssignedClaimedBehavior(class AAIController* AI, int32 Index, int32 UserId, bool bWasOnWaitingList);
	bool OccupySlotByIndex(int32 Index);
	bool IsSlotlessAssignmentAllowed();
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasEnabledSlots();
	bool HasAssignedAI(class AAIController* AI, enum class EAIHotSpotAssignmentFilter Filter);
	int32 GetSlotUserIdByIndex(int32 Index);
	enum class EAIHotSpotSlot GetSlotStateByOwner(class AAIController* AIOwner);
	enum class EAIHotSpotSlot GetSlotStateByIndex(int32 Index);
	struct FRotator GetSlotRotationByIndex(int32 Index);
	class AAIController* GetSlotOwnerByIndex(int32 Index);
	struct FVector GetSlotLocationByIndex(int32 Index);
	int32 GetSlotIndexByOwner(class AAIController* AIOwner);
	int32 GetSlotCount(enum class EAIHotSpotSlotFilter Filter);
	class UAIHotSpotSlot* GetSlotByOwner(class AAIController* AIOwner);
	class UAIHotSpotSlot* GetSlotByIndex(int32 Index);
	int32 GetAssignedAICount(enum class EAIHotSpotAssignmentFilter Filter);
	TArray<class AAIController*> GetAssignedAI(enum class EAIHotSpotAssignmentFilter Filter);
	TArray<int32> FindBestSlotIndices(const TArray<class AAIController*>& AI);
	int32 FindBestSlotIndex(class AAIController* AI);
	bool CanUseSlotByIndex(class AAIController* AI, int32 Index);
	bool AssignToSlotByIndex(class AAIController* AI, int32 Index);
	bool AssignToHotspot(class AAIController* AI);
	int32 AssignGroupToHotspot(const TArray<class AAIController*>& GroupOfAI);
	void AssignFromWaitingList();
};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.AIHotSpotConfig
class UAIHotSpotConfig : public UDataAsset
{
public:
	TArray<struct FAIHotSpotSlotConfig>          Slots;                                             // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        bDetectUnreachableSlots : 1;                       // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_C5 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_BED[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAIHotSpotSlotGenerator*               SlotGenerator;                                     // 0x48(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIHotSpotConfig* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.AIHotSpotManagerProxy
class UAIHotSpotManagerProxy : public UAIHotSpotManager
{
public:
	uint8                                        Pad_BEE[0x58];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIHotSpotManagerProxy* GetDefaultObj();

};

// 0x0 (0x560 - 0x560)
// Class FortniteGame.AIHotSpotRenderingComponent
class UAIHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	static class UClass* StaticClass();
	static class UAIHotSpotRenderingComponent* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class FortniteGame.AIHotSpotSlot
class UAIHotSpotSlot : public UObject
{
public:
	uint8                                        Pad_C03[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LocalTransform;                                    // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        Height;                                            // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToFocusActor;                              // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        UserId;                                            // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStartEnabled : 1;                                 // Mask: 0x1, PropSize: 0x10x70(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasCachedAgentData : 1;                           // Mask: 0x2, PropSize: 0x10x70(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasOverlappingSlots : 1;                          // Mask: 0x4, PropSize: 0x10x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasDistanceToFocusActor : 1;                      // Mask: 0x8, PropSize: 0x10x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsBlockingOthers : 1;                             // Mask: 0x10, PropSize: 0x10x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsEnabled : 1;                                    // Mask: 0x20, PropSize: 0x10x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_C6 : 2;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C04[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AAIController*                         Owner;                                             // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SlotIndex;                                         // 0x80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAIHotSpotSlot                    SlotState;                                         // 0x84(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C05[0x3B];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIHotSpotSlot* GetDefaultObj();

	void SetSlotState(enum class EAIHotSpotSlot NewState);
	void SetSlotOwnerAndState(class AAIController* NewOwner, enum class EAIHotSpotSlot NewState);
	void SetSlotEnabled(bool bNewEnabled);
	void OnStateChanged(class AAIController* SlotOwner, enum class EAIHotSpotSlot NewState);
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasUserId();
	int32 GetSlotUserId();
	enum class EAIHotSpotSlot GetSlotState();
	struct FRotator GetSlotRotation();
	float GetSlotRadius();
	class AAIController* GetSlotOwner();
	struct FVector GetSlotLocation();
	int32 GetSlotIndex();
	float GetSlotHeight();
	struct FBox GetSlotBounds();
	class AAIHotSpot* GetHotSpot();
	void ClearSlot();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.AIHotSpotSlotGenerator
class UAIHotSpotSlotGenerator : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAIHotSpotSlotGenerator* GetDefaultObj();

	class AAIHotSpot* GetHotSpot();
	void GenerateSlots();
	class UAIHotSpotSlot* AddSlot(struct FVector& RelativeLocation, struct FRotator& RelativeRotation, TSubclassOf<class UAIHotSpotSlot> CustomSlotClass, bool bEnabled);
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.AIHotSpotSlotGenerator_OnBoundingBox
class UAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator
{
public:
	TSubclassOf<class UAIHotSpotSlot>            SlotClass;                                         // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MaxExtent;                                         // 0x30(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExpandBy;                                          // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OffsetFromEdge;                                    // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Spacing;                                           // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLimitMaxExtent : 1;                               // Mask: 0x1, PropSize: 0x10x48(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMustHitFocusActor : 1;                            // Mask: 0x2, PropSize: 0x10x48(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_C7 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C0F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBoundingBoxSlotDirectionCalculation SlotDirectionCalculation;                          // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C10[0x23];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIHotSpotSlotGenerator_OnBoundingBox* GetDefaultObj();

};

// 0x90 (0x440 - 0x3B0)
// Class FortniteGame.FortReplaySpectatorPawnBase
class AFortReplaySpectatorPawnBase : public ASpectatorPawn
{
public:
	class UFortSpectatorCameraComponent*         SpectatorCameraComponent;                          // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x3B8(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortReplaySpectatorPawnBase* GetDefaultObj();

};

// 0x20 (0x460 - 0x440)
// Class FortniteGame.ArenaCamPawn
class AArenaCamPawn : public AFortReplaySpectatorPawnBase
{
public:
	class AFortPlayerControllerSpectating*       SpectatorController;                               // 0x440(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortArenaCamera*>              ArenaCams;                                         // 0x448(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CurrArenaCamIdx;                                   // 0x458(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C14[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AArenaCamPawn* GetDefaultObj();

};

// 0xF0 (0x528 - 0x438)
// Class FortniteGame.FortAIController
class AFortAIController : public AAIController
{
public:
	uint8                                        Pad_C29[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUsingNavMesh : 1;                                 // Mask: 0x1, PropSize: 0x10x450(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysNotifyBumpWall : 1;                         // Mask: 0x2, PropSize: 0x10x450(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInstantRotation : 1;                              // Mask: 0x4, PropSize: 0x10x450(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTurnTransitionsEnabled : 1;                       // Mask: 0x8, PropSize: 0x10x450(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_C8 : 4;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C2A[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPathFollowingComponent*           FortPathFollowingComp;                             // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIHotSpotUseInfo                     CurrentHotSpot;                                    // 0x460(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        GoalInfoUpdateRate;                                // 0x478(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C2B[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                GoalActor;                                         // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GoalVisibilityPersistanceTime;                     // 0x488(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C2C[0x94];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIPawn*                           MyFortPawn;                                        // 0x520(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortAIController* GetDefaultObj();

	void WakeUp();
	void UnregisterForGoalDetection();
	void UnlockMovementResource();
	void UnlockBehaviorResource();
	void SetupCustomVIM(class UClass* VIM);
	void SetTeam(enum class EFortTeam InTeam);
	void SetPawnAIType(enum class EFortressAIType NewAIType, class AActor* SpawnSpot);
	void SetIsSleeping(bool bNewSleepStatus);
	void SetGoalActor(class AActor* InActor, bool bLocationAlwaysKnown);
	void SetFullPeripheralVision(bool bNewFullPeripheralVision);
	void SetAlwaysGameplayRelevant(bool bInAlwaysGameplayRelevant);
	void OnBuildingActorGoalDestroyed();
	void LockMovementResource();
	void LockBehaviorResource();
	bool IsIgnoringProximity(class AFortAIController* FortAIController);
	bool IsAllowedToSleep();
	void IgnoreProximityForDuration(float DurationToIgnore);
	class AActor* GetGoalActor();
	class UFortAIEncounterInfo* GetEncounterInfo();
	bool CreateBuildingActor(TSubclassOf<class ABuildingSMActor> BuildingClass, const struct FVector& BuildLoc, const struct FRotator& BuildRot, bool bMirrored);
};

// 0x8 (0x530 - 0x528)
// Class FortniteGame.AthenaAIController
class AAthenaAIController : public AFortAIController
{
public:
	uint8                                        Pad_C30[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAthenaAIController* GetDefaultObj();

};

// 0x8 (0x1D0 - 0x1C8)
// Class FortniteGame.FortAIPerceptionComponent
class UFortAIPerceptionComponent : public UAIPerceptionComponent
{
public:
	float                                        LosingSightRadiusBump;                             // 0x1C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C31[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIPerceptionComponent* GetDefaultObj();

};

// 0x0 (0x1D0 - 0x1D0)
// Class FortniteGame.AthenaAIPerceptionComponent
class UAthenaAIPerceptionComponent : public UFortAIPerceptionComponent
{
public:

	static class UClass* StaticClass();
	static class UAthenaAIPerceptionComponent* GetDefaultObj();

};

// 0xD0 (0x3E8 - 0x318)
// Class FortniteGame.FortPathFollowingComponent
class UFortPathFollowingComponent : public UCrowdFollowingComponent
{
public:
	class AFortAIController*                     MyAI;                                              // 0x318(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_C34[0x20];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovementBlockFrustrationCooldownSpeed;             // 0x340(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C35[0xA4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPathFollowingComponent* GetDefaultObj();

};

// 0x0 (0x3E8 - 0x3E8)
// Class FortniteGame.AthenaPathFollowingComponent
class UAthenaPathFollowingComponent : public UFortPathFollowingComponent
{
public:

	static class UClass* StaticClass();
	static class UAthenaPathFollowingComponent* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.AthenaAIPerceptionManager
class UAthenaAIPerceptionManager : public UObject
{
public:
	uint8                                        Pad_C3C[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaAIPerceptionManager* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.AthenaAISettings
class UAthenaAISettings : public UObject
{
public:
	uint8                                        bAllowAIDirector : 1;                              // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowAIGoalManager : 1;                           // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceRVOUse : 1;                                  // Mask: 0x4, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_C9 : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C3F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinHearingRange;                                   // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHearingRange;                                   // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeAggroRange;                                      // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNavigationSystemConfig*               NavigationSystemConfig;                            // 0x38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, AdvancedDisplay, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaAISettings* GetDefaultObj();

};

// 0x70 (0x98 - 0x28)
// Class FortniteGame.AthenaAISpawnManager
class UAthenaAISpawnManager : public UObject
{
public:
	TMap<int32, struct FAISpawnRequest>          SpawnRequests;                                     // 0x28(0x50)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C49[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        AllSpawnedActors;                                  // 0x80(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C4A[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaAISpawnManager* GetDefaultObj();

	bool SpawnActors(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorClass, class UEnvQuery* QueryTemplate, struct FVector& RefLocation, UDelegateProperty_ Event, float MinRadius, float MaxRadius, int32 Count);
	class UAthenaAISpawnManager* GetAISpawnManager(class UObject* WorldContextObject);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.AthenaAIDataProvider_SpawnManager
class UAthenaAIDataProvider_SpawnManager : public UAIDataProvider
{
public:
	struct FVector                               ReferenceLocation;                                 // 0x28(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistance;                                       // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistance;                                       // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C4C[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaAIDataProvider_SpawnManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.AthenaQueryContext_SpawnRefLocation
class UAthenaQueryContext_SpawnRefLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UAthenaQueryContext_SpawnRefLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.AthenaAIBlueprintLibrary
class UAthenaAIBlueprintLibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAthenaAIBlueprintLibrary* GetDefaultObj();

	void AggroOnActor(TArray<class AActor*>& Agents, class AActor* Target);
};

// 0x90 (0x1B8 - 0x128)
// Class FortniteGame.FortAISystem
class UFortAISystem : public UAISystem
{
public:
	TArray<class UFortQueryTwoPointSolver*>      TwoPointSolvers;                                   // 0x128(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UFortInfluenceMap*                     InfluenceMap;                                      // 0x138(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBotMissionManager*                BotManager;                                        // 0x140(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C55[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortRiftBlockerComponent*>     ActiveRiftBlockers;                                // 0x158(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_C56[0x50];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAISystem* GetDefaultObj();

	bool IsInCone2D(const struct FVector& ConeOrigin, const struct FVector& ConeDirection, float HalfAngle, const struct FVector& LocationToCheck);
};

// 0x8 (0x1C0 - 0x1B8)
// Class FortniteGame.AthenaAISystem
class UAthenaAISystem : public UFortAISystem
{
public:
	class UAthenaAIPerceptionManager*            PerceptionManager;                                 // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAthenaAISystem* GetDefaultObj();

};

// 0x290 (0x2C0 - 0x30)
// Class FortniteGame.FortItemDefinition
class UFortItemDefinition : public UMcpItemDefinitionBase
{
public:
	uint8                                        Pad_C82[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemCountChanged;                                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EFortItemType                     ItemType;                                          // 0x50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C83[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ItemTypeNameOverride;                              // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        MinLevel;                                          // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxLevel;                                          // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0x78(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	class FText                                  ShortDescription;                                  // 0x90(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  Description;                                       // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayNamePrefix;                                 // 0xC0(0x18)(Protected, NativeAccessSpecifierProtected)
	class FText                                  SearchTags;                                        // 0xD8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 GameplayTags;                                      // 0xF0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EFortInventoryFilter              FilterOverride;                                    // 0x110(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C89[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsAccountItem : 1;                                // Mask: 0x1, PropSize: 0x10x114(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bNeverPersisted : 1;                               // Mask: 0x2, PropSize: 0x10x114(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_CB : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C8C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SecondaryCategoryOverrideTags;                     // 0x118(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 TertiaryCategoryOverrideTags;                      // 0x138(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        bAllowMultipleStacks : 1;                          // Mask: 0x1, PropSize: 0x10x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAutoBalanceStacks : 1;                            // Mask: 0x2, PropSize: 0x10x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_CD : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C8E[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxStackSize;                                      // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceAutoPickup : 1;                              // Mask: 0x1, PropSize: 0x10x160(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_CE : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_C90[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPrivateTemplate;                                  // 0x164(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInventorySizeLimited;                             // 0x165(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTemplateAccess               Access;                                            // 0x166(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCalculateRarityFromQualityAndTier;                // 0x167(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortQuality                      Quality;                                           // 0x168(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemTier                     Tier;                                              // 0x169(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemTier                     MaxTier;                                           // 0x16A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_C96[0x5];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UFortTooltip>            TooltipClass;                                      // 0x170(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortTooltipDisplayStatsList> StatList;                                          // 0x198(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  RatingLookup;                                      // 0x1C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            SmallPreviewImage;                                 // 0x1D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             LargePreviewImage;                                 // 0x1D8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortRarity                       Rarity;                                            // 0x200(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_C99[0xF];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            FrontendPreviewMeshOffset;                         // 0x210(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                            AthenaFrontendPreviewMeshOffset;                   // 0x240(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStaticMesh>            FrontendPreviewMeshOverride;                       // 0x270(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeletalMesh>          FrontendPreviewSkeletalMeshOverride;               // 0x298(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortItemDefinition* GetDefaultObj();

	bool ShouldShowPreviewOnCurrentHero();
	bool IsInventorySizeLimited();
	TSubclassOf<class UFortTooltip> GetTooltip();
	struct FSlateBrush GetSmallPreviewImageBrush();
	TSoftObjectPtr<class UTexture2D> GetSmallPreviewImage();
	class FText GetSingleLineDescription();
	class FText GetShortDescription();
	class FText GetRichDescription();
	enum class EFortRarity GetRarity();
	bool GetPreviewStaticMeshAsset(TSoftObjectPtr<class UStaticMesh>* Asset);
	bool GetPreviewSkeletalMeshAsset(TSoftObjectPtr<class USkeletalMesh>* Asset);
	bool GetPreviewPrefabAsset(TSoftClassPtr<class AActor>* Asset);
	struct FTransform GetPreviewMeshOffset();
	void GetPreviewAssets(TArray<TSoftObjectPtr<class UObject>>* Assets);
	class FString GetPersistentName();
	TSoftObjectPtr<class UTexture2D> GetLargePreviewImage();
	class FText GetItemTypeName(bool bUsePlural);
	enum class EFortItemType GetItemType();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
	class FText GetDisplayName(bool bBaseName);
	TArray<class FText> GetDescription();
	void CustomizePreviewPrefab(class AActor* PrefabInstance);
	void CustomizePreviewMesh(class UMeshComponent* Mesh);
	class UFortItem* CreateTemporaryItemInstanceBP(int32 Count, int32 Level);
	class UFortItem* CreateTemporaryInstanceFromExistingItemBP(class UFortItem* ExistingItem, int32 Count, int32 Level);
};

// 0x70 (0x330 - 0x2C0)
// Class FortniteGame.FortAccountItemDefinition
class UFortAccountItemDefinition : public UFortItemDefinition
{
public:
	struct FCurveTableRowHandle                  LevelToXpHandle;                                   // 0x2C0(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  LevelToSacrificeXpHandle;                          // 0x2D0(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   SacrificeRecipe;                                   // 0x2E0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   TransmogSacrificeRow;                              // 0x2F0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDataTableRowHandle>           ConversionRecipes;                                 // 0x300(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   UpgradeRarityRecipeHandle;                         // 0x310(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FString                                GrantToProfileType;                                // 0x320(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAccountItemDefinition* GetDefaultObj();

};

// 0x58 (0x388 - 0x330)
// Class FortniteGame.AthenaCosmeticItemDefinition
class UAthenaCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	struct FRotator                              PreviewPawnRotationOffset;                         // 0x330(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_CAA[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 DisallowedCosmeticTags;                            // 0x340(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAthenaCosmeticMaterialOverride> MaterialOverrides;                                 // 0x360(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EAthenaProgressiveCosmeticType    ProgressionType;                                   // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_CAB[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortCosmeticVariant*>          ItemVariants;                                      // 0x378(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAthenaCosmeticItemDefinition* GetDefaultObj();

	bool HasVariants();
	bool HasModifiableVariants();
	class UFortCosmeticVariant* GetVariantChannel(const struct FGameplayTag& InVariantChannelTag);
	struct FRotator GetPreviewPawnRotationOffset();
	void GetDefaultVariantChannels(TArray<struct FMcpVariantChannelInfo>* OutDefaultVariantData);
};

// 0x18 (0x3A0 - 0x388)
// Class FortniteGame.AthenaCharacterPartItemDefinition
class UAthenaCharacterPartItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x388(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_CAF[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaCharacterPartItemDefinition* GetDefaultObj();

	TArray<class UCustomCharacterPart*> GetCharacterParts();
};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.AthenaBackpackItemDefinition
class UAthenaBackpackItemDefinition : public UAthenaCharacterPartItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UAthenaBackpackItemDefinition* GetDefaultObj();

};

// 0xF8 (0x480 - 0x388)
// Class FortniteGame.AthenaBattleBusItemDefinition
class UAthenaBattleBusItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	TSoftObjectPtr<class USoundBase>             IgnitionSound;                                     // 0x388(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             LobbyLoopingMusic;                                 // 0x3B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             LobbyLoopingSound;                                 // 0x3D8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             FlightLoopingMusic;                                // 0x400(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             FlightLoopingSound;                                // 0x428(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class ABattleBusCosmeticInstanceBase> BusPrefabClass;                                    // 0x450(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_CC1[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaBattleBusItemDefinition* GetDefaultObj();

	class USoundBase* GetLobbyLoopingSound();
	class USoundBase* GetLobbyLoopingMusic();
	class USoundBase* GetIgnitionSound();
	class USoundBase* GetFlightLoopingSound();
	class USoundBase* GetFlightLoopingMusic();
	TSubclassOf<class ABattleBusCosmeticInstanceBase> GetBusPrefabClass();
};

// 0x8 (0x390 - 0x388)
// Class FortniteGame.AthenaCallingCardItemDefinition
class UAthenaCallingCardItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	uint8                                        Pad_CC3[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaCallingCardItemDefinition* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortItem
class UFortItem : public UObject
{
public:
	uint8                                        Pad_D6A[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemChanged;                                     // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_D6B[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemDestroyed;                                   // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_D6C[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bLoadedFromSave : 1;                               // Mask: 0x1, PropSize: 0x10x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTemporaryItemOwningController : 1;                // Mask: 0x2, PropSize: 0x10x70(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D6D[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortItem* GetDefaultObj();

	bool TryGetCategory(enum class EFortItemCategoryOrdinal Ordinal, class FText* OutCategoryDisplayName, bool* OutHasIcon, struct FFortMultiSizeBrush* OutCategoryIconBrush);
	void SetOwningControllerForTemporaryItem(class AFortPlayerController* InController);
	bool IsTemporaryItem();
	bool IsSlotted();
	bool IsSchematicOrCraftedWeapon();
	bool IsSchematic();
	bool IsInventoryOverflowItem();
	bool IsInStorageVault();
	bool IsEquipped();
	bool IsEquipable(class AFortPlayerController* EquippingPC, bool bGamepadSwitchingForHeroAbilities);
	bool IsDroppedItem();
	bool IsActivatable(class AFortPlayerController* FortPC, struct FGameplayTagContainer* FailureReason);
	bool HasRarityUpgrade();
	bool HasEvolutions();
	bool HasDurability();
	class FText GetUpgradeRestrictionReasonText(enum class EItemUpgradeRestrictionReason Reason);
	class UFortPersistentResourceItemDefinition* GetUpgradeResourceItemDefinition();
	int32 GetUpgradeCost();
	enum class EFortItemType GetType();
	enum class EFortItemTier GetTier();
	bool GetTertiaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, enum class EFortBrushSize BrushSize);
	TSoftObjectPtr<class UTexture2D> GetSmallPreviewImage();
	bool GetSecondaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, enum class EFortBrushSize BrushSize);
	class FText GetSearchTags();
	enum class EFortItemType GetSchematicResultType();
	class UFortWeaponItemDefinition* GetSchematicCraftingResultOrCraftedWeaponBP();
	class UFortItemDefinition* GetSchematicCraftingResultBP();
	int32 GetRemainingAmmo();
	int32 GetRecycleValue();
	int32 GetRating();
	struct FLinearColor GetRaritySecondaryColor();
	struct FLinearColor GetRarityColor();
	enum class EFortRarity GetRarity();
	bool GetPrimaryCategory(class FText* ItemCategoryText);
	TArray<TSoftObjectPtr<class UObject>> GetPreviewAssets();
	class AFortPlayerController* GetOwningController();
	int32 GetNumInStack();
	float GetNormalizedDurability();
	enum class EFortItemTier GetMaxTier();
	int32 GetMaxLevel();
	int32 GetLoadedAmmo();
	int32 GetLevelRelativeCostForRarityUpgrade();
	int32 GetLevel();
	TSoftObjectPtr<class UTexture2D> GetLargePreviewImage();
	class FText GetItemTypeName(bool bUsePlural);
	struct FGuid GetItemGuid();
	class UFortItemDefinition* GetItemDefinitionBP();
	enum class EFortInventoryFilter GetFilterCategory();
	class FText GetEvolveRestrictionReasonText(enum class EItemEvolutionRestrictionReason Reason);
	float GetDurability();
	class FText GetDisplayNameWithoutPrefix();
	class FText GetDisplayName();
	class FText GetDescription();
	float GetCooldownTimeRemaining(class AFortPlayerController* FortPC, float* CooldownDuration);
	TArray<struct FFortAlterationSlotStatus> GetAlterationSlots();
	TArray<class UFortAlterationItemDefinition*> GetActiveAlterations(int32 PretendLevel);
	bool DoesMatchSearchString(const class FString& SearchString);
	bool CanUpgradeItemRarity(TArray<enum class EItemEvolutionRestrictionReason>* OutRestrictionReasons);
	bool CanEvolve(TArray<enum class EItemEvolutionRestrictionReason>* OutRestrictionReasons);
	bool CanBeUpgraded(TArray<enum class EItemUpgradeRestrictionReason>* OutRestrictionReasons);
	bool CanBeUnslotted();
	bool CanBeDropped();
	bool AllowedToBeLockedInInventory();
};

// 0x68 (0xE0 - 0x78)
// Class FortniteGame.FortAccountItem
class UFortAccountItem : public UFortItem
{
public:
	int32                                        Level;                                             // 0x78(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Xp;                                                // 0x7C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Item_seen;                                         // 0x80(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Favorite;                                          // 0x84(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Max_level_bonus;                                   // 0x88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D79[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Inventory_overflow_date;                           // 0x90(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAccountItemDefinition*            ItemDefinition;                                    // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InstanceId;                                        // 0xA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TemplateId;                                        // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Quantity;                                          // 0xC8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLocalOnlyItem;                                  // 0xCC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPendingBeingMarkedAsSeen;                       // 0xCD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D7A[0x12];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAccountItem* GetDefaultObj();

	void MarkItemAsSeenBP();
	bool IsFavorite();
	bool HasBeenSeenLocally();
	TArray<struct FFortItemQuantityPair> GetRecyclingRefunds();
};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.AthenaCosmeticAccountItem
class UAthenaCosmeticAccountItem : public UFortAccountItem
{
public:
	TArray<struct FMcpVariantChannelInfo>        VariantChannels;                                   // 0xE0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMcpVariantReader>             Variants;                                          // 0xF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAthenaCosmeticAccountItem* GetDefaultObj();

	bool HasMultipleVariants();
	bool HasCosmeticVariance();
};

// 0x0 (0x100 - 0x100)
// Class FortniteGame.AthenaCharacterItem
class UAthenaCharacterItem : public UAthenaCosmeticAccountItem
{
public:

	static class UClass* StaticClass();
	static class UAthenaCharacterItem* GetDefaultObj();

};

// 0x18 (0x3A0 - 0x388)
// Class FortniteGame.AthenaCharacterItemDefinition
class UAthenaCharacterItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	class UFortHeroType*                         HeroDefinition;                                    // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBackpackItemDefinition*         DefaultBackpack;                                   // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D7E[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaCharacterItemDefinition* GetDefaultObj();

};

// 0x60 (0x3E8 - 0x388)
// Class FortniteGame.FortMontageItemDefinitionBase
class UFortMontageItemDefinitionBase : public UAthenaCosmeticItemDefinition
{
public:
	TSoftObjectPtr<class UAnimMontage>           Animation;                                         // 0x388(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           AnimationFemaleOverride;                           // 0x3B0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreviewLoops;                                      // 0x3D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EmoteCooldownSecs;                                 // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMontageContainsFacialAnimation;                   // 0x3E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayRandomSection;                                // 0x3E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D86[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMontageItemDefinitionBase* GetDefaultObj();

	void PreviewInPIE();
	class UAnimMontage* GetAnimationHardReference(enum class EFortCustomBodyType BodyType, enum class EFortCustomGender Gender);
	TSoftObjectPtr<class UAnimMontage> GetAnimation(enum class EFortCustomBodyType BodyType, enum class EFortCustomGender Gender);
};

// 0x8 (0x3F0 - 0x3E8)
// Class FortniteGame.AthenaConsumableEmoteItemDefinition
class UAthenaConsumableEmoteItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	uint8                                        Pad_D89[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaConsumableEmoteItemDefinition* GetDefaultObj();

};

// 0x20 (0x408 - 0x3E8)
// Class FortniteGame.AthenaDanceItemDefinition
class UAthenaDanceItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	bool                                         bMovingEmote;                                      // 0x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D8C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WalkForwardSpeed;                                  // 0x3EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ChatTriggerCommandName;                            // 0x3F0(0x18)(Edit, AssetRegistrySearchable, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAthenaDanceItemDefinition* GetDefaultObj();

	class FText GetChatTriggerCommandName();
};

// 0xB8 (0x4C0 - 0x408)
// Class FortniteGame.AthenaEmojiItemDefinition
class UAthenaEmojiItemDefinition : public UAthenaDanceItemDefinition
{
public:
	struct FGameplayTag                          EmojiGameplayCueTag;                               // 0x408(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAnimMontage>           PreviewAnimation;                                  // 0x410(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             SpriteSheet;                                       // 0x438(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntPoint                             SheetDimensions;                                   // 0x460(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FrameIndex;                                        // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FrameCount;                                        // 0x46C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               IconSize;                                          // 0x478(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          InitialColor;                                      // 0x484(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialLocation;                                   // 0x494(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialVelocity;                                   // 0x4A0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifetimeIntroSeconds;                              // 0x4AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifetimeMidSeconds;                                // 0x4B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifetimeOutroSeconds;                              // 0x4B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     GeneratedMaterial;                                 // 0x4B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAthenaEmojiItemDefinition* GetDefaultObj();

	class UMaterialInstance* GetMaterialInstance();
	void ConfigureParticleSystem(class UParticleSystemComponent* ParticleSystem);
};

// 0x10 (0xF0 - 0xE0)
// Class FortniteGame.AthenaEventTokenItem
class UAthenaEventTokenItem : public UFortAccountItem
{
public:
	class FString                                Game_code;                                         // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaEventTokenItem* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.AthenaEventTokenItemDefinition
class UAthenaEventTokenItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EEventTokenType                   TokenType;                                         // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D90[0xF];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaEventTokenItemDefinition* GetDefaultObj();

};

// 0x468 (0x728 - 0x2C0)
// Class FortniteGame.FortWorldItemDefinition
class UFortWorldItemDefinition : public UFortItemDefinition
{
public:
	struct FGameplayTagContainer                 RequiredEquipTags;                                 // 0x2C0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 OverrideAutoEquipTags;                             // 0x2E0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bCanAutoEquipByClass;                              // 0x300(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldItemDropBehavior            DropBehavior;                                      // 0x301(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_D97[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bPersistInInventoryWhenFinalStackEmpty : 1;        // Mask: 0x1, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportsQuickbarFocus : 1;                        // Mask: 0x2, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportsQuickbarFocusForGamepadOnly : 1;          // Mask: 0x4, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldActivateWhenFocused : 1;                    // Mask: 0x8, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceFocusWhenAdded : 1;                          // Mask: 0x10, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldShowItemToast : 1;                          // Mask: 0x20, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowDirectionalArrowWhenFarOff : 1;               // Mask: 0x40, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanBeDropped : 1;                                 // Mask: 0x80, PropSize: 0x10x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bItemCanBeStolen : 1;                              // Mask: 0x1, PropSize: 0x10x305(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanBeDepositedInStorageVault : 1;                 // Mask: 0x2, PropSize: 0x10x305(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bItemHasDurability : 1;                            // Mask: 0x4, PropSize: 0x10x305(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_D6 : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_D9C[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DropCount;                                         // 0x308(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowedToBeLockedInInventory : 1;                 // Mask: 0x1, PropSize: 0x10x30C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_D7 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_D9D[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortReplicatedStat               AccumulatingStatType;                              // 0x310(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_D9F[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x318(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        MiniMapViewableDistance;                           // 0x3A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA0[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  OwnerPickupText;                                   // 0x3A8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDataTableCategoryHandle              LootLevelData;                                     // 0x3C0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA1[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PickupMeshTransform;                               // 0x3E0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bOverridePickupMeshTransform : 1;                  // Mask: 0x1, PropSize: 0x10x410(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_D8 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_DA4[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PickupSpecialActorUniqueID;                        // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PickupMinimapIconBrush;                            // 0x420(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             PickupMinimapIconScale;                            // 0x4A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InventorySpecialActorUniqueID;                     // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           InventoryMinimapIconBrush;                         // 0x4B8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             InventoryMinimapIconScale;                         // 0x540(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayPlayerNameForInventoryActor;               // 0x548(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DA7[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  InventoryActorDisplayName;                         // 0x550(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bDisplayHealthForInventoryActor;                   // 0x568(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayShieldForInventoryActor;                   // 0x569(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_DAA[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpecialActorSingleStatData>   SpecialActorPickupStatList;                        // 0x570(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorSingleStatData>   SpecialActorInventoryStatList;                     // 0x580(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PickupDespawnTime;                                 // 0x590(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InStormPickupDespawnTime;                          // 0x5B8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        bDropOnDeath : 1;                                  // Mask: 0x1, PropSize: 0x10x5E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDropOnLogout : 1;                                 // Mask: 0x2, PropSize: 0x10x5E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_D9 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_DAC[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        NetworkCullDistanceOverride;                       // 0x5E8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            PickupStaticMesh;                                  // 0x610(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USkeletalMesh>          PickupSkeletalMesh;                                // 0x638(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortPickupEffect>       PickupEffectOverride;                              // 0x660(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             PickupSound;                                       // 0x688(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             DropSound;                                         // 0x6B0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             DroppedLoopSound;                                  // 0x6D8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   DisassembleRecipe;                                 // 0x700(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DisassembleDurabilityDegradeMinLootPercent;        // 0x710(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisassembleDurabilityDegradeMaxLootPercent;        // 0x714(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasDisintegrationValue;                           // 0x718(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsesCraftingRecipeToGetDisintegrationValue;       // 0x719(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DAE[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FabricationValueOverride;                          // 0x71C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PreferredQuickbarSlot;                             // 0x720(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DAF[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortWorldItemDefinition* GetDefaultObj();

	float GetMaxDurability(int32 ItemLevel);
	int32 GetFabricationValue(bool bUseDisintegrationOverride);
	float GetDPSAtLevel(int32 ItemLevel);
	float GetDamageAtLevel(int32 ItemLevel);
	class UFortWorldItemDefinition* GetAmmoWorldItemDefinition_BP();
	bool CanBeDisassembled();
};

// 0x148 (0x870 - 0x728)
// Class FortniteGame.FortGadgetItemDefinition
class UFortGadgetItemDefinition : public UFortWorldItemDefinition
{
public:
	uint8                                        Pad_DC0[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x730(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAnimInstance>         AnimBPOverride;                                    // 0x740(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortFootstepAudioBank*                FootstepBankOverride;                              // 0x748(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortAbilitySet>        AbilitySet;                                        // 0x750(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAttributeSet>             AttributeSet;                                      // 0x778(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x780(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAttribute>            TrackedAttributes;                                 // 0x790(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bDestroyGadgetWhenTrackedAttributesIsZero;         // 0x7A0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC4[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       OnDestroyParticleSystem;                           // 0x7A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            OnDestroySound;                                    // 0x7B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OnDestroyAttachToSocketName;                       // 0x7B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    GameplayAbility;                                   // 0x7C0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasChargeUp;                                      // 0x7E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDropAllOnEquip;                                   // 0x7E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC7[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 HUDVisibilityTags;                                 // 0x7F0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortDecoItemDefinition> DecoItemDefinition;                                // 0x810(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    LevelAttribute;                                    // 0x838(0x20)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   DamageStatHandle;                                  // 0x858(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanChangePreviewImageDuringGame;                  // 0x868(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_DC9[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGadgetItemDefinition* GetDefaultObj();

	bool HasChargeUp();
	struct FGameplayAttribute GetLevelAttribute();
	TSubclassOf<class UFortGameplayAbility> GetGameplayAbility();
	class UFortDecoItemDefinition* GetDecoItemDefinition();
};

// 0x0 (0x870 - 0x870)
// Class FortniteGame.AthenaGadgetItemDefinition
class UAthenaGadgetItemDefinition : public UFortGadgetItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UAthenaGadgetItemDefinition* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.FortTooltipManager
class UFortTooltipManager : public UObject
{
public:
	TMap<class UClass*, class UFortTooltip*>     Tooltips;                                          // 0x28(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                DamageRecieverProxy;                               // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortTooltipManager* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class FortniteGame.FortTooltip
class UFortTooltip : public UObject
{
public:
	class FText                                  Description;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_DEE[0x50];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTooltip* GetDefaultObj();

	void SetLocalizationText(const class FString& Name, class FText Value);
	void SetLocalizationInt(const class FString& Name, int32 Value);
	void SetLocalizationFloat(const class FString& Name, float Value);
	bool GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
	bool BP_GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool BP_GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool BP_GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool BP_GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortItemDefinitionTooltip
class UFortItemDefinitionTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWorldItemDefinitionTooltip
class UFortWorldItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWorldItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.AthenaGadgetItemDefinitionTooltip
class UAthenaGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UAthenaGadgetItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x210 (0x240 - 0x30)
// Class FortniteGame.AthenaGameData
class UAthenaGameData : public UPrimaryDataAsset
{
public:
	class UFortPersistentResourceItemDefinition* SoftCurrencyDefinition;                            // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* SeasonXPDefinition;                                // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAthenaPickaxeItemDefinition> FallbackPickaxe;                                   // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAthenaDanceItemDefinition> FallbackDance;                                     // 0x68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaSeasonItemDefinition*           FallbackSeason;                                    // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaBattleBusItemDefinition*        DefaultBattleBusSkin;                              // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaGliderItemDefinition*           DefaultGliderSkin;                                 // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaSkyDiveContrailItemDefinition*  DefaultContrailEffect;                             // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCosmeticItemMarkupTable*          CosmeticMarkupTable;                               // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             CosmeticPreviewActionList;                         // 0xB8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortEmotePreviewActor>  EmotePreviewActorClass;                            // 0xE0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortLoadingScreenPreviewActor> LoadingScreenPreviewActorClass;                    // 0x108(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortSprayPreviewActor>  SprayPreviewActorClass;                            // 0x130(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortSkyDiveContrailPreviewActor> SkyDiveContrailPreviewActorClass;                  // 0x158(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortBodyPartOverridePreviewActor> BodyPartOverridePreviewActorClass;                 // 0x180(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EAthenaCustomizationCategory, TSoftClassPtr<class AActor>> CosmeticPreviewActionMap;                          // 0x1A8(0x50)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UAthenaCharacterItemDefinition*> RandomCharacters;                                  // 0x1F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTagMessage>           UnableToPerformActionMessages;                     // 0x208(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     TimeOfDayRGBForPeripherals;                        // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             AthenaSoundMix;                                    // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           DroneCameraAnim;                                   // 0x228(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           ThirdPersonCameraAnim;                             // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraAnim*                           ArenaCameraAnim;                                   // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaGameData* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class FortniteGame.AthenaGliderItem
class UAthenaGliderItem : public UAthenaCosmeticAccountItem
{
public:

	static class UClass* StaticClass();
	static class UAthenaGliderItem* GetDefaultObj();

};

// 0x138 (0x4C0 - 0x388)
// Class FortniteGame.AthenaGliderItemDefinition
class UAthenaGliderItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	enum class EFortGliderType                   GliderType;                                        // 0x388(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E10[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortPlayerParachute>    ParachutePrefabClass;                              // 0x390(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x3B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0x3E0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        TrailParticles;                                    // 0x408(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        OwnerTrailParticles;                               // 0x430(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bActivateTrailsOnRotationalMovement;               // 0x458(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E13[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TrailParamName;                                    // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             OpenSound;                                         // 0x468(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             CloseSound;                                        // 0x490(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_E15[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaGliderItemDefinition* GetDefaultObj();

	TSubclassOf<class AFortPlayerParachute> GetParachutePrefabClass();
};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.AthenaHatItemDefinition
class UAthenaHatItemDefinition : public UAthenaCharacterPartItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UAthenaHatItemDefinition* GetDefaultObj();

};

// 0x48 (0x3D0 - 0x388)
// Class FortniteGame.AthenaLoadingScreenItemDefinition
class UAthenaLoadingScreenItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	TSoftObjectPtr<class UTexture2D>             BackgroundImage;                                   // 0x388(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BackgroundDesiredSize;                             // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackgroundColor;                                   // 0x3B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E1A[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaLoadingScreenItemDefinition* GetDefaultObj();

};

// 0x28 (0x3B0 - 0x388)
// Class FortniteGame.AthenaMapMarkerItemDefinition
class UAthenaMapMarkerItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	TSoftClassPtr<class AFortMapMarkerTopperActor> TopperActorClass;                                  // 0x388(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaMapMarkerItemDefinition* GetDefaultObj();

};

// 0x8 (0x390 - 0x388)
// Class FortniteGame.AthenaMusicOverrideItemDefinition
class UAthenaMusicOverrideItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	uint8                                        Pad_E1E[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaMusicOverrideItemDefinition* GetDefaultObj();

};

// 0x1F8 (0x608 - 0x410)
// Class FortniteGame.FortNavSystem
class UFortNavSystem : public UNavigationSystemV1
{
public:
	uint8                                        Pad_E24[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UNavArea>                DefaultSmashableArea;                              // 0x420(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownArea;                                      // 0x448(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownSmashableArea;                             // 0x470(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownSmashableArea2;                            // 0x498(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                JumpDownSmashableArea3;                            // 0x4C0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARecastNavMesh*>                NamedNavmeshes;                                    // 0x4E8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortNavLinkBlockerComponent*>  NavLinkBlockers;                                   // 0x4F8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_E26[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortPathCostEstimator*>        PathEstimators;                                    // 0x518(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortInescapableZoneTracker*>   InescapableZones;                                  // 0x528(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        bUseStaticMeshLinks : 1;                           // Mask: 0x1, PropSize: 0x10x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseStaticWorldLinksDown : 1;                      // Mask: 0x2, PropSize: 0x10x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseStaticWorldLinksUp : 1;                        // Mask: 0x4, PropSize: 0x10x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseJumpLinkActors : 1;                            // Mask: 0x8, PropSize: 0x10x538(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_DF : 4;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_E27[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DirtyAreasUpdateFreqInactive;                      // 0x53C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E28[0x90];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortNavigationGraph*                  NavGraphData;                                      // 0x5D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        CompositePathGoals;                                // 0x5D8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBox>                          AtlasCells;                                        // 0x5E8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_E2A[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNavSystem* GetDefaultObj();

	void OnNavDataRegistered(class ANavigationData* NavData);
	bool IsNavmeshInRadiusInitialized(class UObject* WorldContext, struct FVector& TestLocation, float TestRadius);
};

// 0x10 (0x618 - 0x608)
// Class FortniteGame.AthenaNavSystem
class UAthenaNavSystem : public UFortNavSystem
{
public:
	uint8                                        bUseBuildingGridAsNavigableSpace : 1;              // Mask: 0x1, PropSize: 0x10x608(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_E0 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_E2C[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaAISpawnManager*                 SpawnManager;                                      // 0x610(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAthenaNavSystem* GetDefaultObj();

};

// 0x18 (0x68 - 0x50)
// Class FortniteGame.AthenaNavSystemConfig
class UAthenaNavSystemConfig : public UNavigationSystemModuleConfig
{
public:
	TArray<struct FNavDataConfig>                SupportedAgents;                                   // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bUseBuildingGridAsNavigableSpace : 1;              // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDiscardNavDataFromSublevels : 1;                  // Mask: 0x2, PropSize: 0x10x60(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E2F[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaNavSystemConfig* GetDefaultObj();

};

// 0x8 (0x390 - 0x388)
// Class FortniteGame.AthenaPickaxeItemDefinition
class UAthenaPickaxeItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	class UFortWeaponMeleeItemDefinition*        WeaponDefinition;                                  // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaPickaxeItemDefinition* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class FortniteGame.AthenaStatsSet
class UAthenaStatsSet : public UObject
{
public:
	struct FAthenaMatchStats                     CumulativeStats;                                   // 0x28(0xA0)(NativeAccessSpecifierPublic)
	TArray<struct FAthenaMatchStats>             BestMatches;                                       // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaStatsSet* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.AthenaSeasonStats
class UAthenaSeasonStats : public UObject
{
public:
	class UAthenaStatsSet*                       CumulativeStats;                                   // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UAthenaStatsSet*>    Buckets;                                           // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaSeasonItemDefinition*           SeasonDefinition;                                  // 0x80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaSeasonStats* GetDefaultObj();

	class UAthenaSeasonItemDefinition* GetSeasonDefintion();
};

// 0x168 (0x190 - 0x28)
// Class FortniteGame.AthenaPlayerMatchReport
class UAthenaPlayerMatchReport : public UObject
{
public:
	UMulticastDelegateProperty_                  OnRewardsAvailable;                                // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStatsAvailable;                                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamStatsAvailable;                              // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FAthenaLevelInfo                      InitialLevelInfo;                                  // 0x58(0x24)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasMatchStats;                                    // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E44[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaMatchStats                     MatchStats;                                        // 0x80(0xA0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bHasTeamStats;                                     // 0x120(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E45[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaMatchTeamStats                 TeamStats;                                         // 0x124(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasRewards;                                       // 0x12C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E46[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaRewardResult                   EndOfMatchResults;                                 // 0x130(0x40)(NativeAccessSpecifierPublic)
	struct FAthenaTravelRecord                   TravelRecord;                                      // 0x170(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TravelLogUpdated;                                  // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaPlayerMatchReport* GetDefaultObj();

	void GetXpRewards(TArray<struct FAthenaMatchXpReward>* XpRewards);
	int32 GetTotalSeasonalXpEarned();
	int32 GetTotalScoreEarned();
	int32 GetTotalBookXpEarned();
	void GetLootRewards(TArray<struct FAthenaMatchLootReward>* LootRewards);
	void DataAvailableEvent__DelegateSignature();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.AthenaQuickChatBank
class UAthenaQuickChatBank : public UDataAsset
{
public:
	TArray<struct FAthenaQuickChatLeafEntry>     ChatOptions;                                       // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAthenaQuickChatBank* GetDefaultObj();

};

// 0x18 (0x348 - 0x330)
// Class FortniteGame.FortEventItemDefinitionBase
class UFortEventItemDefinitionBase : public UFortAccountItemDefinition
{
public:
	int32                                        EventPriority;                                     // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateByDefault;                                // 0x334(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E4C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RequiredEventTag;                                  // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DisallowedEventTag;                                // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortEventItemDefinitionBase* GetDefaultObj();

	void CreateCalendarPayload();
};

// 0x38 (0x380 - 0x348)
// Class FortniteGame.AthenaSeasonalDecorEvent
class UAthenaSeasonalDecorEvent : public UFortEventItemDefinitionBase
{
public:
	TSoftClassPtr<class AFortAthenaSupplyDrop>   SupplyDropOverride;                                // 0x348(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceBattleBusOverrideEvenIfCosmeticSlotted;      // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E50[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaBattleBusItemDefinition*        BattleBusOverride;                                 // 0x378(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaSeasonalDecorEvent* GetDefaultObj();

};

// 0xE0 (0x410 - 0x330)
// Class FortniteGame.AthenaSeasonItemDefinition
class UAthenaSeasonItemDefinition : public UFortAccountItemDefinition
{
public:
	int32                                        SeasonNumber;                                      // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSeasonLevels;                                   // 0x334(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumBookLevels;                                     // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E52[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            SeasonXpCurve;                                     // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BookXpCurve;                                       // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaSeasonShopVisibility       SeasonShopVisibility;                              // 0x350(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaChallengeTabVisibility     ChallengesVisibility;                              // 0x351(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E54[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SeasonStorefront;                                  // 0x358(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BattlePassLevelOfferID;                            // 0x368(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaRewardSchedule                 SeasonXpScheduleFree;                              // 0x378(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FAthenaRewardSchedule                 BookXpScheduleFree;                                // 0x388(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FAthenaRewardSchedule                 BookXpSchedulePaid;                                // 0x398(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FAthenaSeasonBannerLevelSchedule      SeasonBannerSchedule;                              // 0x3A8(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortChallengeBundleScheduleDefinition* ChallengeSchedulePaid;                             // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortChallengeBundleScheduleDefinition*> ChallengeSchedulesAlwaysShown;                     // 0x3C0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FAthenaRewardScheduleLevel            SeasonFirstWinRewards;                             // 0x3D0(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FAthenaRewardScheduleLevel            BattleStarSubstitutionReward;                      // 0x3E0(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> ExpiringRewardTypes;                               // 0x3F0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UFortItemDefinition>> TokensToRemoveAtSeasonEnd;                         // 0x400(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAthenaSeasonItemDefinition* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.AthenaSeasonTreasureItemDefinition
class UAthenaSeasonTreasureItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UAthenaSeasonTreasureItemDefinition* GetDefaultObj();

};

// 0x28 (0x3B0 - 0x388)
// Class FortniteGame.AthenaSkyDiveContrailItemDefinition
class UAthenaSkyDiveContrailItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	TSoftObjectPtr<class UParticleSystem>        ContrailEffect;                                    // 0x388(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAthenaSkyDiveContrailItemDefinition* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class FortniteGame.AthenaSpectatorPlayerListRowData
class UAthenaSpectatorPlayerListRowData : public UObject
{
public:
	UMulticastDelegateProperty_                  OnIsSpectatorTargetChanged;                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnKillsChanged;                                    // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x48(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamNumber;                                        // 0x4C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TeamColor;                                         // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Kills;                                             // 0x70(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRecordingPlayer;                                 // 0x74(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpectatorTarget;                                 // 0x75(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E6C[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      PlayerUniqueId;                                    // 0x80(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAthenaSpectatorPlayerListRowData* GetDefaultObj();

	void SetKills(int32 InKills);
	class AFortPlayerStateAthena* GetPlayerState();
};

// 0x68 (0x90 - 0x28)
// Class FortniteGame.AthenaSpectatorScoreboardRowData
class UAthenaSpectatorScoreboardRowData : public UObject
{
public:
	int32                                        Rank;                                              // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerNumber;                                 // 0x2C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E74[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeamNumber;                                        // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerNumber;                                      // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          TeamColor;                                         // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x48(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Kills;                                             // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EScoreboardState                  ScoreboardState;                                   // 0x5C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRecordingPlayer;                                // 0x5D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSpectatorTarget;                                // 0x5E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E78[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateAthena*                PlayerState;                                       // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      PlayerUniqueId;                                    // 0x68(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAthenaSpectatorScoreboardRowData* GetDefaultObj();

	class AFortPlayerStateAthena* GetPlayerState();
};

// 0x68 (0x470 - 0x408)
// Class FortniteGame.AthenaSprayItemDefinition
class UAthenaSprayItemDefinition : public UAthenaDanceItemDefinition
{
public:
	TSoftObjectPtr<class UMaterialInterface>     DecalMaterial;                                     // 0x408(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProgressiveCosmeticStatName;                       // 0x430(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBannerAsTexture;                               // 0x438(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E7C[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             DecalTexture;                                      // 0x440(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E7D[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaSprayItemDefinition* GetDefaultObj();

	bool ShouldUseBannerAsTexture();
	TSoftObjectPtr<class UTexture2D> GetDecalTexture();
	TSoftObjectPtr<class UMaterialInterface> GetDecalMaterial();
};

// 0x58 (0x460 - 0x408)
// Class FortniteGame.AthenaToyItemDefinition
class UAthenaToyItemDefinition : public UAthenaDanceItemDefinition
{
public:
	TSoftClassPtr<class UFortGameplayAbility>    ToySpawnAbility;                                   // 0x408(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortToyActorBase>       FrontEndPreviewActor;                              // 0x430(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E7E[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaToyItemDefinition* GetDefaultObj();

};

// 0x78 (0x400 - 0x388)
// Class FortniteGame.AthenaVehicleCosmeticItemDefinition
class UAthenaVehicleCosmeticItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	enum class EFortVehicleDecoType              DecoType;                                          // 0x388(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E80[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DecoSocketName;                                    // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E81[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            DecoSocketTransform;                               // 0x3A0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            TestDecoMesh;                                      // 0x3D0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E84[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaVehicleCosmeticItemDefinition* GetDefaultObj();

};

// 0x8 (0x3F0 - 0x3E8)
// Class FortniteGame.AthenaVictoryPoseItemDefinition
class UAthenaVictoryPoseItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	uint8                                        Pad_E87[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaVictoryPoseItemDefinition* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class FortniteGame.AthenaWeaponAlterationEvent
class UAthenaWeaponAlterationEvent : public UFortEventItemDefinitionBase
{
public:
	TArray<struct FAthenaWeaponAlterationRule>   AlterationRules;                                   // 0x348(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStopAfterFirstMatch;                              // 0x358(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPlayerCosmeticWeaponSkins;                   // 0x359(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_E8B[0x6];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaWeaponAlterationEvent* GetDefaultObj();

};

// 0x8 (0x390 - 0x388)
// Class FortniteGame.AthenaWeaponCosmeticItemDefinition
class UAthenaWeaponCosmeticItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	uint8                                        Pad_E8D[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAthenaWeaponCosmeticItemDefinition* GetDefaultObj();

};

// 0x188 (0x4B0 - 0x328)
// Class FortniteGame.TimeOfDayController_BlueprintBase
class ATimeOfDayController_BlueprintBase : public AActor
{
public:
	uint8                                        bOverride_FogCutoffDistance : 1;                   // Mask: 0x1, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDensity : 1;                          // Mask: 0x2, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogHeightFalloff : 1;                    // Mask: 0x4, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogInscatteringColor : 1;                // Mask: 0x8, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogMaxOpacity : 1;                       // Mask: 0x10, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogStartDistance : 1;                    // Mask: 0x20, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDirectionalInscatteringColor : 1;     // Mask: 0x40, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDirectionalInscatteringExponent : 1;  // Mask: 0x80, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogDirectionalInscatteringStartDistance : 1; // Mask: 0x1, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogFullyDirectionalInscatteringColorDistance : 1; // Mask: 0x2, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogUseVolumetricFog : 1;                 // Mask: 0x4, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogExtinctionScale : 1;     // Mask: 0x8, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogDistance : 1;            // Mask: 0x10, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogScatteringDistribution : 1; // Mask: 0x20, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_FogVolumetricFogAlbedo : 1;              // Mask: 0x40, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_TimeOfDay : 1;                           // Mask: 0x80, PropSize: 0x10x329(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_PostProcessBlendWeight : 1;              // Mask: 0x1, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_PostProcessFogOpacity : 1;               // Mask: 0x2, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_PostProcessFogColor : 1;                 // Mask: 0x4, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_DirectionalLightColor : 1;               // Mask: 0x8, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_DirectionalLightIntensity : 1;           // Mask: 0x10, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_DirectionalLightAngle : 1;               // Mask: 0x20, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyboxHorizonColor : 1;                  // Mask: 0x40, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyboxZenithColor : 1;                   // Mask: 0x80, PropSize: 0x10x32A(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudAmountHorizon : 1;                  // Mask: 0x1, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudAmountZenith : 1;                   // Mask: 0x2, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudSpeedMaster : 1;                    // Mask: 0x4, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudSpeedDetailTextureOne : 1;          // Mask: 0x8, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_CloudSpeedDetailTextureTwo : 1;          // Mask: 0x10, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_StormStrength : 1;                       // Mask: 0x20, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SunScale : 1;                            // Mask: 0x40, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SunDiscIntensity : 1;                    // Mask: 0x80, PropSize: 0x10x32B(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyLightColor : 1;                       // Mask: 0x1, PropSize: 0x10x32C(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyLightIntensity : 1;                   // Mask: 0x2, PropSize: 0x10x32C(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverride_SkyLightCubemap : 1;                     // Mask: 0x4, PropSize: 0x10x32C(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_E3 : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_E9D[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FogCutoffDistance;                                 // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogDensity;                                        // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogHeightFalloff;                                  // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogInscatteringColor;                              // 0x33C(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogMaxOpacity;                                     // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogStartDistance;                                  // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          FogDirectionalInscatteringColor;                   // 0x354(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogDirectionalInscatteringExponent;                // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogDirectionalInscatteringStartDistance;           // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogFullyDirectionalInscatteringColorDistance;      // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         FogUseVolumetricFog;                               // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_E9F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FogVolumetricFogExtinctionScale;                   // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogVolumetricFogDistance;                          // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FogVolumetricFogScatteringDistribution;            // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                FogVolumetricFogAlbedo;                            // 0x380(0x4)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDay;                                         // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostProcessBlendWeight;                            // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostProcessFogOpacity;                             // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          PostProcessFogColor;                               // 0x390(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          DirectionalLightColor;                             // 0x3A0(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DirectionalLightIntensity;                         // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DirectionalLightAngle;                             // 0x3B4(0xC)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkyboxHorizonColor;                                // 0x3C0(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkyboxZenithColor;                                 // 0x3D0(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudAmountHorizon;                                // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudAmountZenith;                                 // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudSpeedMaster;                                  // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudSpeedDetailTextureOne;                        // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloudSpeedDetailTextureTwo;                        // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StormStrength;                                     // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunScale;                                          // 0x3F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SunDiscIntensity;                                  // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, float>                     ScalarParameters;                                  // 0x400(0x50)(Edit, BlueprintVisible, ZeroConstructor, Interp, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          SkyboxHorizonMaterialParameters;                   // 0x450(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          SkyboxZenithMaterialParameters;                    // 0x460(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          SkyLightColor;                                     // 0x470(0x10)(Edit, BlueprintVisible, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkyLightIntensity;                                 // 0x480(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EA2[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureCube*                          SkyLightCubemap;                                   // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTimeOfDayManager*                 TODM;                                              // 0x490(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExponentialHeightFogComponent*        ExponentialHeightFog;                              // 0x498(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDirectionalLightComponent*            DirectionalLight;                                  // 0x4A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkyLightComponent*                    SkyLight;                                          // 0x4A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATimeOfDayController_BlueprintBase* GetDefaultObj();

	void SetSunOrMoonScale();
	void SetPostProcessSettings();
};

// 0x28 (0x468 - 0x440)
// Class FortniteGame.HoverDronePawn
class AHoverDronePawn : public AFortReplaySpectatorPawnBase
{
public:
	uint8                                        Pad_EA9[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHoverDroneMovementComponent*          HoverMoveComponent;                                // 0x458(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EAA[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHoverDronePawn* GetDefaultObj();

	bool IsMaintainingConstantAltitude();
	float GetAltitude();
};

// 0x80 (0x4E8 - 0x468)
// Class FortniteGame.AutoFrameDronePawn
class AAutoFrameDronePawn : public AHoverDronePawn
{
public:
	uint8                                        Pad_EAC[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsToTrack;                                     // 0x480(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class AActor*, float>                   TrackedActorTimes;                                 // 0x490(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_EAD[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAutoFrameDronePawn* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class FortniteGame.AutomationPerfMonitorManager
class UAutomationPerfMonitorManager : public UObject
{
public:
	uint8                                        Pad_EB2[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        DesiredStats;                                      // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRecording;                                        // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EB3[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeSinceLastRecord;                               // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastGoodFrame;                                     // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EB4[0x5C];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAutomationPerfMonitorManager* GetDefaultObj();

	void StopRecordingFTestPerf();
	void StartRecordingFTestPerf(const TArray<class FString>& StatsToRecord);
	bool IsRecordingFTestPerf();
	float GetStatAverage(const class FString& StatName);
	class UAutomationPerfMonitorManager* GetPerfMonitorInstance();
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.BattleBusCosmeticInstanceBase
class ABattleBusCosmeticInstanceBase : public AActor
{
public:
	uint8                                        Pad_EB6[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaBattleBusItemDefinition*        ActiveSkin;                                        // 0x330(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABattleBusCosmeticInstanceBase* GetDefaultObj();

};

// 0x2B8 (0x5E0 - 0x328)
// Class FortniteGame.BuildingActor
class ABuildingActor : public AActor
{
public:
	uint8                                        Pad_EFA[0x68];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 MyGuid;                                            // 0x390(0x10)(Net, DuplicateTransient, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  InteractionText;                                   // 0x3A0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        OwnerPersistentID;                                 // 0x3B8(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SavedHealthPct;                                    // 0x3BC(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0x3C0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavArea>                AreaClass;                                         // 0x3D8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UNavLinkDefinition>      NavigationLinksClass;                              // 0x400(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_EFC[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentBuildingLevel;                              // 0x438(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaximumBuildingLevel;                              // 0x43C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortBuildingActorSet>     BuildingAttributeSetClass;                         // 0x440(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBuildingActorSet*                 BuildingAttributeSet;                              // 0x448(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x450(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class EAttributeInitLevelSource         AttributeInitLevelSource;                          // 0x460(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAbilitySystemComponentCreationPolicy AbilitySystemComponentCreationPolicy;              // 0x461(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPhysicalSurface                  PrimarySurfaceType;                                // 0x462(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBaseWeaponDamage             WeaponResponseType;                                // 0x463(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifespanAfterDeath;                                // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x468(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayCueParameters>        PendingDamageImpactCues;                           // 0x470(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bUseFortHealthBarIndicator;                        // 0x480(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_EFF[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HealthBarIndicatorWidth;                           // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthBarIndicatorVerticalOffset;                  // 0x488(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F00[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHealthBarIndicator*               HealthBarIndicator;                                // 0x490(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HealthBarIndicatorDifficultyRating;                // 0x498(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F01[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ConstTags;                                         // 0x4A0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 StaticGameplayTags;                                // 0x4C0(0x20)(Protected, NativeAccessSpecifierProtected)
	enum class EDynamicBuildingPlacementType     DynamicBuildingPlacementType;                      // 0x4E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENavigationObstacleOverride       NavigationObstacleOverride;                        // 0x4E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInvulnerable : 1;                               // Mask: 0x1, PropSize: 0x10x4E2(0x1)(BlueprintVisible, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasRegisteredActorStateAtLeastOnce : 1;           // Mask: 0x2, PropSize: 0x10x4E2(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDirtyForLevelRecordSave : 1;                      // Mask: 0x4, PropSize: 0x10x4E2(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSavedMetaPropertiesProcessed : 1;                 // Mask: 0x8, PropSize: 0x10x4E2(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpgradeUsesSameClass : 1;                         // Mask: 0x10, PropSize: 0x10x4E2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisplayLevelInInfoWidget : 1;                     // Mask: 0x20, PropSize: 0x10x4E2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowUpgradeRegardlessOfPlayerBuildLevel : 1;     // Mask: 0x40, PropSize: 0x10x4E2(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSurpressHealthBar : 1;                            // Mask: 0x80, PropSize: 0x10x4E2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCreateVerboseHealthLogs : 1;                      // Mask: 0x1, PropSize: 0x10x4E3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsIndestructibleForTargetSelection : 1;           // Mask: 0x2, PropSize: 0x10x4E3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyed : 1;                                    // Mask: 0x4, PropSize: 0x10x4E3(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPersistToWorld : 1;                               // Mask: 0x8, PropSize: 0x10x4E3(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRefreshFullSaveDataBeforeZoneSave : 1;            // Mask: 0x10, PropSize: 0x10x4E3(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBeingDragged : 1;                                 // Mask: 0x20, PropSize: 0x10x4E3(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRotateInPlaceGame : 1;                            // Mask: 0x40, PropSize: 0x10x4E3(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_E8 : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsNavigationModifier : 1;                         // Mask: 0x1, PropSize: 0x10x4E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlockNavigationLinks : 1;                         // Mask: 0x2, PropSize: 0x10x4E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanExportNavigationCollisions : 1;                // Mask: 0x4, PropSize: 0x10x4E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanExportNavigationObstacle : 1;                  // Mask: 0x8, PropSize: 0x10x4E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorNavLinksX : 1;                              // Mask: 0x10, PropSize: 0x10x4E4(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorNavLinksY : 1;                              // Mask: 0x20, PropSize: 0x10x4E4(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreMoveGoalCollisionRadius : 1;                // Mask: 0x40, PropSize: 0x10x4E4(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceDisableRootNavigationRelevance : 1;          // Mask: 0x80, PropSize: 0x10x4E4(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAutomationPass : 1;                          // Mask: 0x1, PropSize: 0x10x4E5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAutomationPass_NavmeshOnTop : 1;             // Mask: 0x2, PropSize: 0x10x4E5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAutomationPass_SmashableFlat : 1;            // Mask: 0x4, PropSize: 0x10x4E5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsNavigationRelevant : 1;                         // Mask: 0x8, PropSize: 0x10x4E5(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBlockNavLinksInCell : 1;                          // Mask: 0x10, PropSize: 0x10x4E5(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseHotSpotAsMoveGoalReplacement : 1;              // Mask: 0x20, PropSize: 0x10x4E5(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_E9 : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bWorldReadyCalled : 1;                             // Mask: 0x80, PropSize: 0x10x4E5(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBeingRotatedOrScaled : 1;                         // Mask: 0x1, PropSize: 0x10x4E6(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBeingTranslated : 1;                              // Mask: 0x2, PropSize: 0x10x4E6(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRotateInPlaceEditor : 1;                          // Mask: 0x4, PropSize: 0x10x4E6(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEditorPlaced : 1;                                 // Mask: 0x8, PropSize: 0x10x4E6(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPlayerPlaced : 1;                                 // Mask: 0x10, PropSize: 0x10x4E6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldTick : 1;                                   // Mask: 0x20, PropSize: 0x10x4E6(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsesDayPhaseChange : 1;                           // Mask: 0x40, PropSize: 0x10x4E6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDynamic : 1;                                    // Mask: 0x80, PropSize: 0x10x4E6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDynamicOnDedicatedServer : 1;                   // Mask: 0x1, PropSize: 0x10x4E7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsMovable : 1;                                    // Mask: 0x2, PropSize: 0x10x4E7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask: 0x4, PropSize: 0x10x4E7(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceDamagePing : 1;                              // Mask: 0x8, PropSize: 0x10x4E7(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyFoliageWhenPlaced : 1;                     // Mask: 0x10, PropSize: 0x10x4E7(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bObstructTrapTargeting : 1;                        // Mask: 0x20, PropSize: 0x10x4E7(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_EA : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bDoNotBlockBuildings : 1;                          // Mask: 0x80, PropSize: 0x10x4E7(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceBlockBuildings : 1;                          // Mask: 0x1, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIgnoreCollisionWithCriticalActors : 1;            // Mask: 0x2, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyOnPlayerBuildingPlacement : 1;             // Mask: 0x4, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseCentroidForBlockBuildingsCheck : 1;            // Mask: 0x8, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayerBuildable : 1;                            // Mask: 0x10, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFireBuiltAndDestroyedEvents : 1;                  // Mask: 0x20, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowInteract : 1;                                // Mask: 0x40, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowHostileBlueprintInteraction : 1;             // Mask: 0x80, PropSize: 0x10x4E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysUseNetCullDistanceSquaredForRelevancy : 1;  // Mask: 0x1, PropSize: 0x10x4E9(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHighlightDirty : 1;                               // Mask: 0x2, PropSize: 0x10x4E9(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceReplayRollback : 1;                          // Mask: 0x4, PropSize: 0x10x4E9(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_EB : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EFortBuildingType                 BuildingType;                                      // 0x4EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         Team;                                              // 0x4EB(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F07[0xC];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDied;                                            // 0x4F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDamaged;                                         // 0x508(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortMission*                          AssociatedMissionParam;                            // 0x518(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlacementActor*                   OriginatingPlacementActor;                         // 0x520(0x8)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnInteract;                                        // 0x528(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  InteractionSpeed;                                  // 0x538(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F08[0x30];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DataVersion;                                       // 0x578(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastTakeHitTimeTimeout;                            // 0x57C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PlayHitSound;                                      // 0x580(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CullDistance;                                      // 0x588(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SnapGridSize;                                      // 0x58C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VertSnapGridSize;                                  // 0x590(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SnapOffset;                                        // 0x594(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CentroidOffset;                                    // 0x5A0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BaseLocToPivotOffset;                              // 0x5AC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CustomState;                                       // 0x5B8(0x10)(Net, ZeroConstructor, SaveGame, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingActorHotSpotConfig*           HotSpotConfig;                                     // 0x5C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnBuildingHealthChanged;                           // 0x5D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABuildingActor* GetDefaultObj();

	bool UseDefaultHealthBar();
	void SilentDie();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void SetQuestHighlight(bool Enabled);
	void SetNavigationModifier(bool bEnableModifier);
	void SetHealthBarIndicatorDifficultyRating(int32 InDisplayLevel);
	void SetCustomState(const class FString& NewState);
	void SetCanExportNavigationObstacle(bool InCanExportNavigationObstacle);
	void RemoveEditorOnlyInstanceGameplayTags(struct FGameplayTagContainer& TagsToRemove);
	void PlacedByPlayer(class AFortPlayerStateZone* PlayerState);
	void PlacedByPlacementTool();
	void OnWorldReady();
	void OnSetCustomDepthStencilValue(TArray<class UPrimitiveComponent*>& PrimComponents, bool bUseCustomDepth, int32 StencilValue, bool* bOutConsume);
	void OnRep_Team();
	void OnRep_CustomState();
	void OnRep_CurrentBuildingLevel();
	void OnRep_BuildingAttributeSet();
	void OnRep_bForceReplayRollback();
	void OnRep_AbilitySystemComponent();
	void OnMatchStarted();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnBuildingActorInitialized(enum class EFortBuildingInitializationReason InitializationReason, enum class EFortBuildingPersistentState BuildingPersistentState);
	bool IsPlayerBuilt();
	bool IsDamaged();
	bool IsAcceptablePositionForPlacement(struct FVector& InLocation, struct FRotator& InRotation, class AFortDecoTool* DecoTool, bool bIsCDO, class FText* OutFailureReason);
	void InitializeKismetSpawnedBuildingActor(class ABuildingActor* BuildingOwner, class AFortPlayerController* SpawningController);
	bool HasHealthLeft();
	void HandleDestroyed();
	float GetShieldPercent();
	float GetShieldOrHealthPercent();
	float GetShield();
	class AFortPlayerState* GetOwningPlayerState();
	class AController* GetOwningController();
	float GetMissingHealth();
	float GetMaxShield();
	float GetMaxHealth();
	float GetHealthPercent();
	float GetHealth();
	void GetEditorTestTags(struct FGameplayTagContainer* TagContainer);
	class FString GetCustomState();
	int32 GetCurrentBuildingLevel();
	struct FVector GetCentroid();
	void GameplayCue_InstantDeath(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ForceBuildingHealth(float NewHealth);
	void CustomStateChanged();
	bool BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn);
	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	class FText BlueprintGetFailedInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
	void AddEditorOnlyInstanceGameplayTags(struct FGameplayTagContainer& NewTags);
};

// 0x80 (0x660 - 0x5E0)
// Class FortniteGame.BGAConsumableSpawner
class ABGAConsumableSpawner : public ABuildingActor
{
public:
	uint8                                        Pad_F11[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       DummyRoot;                                         // 0x5F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnLootTierGroup;                                // 0x5F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingActor*                        AssociatedBuildingActor;                           // 0x600(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvQuery*                             QueryTemplate;                                     // 0x608(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAIDynamicParam>               QueryConfig;                                       // 0x610(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAlignSpawnedActorsToSurface;                      // 0x620(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F13[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortItemEntry>                ConsumablesToSpawn;                                // 0x628(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_F14[0x28];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABGAConsumableSpawner* GetDefaultObj();

};

// 0x30 (0x2F0 - 0x2C0)
// Class FortniteGame.BGAConsumableWrapperItemDefinition
class UBGAConsumableWrapperItemDefinition : public UFortItemDefinition
{
public:
	TSoftClassPtr<class ABuildingGameplayActorConsumable> ConsumableClass;                                   // 0x2C0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F17[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBGAConsumableWrapperItemDefinition* GetDefaultObj();

};

// 0x50 (0x640 - 0x5F0)
// Class FortniteGame.BuildingActorEditorComponent
class UBuildingActorEditorComponent : public UStaticMeshComponent
{
public:
	TSoftObjectPtr<class UMaterialInterface>     CurrentlySnappedMaterial;                          // 0x5F0(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            CubeMesh;                                          // 0x618(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBuildingActorEditorComponent* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class FortniteGame.BuildingActorHotSpotConfig
class UBuildingActorHotSpotConfig : public UDataAsset
{
public:
	struct FBuildingActorHotSpotDirection        DirectionSetup[0x6];                               // 0x30(0xC0)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBuildingActorHotSpotDirection        DefaultSetup;                                      // 0xF0(0x20)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UAIHotSpotConfig*                      ExtraTypeConfig;                                   // 0x110(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasDirectionalSetup : 1;                          // Mask: 0x1, PropSize: 0x10x118(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F1A[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingActorHotSpotConfig* GetDefaultObj();

};

// 0x0 (0x560 - 0x560)
// Class FortniteGame.BuildingActorHotSpotRenderingComponent
class UBuildingActorHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	static class UClass* StaticClass();
	static class UBuildingActorHotSpotRenderingComponent* GetDefaultObj();

};

// 0x580 (0xB60 - 0x5E0)
// Class FortniteGame.BuildingSMActor
class ABuildingSMActor : public ABuildingActor
{
public:
	uint8                                        Pad_F34[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingTextureData*                  TextureData[0x4];                                  // 0x5E8(0x20)(Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           StaticMesh;                                        // 0x608(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTierMeshSets>                 AlternateMeshes;                                   // 0x610(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AltMeshIdx;                                        // 0x620(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x624(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAllowBuildingCheat : 1;                           // Mask: 0x1, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrored : 1;                                     // Mask: 0x2, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoCollision : 1;                                  // Mask: 0x4, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoCameraCollision : 1;                            // Mask: 0x8, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCameraOnlyCollision : 1;                          // Mask: 0x10, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoPawnCollision : 1;                              // Mask: 0x20, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoAIPawnCollision : 1;                            // Mask: 0x40, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoWeaponCollision : 1;                            // Mask: 0x80, PropSize: 0x10x625(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoRangedWeaponCollision : 1;                      // Mask: 0x1, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoProjectileCollision : 1;                        // Mask: 0x2, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoNotBlockInteract : 1;                           // Mask: 0x4, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlocksCeilingPlacement : 1;                       // Mask: 0x8, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bBlocksAttachmentPlacement : 1;                    // Mask: 0x10, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSupportsRepairing : 1;                            // Mask: 0x20, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, Net, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRandomYawOnPlacement : 1;                         // Mask: 0x40, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRandomScaleOnPlacement : 1;                       // Mask: 0x80, PropSize: 0x10x626(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClearMIDWhenReturningToUndamagedState : 1;        // Mask: 0x1, PropSize: 0x10x627(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_EC : 2;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bAllowResourceDrop : 1;                            // Mask: 0x8, PropSize: 0x10x627(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHideOnDeath : 1;                                  // Mask: 0x10, PropSize: 0x10x627(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPlayDestructionEffects : 1;                       // Mask: 0x20, PropSize: 0x10x627(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSupportedDirectly : 1;                            // Mask: 0x40, PropSize: 0x10x627(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForciblyStructurallySupported : 1;                // Mask: 0x80, PropSize: 0x10x627(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisterWithStructuralGrid : 1;                   // Mask: 0x1, PropSize: 0x10x628(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUnderConstruction : 1;                            // Mask: 0x2, PropSize: 0x10x628(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUnderRepair : 1;                                  // Mask: 0x4, PropSize: 0x10x628(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCollisionBlockedByPawns : 1;                      // Mask: 0x8, PropSize: 0x10x628(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_ED : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bCurrentlyBeingEdited : 1;                         // Mask: 0x20, PropSize: 0x10x628(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_EE : 1;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bAllowWeakSpots : 1;                               // Mask: 0x80, PropSize: 0x10x628(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseComplexForWeakSpots : 1;                       // Mask: 0x1, PropSize: 0x10x629(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanSpawnAtLowerQuotaLevels : 1;                   // Mask: 0x2, PropSize: 0x10x629(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bNeedsWindMaterialParameters : 1;                  // Mask: 0x4, PropSize: 0x10x629(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPropagatesBounceEffects : 1;                      // Mask: 0x8, PropSize: 0x10x629(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bNeedsDamageOverlay : 1;                           // Mask: 0x10, PropSize: 0x10x629(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsInitiallyBuilding : 1;                          // Mask: 0x20, PropSize: 0x10x629(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_EF : 2;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class ELootQuotaLevel                   MaximumQuotaLevelBound;                            // 0x62A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F35[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             RandomScaleRange;                                  // 0x62C(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortBounceData                       BounceData;                                        // 0x634(0x30)(Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        InfluenceMapWeight;                                // 0x664(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BASEEffectMeshComponent;                           // 0x668(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBuildingNavObstacle>          NavObstacles;                                      // 0x670(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavArea>                  CachedNavAreaHusk;                                 // 0x680(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavArea>                  CachedNavAreaSmasher;                              // 0x688(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F36[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BuildingPlacementDistance;                         // 0x6A8(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                ReplicatedDrawScale3D;                             // 0x6B4(0xC)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceConstant*             ReplicatedMIC;                                     // 0x6C0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEditorOnlyBuildingInstanceMaterialParameters EditorOnlyInstanceMaterialParameters;              // 0x6C8(0x30)(Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x6F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                    BaseMaterial;                                      // 0x700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  DestructionLootTierGroup;                          // 0x708(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FChosenQuotaInfo                      DestructionLootTierChosenQuotaInfo;                // 0x710(0x10)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  DestructionLootTierKey;                            // 0x720(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingResourceAmountOverride;                    // 0x728(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxResourcesToSpawn;                               // 0x738(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F37[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveLinearColor>      WindSpeedCurve;                                    // 0x740(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveLinearColor>      WindPannerSpeedCurve;                              // 0x768(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UMaterialInterface>> IntenseWindMaterials;                              // 0x790(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             WindAudio;                                         // 0x7A0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BreakEffect;                                       // 0x7C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DeathParticles;                                    // 0x7D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DeathParticleSocketName;                           // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeathSound;                                        // 0x7E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ConstructedEffect;                                 // 0x7E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldBuffMaterialParamValue1;                     // 0x7F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ShieldBuffMaterialParamValue2;                     // 0x7F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimatingDistanceFieldSelfShadowBias;              // 0x7F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F38[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRandomDayphaseFX>             RandomDayphaseFXList;                              // 0x800(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ConstructionAudioComponent;                        // 0x810(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      AnimatingMIDs;                                     // 0x818(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DamageOverlayComponent;                            // 0x828(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MIDDamageOverlay;                                  // 0x830(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageAmountStart;                                 // 0x838(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastDamageAmount;                                  // 0x83C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHitResult                            LastDamageHit;                                     // 0x840(0x88)(Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_F39[0x60];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnRepairBuildingStarted;                           // 0x928(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRepairBuildingFinished;                          // 0x938(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortConnectivityComponentData        ConnectivityData;                                  // 0x948(0x18)(SaveGame, NativeAccessSpecifierPublic)
	class UBuildingEditModeMetadata*             EditModePatternData;                               // 0x960(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UndermineGroup;                                    // 0x968(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LogicalBuildingIdx;                                // 0x96C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    AnimatingMaterial;                                 // 0x970(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DamagedButNotAnimatingMaterial;                    // 0x978(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    AnimatingMaterialMobile;                           // 0x980(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DamagedButNotAnimatingMaterialMobile;              // 0x988(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UMaterialInterface*, class UMaterialInterface*> AnimatingMaterials;                                // 0x990(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class UMaterialInterface*, class UMaterialInterface*> DamagedButNotAnimatingMaterials;                   // 0x9E0(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        AnimatingSubObjects;                               // 0xA30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumFrameSubObjects;                                // 0xA34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBuildingEditModeSupport>  EditModeSupportClass;                              // 0xA38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeSupport*              EditModeSupport;                                   // 0xA40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthToAutoBuild;                                 // 0xA48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccumulatedAutoBuildTime;                          // 0xA4C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingReplacementType          BuildingReplacementType;                           // 0xA50(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingReplacementType          ReplacementDestructionReason;                      // 0xA51(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAnim                     CurBuildingAnimType;                               // 0xA52(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDamageVisualsState           DamageVisualsState;                                // 0xA53(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurAnimSubObjectNum;                               // 0xA54(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurBuildingAnimStartTime;                          // 0xA58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurAnimSubObjectTargetNum;                         // 0xA5C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      BlueprintMIDs;                                     // 0xA60(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BlueprintMeshComp;                                 // 0xA70(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerStateZone*                  EditingPlayer;                                     // 0xA78(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ConnectivityIcon;                                  // 0xA80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F3B[0x18];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BuildingAttachmentPointOffset;                     // 0xAA0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingAttachmentRadius;                          // 0xAAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAttachmentSlot           BuildingAttachmentSlot;                            // 0xAB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBuildingAttachmentType           BuildingAttachmentType;                            // 0xAB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlacementType                    BuildingPlacementType;                             // 0xAB2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EStructuralSupportCheck           LastStructuralCheck;                               // 0xAB3(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerGridSnapSize;                                // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      ParentActorToAttachTo;                             // 0xAB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingSMActor*>              AttachedBuildingActors;                            // 0xAC0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ABuildingSMActor*>              BuildingActorsAttachedTo;                          // 0xAD0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnTrapPlacementChanged;                            // 0xAE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplacementDestruction;                          // 0xAF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class ABuildingSMActor*>              AttachmentPlacementBlockingActors;                 // 0xB00(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UBuildingConnectivityComponent*        ConnectivityComponent;                             // 0xB10(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingFoundation>    Foundation;                                        // 0xB18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       LODActorIndexInFoundation;                         // 0xB20(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       ActorIndexInFoundation;                            // 0xB22(0x2)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F3D[0x14];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      DamagerOwner;                                      // 0xB38(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortConstructorBASE*                  RelevantBASE;                                      // 0xB40(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortConstructorBASE*                  LastRelevantBASE;                                  // 0xB48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_F3F[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingSMActor* GetDefaultObj();

	bool WillRegisterWithStructuralGrid();
	void UpdateRepairMaterialAnim(float CurveValue);
	void UpdateLODOverrideEffect(float CurveValue);
	void UpdateDynamicShrinkAndDestroyEffect(float CurveValue);
	void SetTextureData(TArray<class UTexture2D*>& InTextures);
	void SetMirrored(bool bIsMirrored);
	void RepairBuilding(class AFortPlayerController* RepairingController, int32 ResourcesSpent);
	TArray<class UTexture2D*> ReadTextureData();
	void OnRepairStarted();
	void OnRep_ResourceType(enum class EFortResourceType OldType);
	void OnRep_ReplicatedMIC();
	void OnRep_ReplicatedDrawScale3D();
	void OnRep_RelevantBASE();
	void OnRep_MetaData();
	void OnRep_EditingPlayer();
	void OnRep_bUnderRepair();
	void OnRep_bUnderConstruction();
	void OnRep_BuildingReplacementType();
	void OnRep_bCollisionBlockedByPawns();
	void OnLODOverrideEffectFinished();
	void OnDynamicShrinkAndDestroyEffectFinished();
	void OnDetachFromBuilding(class ABuildingSMActor* AttachedToBuilding, bool bBeingDestroyed);
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void OnAttachToBuilding(class ABuildingSMActor* AttachedToBuilding);
	void MulticastRequestBuildingAnimation(enum class EBuildingAnim RequestedAnimation);
	void MulticastPlayFullHealthEffects();
	void MarkConnectedBuildingsForStructuralIntegrityCheck();
	bool IsSupportedByWorld();
	bool IsStructurallySupported();
	bool HasDestructionLoot();
	class UCurveLinearColor* GetWindSpeedCurveForPreview();
	class UCurveLinearColor* GetWindPannerSpeedCurveForPreview();
	enum class EBuildingReplacementType GetReplacementDestructionReason();
	int32 GetLogicalBuildingIndex();
	bool GetIntenseWindMaterialsForPreview(TArray<class UMaterialInterface*>* Materials);
	class UStaticMeshComponent* GetBuildingMeshComponent();
	TArray<class ABuildingSMActor*> GetAttachedBuildingActors();
	class UMaterialInstanceDynamic* GetAnimatingMID(int32 ElementIndex);
	void GameplayCue_Abilities_Activation_Generic_BannerWallBuff2(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_BannerWallBuff1(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ForceIntoStructuralGridDuringRuntime();
	void EditorOnlySetInstanceMaterialVectorParameter(class FName ParamName, const struct FLinearColor& Value);
	void EditorOnlySetInstanceMaterialTextureParameter(class FName ParamName, class UTexture* Value);
	void EditorOnlySetInstanceMaterialScalarParameter(class FName ParamName, float Value);
	void EditorOnlyRemoveInstanceMaterialVectorParameter(class FName ParamName);
	void EditorOnlyRemoveInstanceMaterialTextureParameter(class FName ParamName);
	void EditorOnlyRemoveInstanceMaterialScalarParameter(class FName ParamName);
	void DetachBuildingActorFromMe(class ABuildingSMActor* ActorToAttach, bool bBeingDestroyed);
	void BlueprintOnStructurallyUnstable();
	void BlueprintOnStructurallyStable();
	void AttachBuildingActorToMe(class ABuildingSMActor* ActorToAttach, bool bForceAttachment);
};

// 0x8 (0xB68 - 0xB60)
// Class FortniteGame.BuildingAutoNav
class ABuildingAutoNav : public ABuildingSMActor
{
public:
	uint8                                        bAutoAssignNavProperties : 1;                      // Mask: 0x1, PropSize: 0x10xB60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F43[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingAutoNav* GetDefaultObj();

};

// 0xC8 (0x6A8 - 0x5E0)
// Class FortniteGame.BuildingGameplayActor
class ABuildingGameplayActor : public ABuildingActor
{
public:
	uint8                                        Pad_F4B[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySet*                       AbilitySet;                                        // 0x5F0(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAbilitySet*                       InherentAbilitySets[0x5];                          // 0x5F8(0x28)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageSet;                                         // 0x620(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   DamageStatHandle;                                  // 0x628(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIgnoreInstigatorCollision;                        // 0x638(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAddOwnerVelocity;                                 // 0x639(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F4C[0x2];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AbilitySourceLevel;                                // 0x63C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBuildingGameplayActorAbilityDeliveryInfo DeliverableAbilityInfo;                            // 0x640(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        bApplyDefaultEnabledAbilityBucketsOnInit : 1;      // Mask: 0x1, PropSize: 0x10x688(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseSimpleActorTouchSetupForAbilityBuckets : 1;    // Mask: 0x2, PropSize: 0x10x688(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F0 : 6;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F4D[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   RegisteredTouchComponent;                          // 0x690(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F4E[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x6A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ABuildingGameplayActor* GetDefaultObj();

	void SetTouchComponentForAbilityDeliveryInfo(class UPrimitiveComponent* PrimitiveComponent);
	void SetInitialVelocity(struct FVector& InitialVelocity);
	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetAbilitySourceLevel(int32 NewAbilitySourceLevel);
	void OnReplicatedVelocityStartOrStop(bool bStart);
	void OnRegisteredTouchComponentEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRegisteredTouchComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnDropped(bool bValidLocation, bool bPassesPlacementRestrictions, bool bWasIntentionallyPlaced);
	void K2_RemoveGameplayCue(const struct FGameplayTag& GameplayCueTag);
	void K2_ExecuteGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
	void K2_ExecuteGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	void K2_AddGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	struct FTransform GetTargetingSourceTransform(enum class EFortAbilityTargetingSource Source);
	void ForceChangeOwnerInstigator(class AFortPlayerController* NewInstigator);
	void EnableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
	void DisableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
};

// 0xA0 (0x748 - 0x6A8)
// Class FortniteGame.BuildingCapturePointActor
class ABuildingCapturePointActor : public ABuildingGameplayActor
{
public:
	uint8                                        bUseHUDIndicator : 1;                              // Mask: 0x1, PropSize: 0x10x6A8(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F1 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F59[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HUDStyle;                                          // 0x6B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               HUDOffset;                                         // 0x6B8(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHUDClampToScreenEdge : 1;                         // Mask: 0x1, PropSize: 0x10x6C4(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F2 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F5B[0xB];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      CollisionComponent;                                // 0x6D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bActivated : 1;                                    // Mask: 0x1, PropSize: 0x10x6D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F3 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F5C[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EContentionRules                  ContentionRules;                                   // 0x6DC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F5D[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortTeam>                 TeamsBarredFromCapture;                            // 0x6E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        PercentIncreasePerPlayerCaptor;                    // 0x6F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentIncreasePerAICaptor;                        // 0x6F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentDecreaseNoCaptor;                           // 0x6F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLocked : 1;                                       // Mask: 0x1, PropSize: 0x10x6FC(0x1)(Edit, BlueprintVisible, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F4 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F5E[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnlockInterval;                                    // 0x700(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EUnlockRules                      UnlockRules;                                       // 0x704(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F5F[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumCapturingPoint;                                 // 0x708(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamCapturingPoint;                                // 0x70C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamControllingPoint;                              // 0x70D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         TeamOwningPoint;                                   // 0x70E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECaptureState                     CaptureState;                                      // 0x70F(0x1)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CapturePercentage;                                 // 0x710(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCapturePercentage;                       // 0x714(0x4)(Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnCapturePointStateChanged;                        // 0x718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnTeamOwningPointChanges;                          // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_F60[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingCapturePointActor* GetDefaultObj();

	void SetActivatedState(bool bInActivated);
	void OnRep_ReplicatedCapturePercentage();
	void OnRep_CaptureState();
	void OnRep_bLocked();
	void OnRep_bActivated();
	void OnLeaveCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCapturePointStateChange(enum class ECaptureState InState, enum class EFortTeam InTeam);
	void OnCapturePointLockStateChange(bool bInLocked);
	void OnCapturePointActiveStateChange(bool bInActive);
	enum class ECaptureState GetCaptureState();
};

// 0xD8 (0x310 - 0x238)
// Class FortniteGame.BuildingConnectivityComponent
class UBuildingConnectivityComponent : public USceneComponent
{
public:
	TArray<struct FFortConnectionData>           Connections;                                       // 0x238(0x10)(Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          SocketNames;                                       // 0x248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAutoConnectOnInitialize;                          // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawDebugData;                                    // 0x259(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F64[0x6];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      BuildingOwner;                                     // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingConnectivityEffect*>   ConnectionEffects;                                 // 0x268(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsPowered;                                        // 0x278(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsProvidingPower;                                 // 0x279(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAbleToProvidePower;                             // 0x27A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowConnections;                                 // 0x27B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowsPowerToPassThrough;                         // 0x27C(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F65[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  AuthorityOnConnectedDelegate;                      // 0x280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  AuthorityOnDisconnectedDelegate;                   // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnConnectedDelegate;                         // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnDisconnectedDelegate;                      // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  AuthorityOnPoweredDelegate;                        // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  AuthorityOnUnpoweredDelegate;                      // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnPoweredDelegate;                           // 0x2E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ClientOnUnpoweredDelegate;                         // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_F66[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingConnectivityComponent* GetDefaultObj();

	void OnRep_Connections();
	void OnRep_bIsProvidingPower();
	void OnRep_bIsPowered();
	void OnPlaced();
	bool K2_IsPowered();
	bool IsConnectedTo(class ABuildingSMActor* TestActor);
	void DrawDebugData();
	void DisconnectAll();
	bool CanConnectTo(class ABuildingSMActor* TestActor);
};

// 0x38 (0x360 - 0x328)
// Class FortniteGame.BuildingConnectivityEffect
class ABuildingConnectivityEffect : public AActor
{
public:
	struct FFortConnectionData                   ConnectionData;                                    // 0x328(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDebugDraw;                                        // 0x358(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F69[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingConnectivityEffect* GetDefaultObj();

	void OnDisconnect();
	void OnConnect(struct FTransform& T1, struct FTransform& T2);
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.BuildingConnectivityManager
class ABuildingConnectivityManager : public AActor
{
public:
	TArray<class ABuildingSMActor*>              ConnectivityActors;                                // 0x328(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingConnectivityManager* GetDefaultObj();

};

// 0x48 (0xBB0 - 0xB68)
// Class FortniteGame.BuildingTimeOfDayLights
class ABuildingTimeOfDayLights : public ABuildingAutoNav
{
public:
	TArray<class ULightComponent*>               TimeOfDayControlledLights;                         // 0xB68(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       TimeOfDayControlledLightsPositions;                // 0xB78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<float>                                TimeOfDayControlledLightsInitalIntensities;        // 0xB88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_F6B[0x18];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingTimeOfDayLights* GetDefaultObj();

	void GetTimeOfDayBlueprintDefaultVariables(struct FTimeOfDayBlueprintDefaultVariables* OutVariables);
};

// 0x110 (0xCC0 - 0xBB0)
// Class FortniteGame.BuildingContainer
class ABuildingContainer : public ABuildingTimeOfDayLights
{
public:
	class USoundCue*                             SearchingSoundCueLoop;                             // 0xBB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             LootRepeatSoundCue;                                // 0xBB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OnDamageSoundCue;                                  // 0xBC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OnDeathSoundCue;                                   // 0xBC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           SearchedMesh;                                      // 0xBD0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>            SearchedMaterialOverrides;                         // 0xBD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	class FName                                  SearchLootTierGroup;                               // 0xBE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FChosenQuotaInfo                      SearchLootTierChosenQuotaInfo;                     // 0xBF0(0x10)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  ContainerLootTierKey;                              // 0xC00(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ReplicatedLootTier;                                // 0xC08(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             NumItemsToDropRange;                               // 0xC0C(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchBounceRadiusOverride;                        // 0xC14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*              LootTestingData;                                   // 0xC18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootNoiseRange;                                    // 0xC20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootSpawnLocation;                                 // 0xC24(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootFinalLocation;                                 // 0xC30(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InstancedLoot_TossDirection;                       // 0xC3C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstancedLoot_TossSpeed;                           // 0xC48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstancedLoot_TossConeHalfAngle;                   // 0xC4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LootSpawnLocation_Athena;                          // 0xC50(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LootTossDirection_Athena;                          // 0xC5C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LootTossSpeed_Athena;                              // 0xC68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LootTossConeHalfAngle_Athena;                      // 0xC6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortRarity                       HighestRarity;                                     // 0xC70(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysShowContainer : 1;                          // Mask: 0x1, PropSize: 0x10xC71(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlwaysMaintainLoot : 1;                           // Mask: 0x2, PropSize: 0x10xC71(0x1)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDestroyContainerOnSearch : 1;                     // Mask: 0x4, PropSize: 0x10xC71(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAlreadySearched : 1;                              // Mask: 0x8, PropSize: 0x10xC71(0x1)(BlueprintVisible, Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_F5 : 4;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F76[0x1];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bBuriedTreasure : 1;                               // Mask: 0x1, PropSize: 0x10xC73(0x1)(Edit, BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasRaisedTreasure : 1;                            // Mask: 0x2, PropSize: 0x10xC73(0x1)(Edit, BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStartAlreadySearched_Athena : 1;                  // Mask: 0x4, PropSize: 0x10xC73(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegenerateLoot : 1;                               // Mask: 0x8, PropSize: 0x10xC73(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseLocationForDrop : 1;                           // Mask: 0x10, PropSize: 0x10xC73(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F6 : 3;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	float                                        LootedWeaponsDurabilityModifier;                   // 0xC74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSearchBounceData                 SearchBounceData;                                  // 0xC78(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  SearchSpeed;                                       // 0xC88(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F77[0x10];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CurrentInteractBounceCurve;                        // 0xCA8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           CurrentInteractBounceNormalCurve;                  // 0xCB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SavedReservedRandomValueResult;                    // 0xCB8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeUntilLootRegenerates;                          // 0xCBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingContainer* GetDefaultObj();

	void RaiseTreasure();
	void OnSetSearched();
	void OnSearchInterrupted();
	void OnRep_bAlreadySearched();
	void OnRaiseTreasure();
	void OnLootReset();
	void OnLootRepeat();
	void OnLoot();
	void OnBeginSearch();
	int32 GetLootTier();
	void EnableBacchusHighlight();
	void DisableBacchusHighlight();
	void BounceContainer();
};

// 0x10 (0xB78 - 0xB68)
// Class FortniteGame.BuildingCorner
class ABuildingCorner : public ABuildingAutoNav
{
public:
	class ABuildingSMActor*                      PrimaryWall;                                       // 0xB68(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      SecondaryWall;                                     // 0xB70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingCorner* GetDefaultObj();

};

// 0x8 (0xB70 - 0xB68)
// Class FortniteGame.BuildingDeco
class ABuildingDeco : public ABuildingAutoNav
{
public:
	bool                                         bCastShadow;                                       // 0xB68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F7C[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingDeco* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class FortniteGame.BuildingEditModeMetadata
class UBuildingEditModeMetadata : public UDataAsset
{
public:
	uint8                                        bSupportNextPieceAssist : 1;                       // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasNavigableOpening : 1;                          // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasCustomAttackLocation : 1;                      // Mask: 0x4, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_F7 : 5;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_F80[0x7];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingActorHotSpotConfig*           DefaultHotspotConfig;                              // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIHotSpotConfig*                      ShootingHotSpotConfig;                             // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 ShapeGuid;                                         // 0x48(0x10)(Edit, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_F81[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FConnectivityCube                     ConnectivityCubeData;                              // 0x60(0xC0)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata* GetDefaultObj();

};

// 0x10 (0x130 - 0x120)
// Class FortniteGame.BuildingEditModeMetadata_BinaryToggle
class UBuildingEditModeMetadata_BinaryToggle : public UBuildingEditModeMetadata
{
public:
	TArray<enum class EBinaryToggleValues>       TileData;                                          // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata_BinaryToggle* GetDefaultObj();

};

// 0x0 (0x130 - 0x130)
// Class FortniteGame.BuildingEditModeMetadata_Floor
class UBuildingEditModeMetadata_Floor : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata_Floor* GetDefaultObj();

};

// 0x0 (0x120 - 0x120)
// Class FortniteGame.BuildingEditModeMetadata_Pillar
class UBuildingEditModeMetadata_Pillar : public UBuildingEditModeMetadata
{
public:

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata_Pillar* GetDefaultObj();

};

// 0x10 (0x140 - 0x130)
// Class FortniteGame.BuildingEditModeMetadata_Roof
class UBuildingEditModeMetadata_Roof : public UBuildingEditModeMetadata_BinaryToggle
{
public:
	TArray<struct FAuxiliaryEditTileMeshData>    AuxEditTileMeshData;                               // 0x130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata_Roof* GetDefaultObj();

};

// 0x10 (0x130 - 0x120)
// Class FortniteGame.BuildingEditModeMetadata_Stair
class UBuildingEditModeMetadata_Stair : public UBuildingEditModeMetadata
{
public:
	TArray<int32>                                TileData;                                          // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata_Stair* GetDefaultObj();

};

// 0x0 (0x130 - 0x130)
// Class FortniteGame.BuildingEditModeMetadata_Wall
class UBuildingEditModeMetadata_Wall : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadata_Wall* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.BuildingEditModeMetadataContainer
class UBuildingEditModeMetadataContainer : public UDataAsset
{
public:
	TArray<class UBuildingEditModeMetadata*>     MetadataCollection;                                // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBuildingEditModeMetadataContainer* GetDefaultObj();

};

// 0x248 (0x270 - 0x28)
// Class FortniteGame.BuildingEditModeSupport
class UBuildingEditModeSupport : public UObject
{
public:
	class ABuildingSMActor*                      OwnerBuilding;                                     // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                 EditingController;                                 // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             PreviewMetadata;                                   // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             ScratchpadMetadata;                                // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBuildingEditModeMetadata> ExpectedMetadataClass;                             // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class ABuildingSMActor>>  PossibleEditClasses;                               // 0x50(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStaticMesh>            EditTileMesh;                                      // 0x60(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          EditTileMeshComponents;                            // 0x88(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     TileMaterialParent;                                // 0x98(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ActiveTileTexture;                                 // 0xC0(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             InactiveTileTexture;                               // 0xE8(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  LastInteractedComp;                                // 0x110(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  LastHighlightedComp;                               // 0x118(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PreviewComponent;                                  // 0x120(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     PreviewMaterial;                                   // 0x128(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEditModeState                        PreviewEditModeState;                              // 0x150(0x10)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            SuccessfulPatternMatchCurve;                       // 0x160(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             SuccessfulMatchInteractTimeline;                   // 0x188(0x98)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        bCanMirrorMetadataToMatch : 1;                     // Mask: 0x1, PropSize: 0x10x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanRotateMetadataToMatch : 1;                     // Mask: 0x2, PropSize: 0x10x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEditActionInProgress : 1;                         // Mask: 0x4, PropSize: 0x10x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInitializedTimelines : 1;                         // Mask: 0x8, PropSize: 0x10x220(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F93[0x4F];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingEditModeSupport* GetDefaultObj();

	void OnSuccessfulMatchInteractParamUpdate(float NewInteractParamVal);
	void OnSuccessfulMatchInteractComplete();
};

// 0x20 (0x290 - 0x270)
// Class FortniteGame.BuildingEditModeSupport_BinaryToggle
class UBuildingEditModeSupport_BinaryToggle : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_BinaryToggle* BinaryTogglePreviewData;                           // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBinaryToggleValues               CurToggleAction;                                   // 0x278(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F99[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          DefaultBlueTileColor;                              // 0x27C(0x10)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_F9A[0x4];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingEditModeSupport_BinaryToggle* GetDefaultObj();

};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.BuildingEditModeSupport_Floor
class UBuildingEditModeSupport_Floor : public UBuildingEditModeSupport_BinaryToggle
{
public:

	static class UClass* StaticClass();
	static class UBuildingEditModeSupport_Floor* GetDefaultObj();

};

// 0x20 (0x2B0 - 0x290)
// Class FortniteGame.BuildingEditModeSupport_Roof
class UBuildingEditModeSupport_Roof : public UBuildingEditModeSupport_BinaryToggle
{
public:
	TArray<struct FTileCompInterpData>           TileInterpData;                                    // 0x290(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_FA4[0x10];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingEditModeSupport_Roof* GetDefaultObj();

};

// 0xD0 (0x340 - 0x270)
// Class FortniteGame.BuildingEditModeSupport_Stair
class UBuildingEditModeSupport_Stair : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_Stair*       StairPreviewMetadata;                              // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata_Stair*       LastValidMetadataConfiguration;                    // 0x278(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStaticMesh>            AuxiliaryIndicatorMesh;                            // 0x280(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          AuxiliaryIndicatorComponents;                      // 0x2A8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ActivatedAuxIndicatorComponent;                    // 0x2B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     AuxIndicatorComponentParentMaterial;               // 0x2C0(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             AuxIndicatorArrowTexture;                          // 0x2E8(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             AuxIndicatorGridTexture;                           // 0x310(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FB3[0x8];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingEditModeSupport_Stair* GetDefaultObj();

};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.BuildingEditModeSupport_Wall
class UBuildingEditModeSupport_Wall : public UBuildingEditModeSupport_BinaryToggle
{
public:

	static class UClass* StaticClass();
	static class UBuildingEditModeSupport_Wall* GetDefaultObj();

};

// 0x58 (0x700 - 0x6A8)
// Class FortniteGame.BuildingFlagSpawn
class ABuildingFlagSpawn : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_FC1[0x8];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HUDIndicatorRelativeOffset;                        // 0x6B0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPickupOnTouch;                                    // 0x6BC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FC3[0x3];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortCarriedObject>        CarriedObjectClass;                                // 0x6C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RelativeTranslation;                               // 0x6C8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FC5[0x4];                                      // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortCarriedObject*                    SpawnedObject;                                     // 0x6D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnDelay;                                        // 0x6E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_FC8[0x1C];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingFlagSpawn* GetDefaultObj();

	void SpawnCarriedObject();
	void OnCarriedObjectDetachedEvent();
	void OnCarriedObjectAttachedEvent();
	bool IsSpawnedObjectAwayFromBase();
};

// 0x8 (0xB68 - 0xB60)
// Class FortniteGame.BuildingFloor
class ABuildingFloor : public ABuildingSMActor
{
public:
	uint8                                        bShouldIgnoreForHorizontalHotspotSearch : 1;       // Mask: 0x1, PropSize: 0x10xB60(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_FCF[0x7];                                      // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingFloor* GetDefaultObj();

	bool IsBalcony();
};

// 0x280 (0x928 - 0x6A8)
// Class FortniteGame.BuildingFOBConfigActor
class ABuildingFOBConfigActor : public ABuildingGameplayActor
{
public:
	UMulticastDelegateProperty_                  OnIOOperationComplete;                             // 0x6A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                ExplicitSaveFile;                                  // 0x6B8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortBuildingInstructions> FallbackBuildingInstructions;                      // 0x6C8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CoreSaveFileUniqueContext;                         // 0x6F0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ABuildingFOBCoreSpawnPad> CreationModeSpawnPadClass;                         // 0x700(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 SpawnPadPlacementActorRequiredTags;                // 0x728(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UObjectLibrary>         FOBCoreLibrary;                                    // 0x748(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLoadFirstCoreInCreationMode : 1;                  // Mask: 0x1, PropSize: 0x10x770(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_F9 : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1023[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFOBCoreChoiceArray                   FOBCoreChoices;                                    // 0x778(0xC0)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	class UFortFOBCoreDecoItemDefinition*        SelectedCoreItemDef;                               // 0x838(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingFOBCoreActor*                 SelectedCore;                                      // 0x840(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingFOBCoreSpawnPad*              CoreSpawnPad;                                      // 0x848(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFOBSaveFileBuildingInstructionsHandler* SaveFileInstructionsHandler;                       // 0x850(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUniqueNetIdRepl                      OwnerNetID;                                        // 0x858(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFOBMode                          FOBMode;                                           // 0x880(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFOBIOStatus                      IOStatus;                                          // 0x881(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1027[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bEnumeratedUserFilesSuccessfully : 1;              // Mask: 0x1, PropSize: 0x10x884(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCoreBasedDeploymentModeFinalizationRequested : 1; // Mask: 0x2, PropSize: 0x10x884(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInitialized : 1;                                  // Mask: 0x4, PropSize: 0x10x884(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFinalized : 1;                                    // Mask: 0x8, PropSize: 0x10x884(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDummyDeployment : 1;                              // Mask: 0x10, PropSize: 0x10x884(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_FA : 3;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_102B[0x4B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAllBuildingsSpawned;                             // 0x8D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UBoxComponent*                         ContainmentBoxComponent;                           // 0x8E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  ContainmentBoxStructuralGridBox;                   // 0x8E8(0x1C)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_102D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SpawnLocationTags;                                 // 0x908(0x20)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingFOBConfigActor* GetDefaultObj();

	bool ReloadFOB();
	void OnRep_FOBMode();
	void OnRep_bFinalized();
	void OnIOOperationCompleteMulticast(enum class EFOBIOStatus IOOperation, bool bSuccess, class UFortFOBCoreDecoItemDefinition* SelectedCoreDef);
	void OnFOBModeSet(enum class EFOBMode ModeThatWasSet);
	void OnFinalized();
	void OnFinalizationPlayFX();
	void OnFinalizationFXMulticast();
	void OnCoreInitialized(class ABuildingFOBCoreActor* InitializedCore);
	bool IsPlayerControllerFOBOwner(class AFortPlayerController* FortPC);
	bool IsInitialized();
	bool IsFinalized();
	bool IsBuildingActorWithinFOB(class ABuildingActor* ActorToCheck);
	class UFortFOBCoreDecoItemDefinition* GetSelectedFOBCoreItemDefinition();
	enum class EFOBMode GetFOBMode();
	TArray<struct FFOBCoreChoice> GetAllCoreChoices();
	bool CanSaveFOB();
	bool CanReloadFOB();
	bool CanPerformIOOperation();
	bool AttemptSelectFOBCore(class UFortFOBCoreDecoItemDefinition* DefToSelect);
};

// 0x128 (0x7D0 - 0x6A8)
// Class FortniteGame.BuildingFOBCoreActor
class ABuildingFOBCoreActor : public ABuildingGameplayActor
{
public:
	TSoftObjectPtr<class UParticleSystem>        SimpleDeathParticles;                              // 0x6A8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             SimpleDeathSound;                                  // 0x6D0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SimpleBoundsBoxComponent;                          // 0x6F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         TouchBoxComponent;                                 // 0x700(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ContainmentVolumeTouchBoxOffsetExtents;            // 0x708(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisterAsGlobalGameplayEventListener : 1;        // Mask: 0x1, PropSize: 0x10x714(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bConformTouchBoxToFOBContainmentBox : 1;           // Mask: 0x2, PropSize: 0x10x714(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bActive : 1;                                       // Mask: 0x4, PropSize: 0x10x714(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTargetable : 1;                                   // Mask: 0x8, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bVulnerable : 1;                                   // Mask: 0x10, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_FB : 3;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1053[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFOBCoreTargetableChanged;                        // 0x718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoreVulnerableChanged;                        // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FUniqueNetIdRepl                      OwnerNetID;                                        // 0x738(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortFOBCoreDecoItemDefinition*        SpawnedFromItemDef;                                // 0x760(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingFOBCoreSpawnPad*              SpawnedFromSpawnPad;                               // 0x768(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  FOBBounds;                                         // 0x770(0x1C)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FBox                                  FOBStructuralBounds;                               // 0x78C(0x1C)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoreDamaged;                                  // 0x7A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoreOutOfHealth;                              // 0x7B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        bShowTargetableHUDIndicator : 1;                   // Mask: 0x1, PropSize: 0x10x7C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1056[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingFOBCoreActor* GetDefaultObj();

	void OnVulnerableStatusChanged(bool bNewTargetableStatus);
	void OnTargetableStatusChanged(bool bNewTargetableStatus);
	void OnRep_bVulnerable();
	void OnRep_bTargetable();
	void OnRep_bActive();
	void OnActiveStatusChanged(bool bNewActiveStatus);
	void MarkVulnerable();
	void MarkTargetable();
	bool IsActorWithinFOBBounds(class AActor* Actor);
	bool IsActive();
	struct FTransform GetSimpleDeathFXTransform();
	bool GetFOBBoundsCenterAndExtents(struct FVector* OutCenter, struct FVector* OutExtents);
	void GetFOBBoundsBoxOverlappedActors(TArray<class ABuildingSMActor*>* OverlappedActors, bool bSortByDistanceFromCore);
};

// 0x0 (0x6A8 - 0x6A8)
// Class FortniteGame.BuildingFOBCoreSpawnPad
class ABuildingFOBCoreSpawnPad : public ABuildingGameplayActor
{
public:

	static class UClass* StaticClass();
	static class ABuildingFOBCoreSpawnPad* GetDefaultObj();

	struct FTransform GetCoreSpawnTransform();
};

// 0x140 (0xCA0 - 0xB60)
// Class FortniteGame.BuildingFoundation
class ABuildingFoundation : public ABuildingSMActor
{
public:
	TArray<class UBuildingGroup*>                BuildingGroups;                                    // 0xB60(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UWorld>>         AdditionalWorlds;                                  // 0xB70(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FVector                               BuildingDeconstructorOrigin;                       // 0xB80(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BuildingDeconstructorExtent;                       // 0xB8C(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bConditionalFoundation : 1;                        // Mask: 0x1, PropSize: 0x10xB98(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideNavigationGraphCells : 1;                 // Mask: 0x2, PropSize: 0x10xB98(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasExcludedZone : 1;                              // Mask: 0x4, PropSize: 0x10xB98(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceDitheringTransition : 1;                     // Mask: 0x8, PropSize: 0x10xB98(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bStreamingDataBasedBounds : 1;                     // Mask: 0x10, PropSize: 0x10xB98(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_FC : 3;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EBuildingFoundationType           FoundationType;                                    // 0xB99(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1073[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NavExclusionMinX;                                  // 0xB9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavExclusionMaxX;                                  // 0xBA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavExclusionMinY;                                  // 0xBA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavExclusionMaxY;                                  // 0xBA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBox                                  StreamingBoundingBox;                              // 0xBAC(0x1C)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  LevelToStream;                                     // 0xBC8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 BuildingGroupTagsToPickFrom;                       // 0xBD0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        bServerStreamedInLevel : 1;                        // Mask: 0x1, PropSize: 0x10xBF0(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_FD : 7;                                     // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1076[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBuildingFoundationStreamingData      StreamingData;                                     // 0xBF8(0x58)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortHLODSMActor*>              SpawnedLODActors;                                  // 0xC50(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortHLODSMActor*>              ChildSpawnedLODActors;                             // 0xC60(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ALODActor*>                     HLODActors;                                        // 0xC70(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_107C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelStreaming*                       LevelStreamInfo;                                   // 0xC88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBuildingFoundationLODActorData> LODActorsData;                                     // 0xC90(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingFoundation* GetDefaultObj();

	void OnRep_ServerStreamedInLevel();
	void OnRep_LevelToStream();
	void OnLevelStreamedIn();
	void OnLevelShown();
	bool EditorOnlyRemoveAdditionalWorld(class FString& LevelToRemove);
	TArray<class FString> EditorOnlyGetAdditionalWorlds();
	void EditorOnlyClearAdditionalWorlds();
	void EditorOnlyAddAdditionalWorld(class FString& LevelPackageName);
};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingFoundation3x3
class ABuildingFoundation3x3 : public ABuildingFoundation
{
public:

	static class UClass* StaticClass();
	static class ABuildingFoundation3x3* GetDefaultObj();

};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingFoundation5x10
class ABuildingFoundation5x10 : public ABuildingFoundation
{
public:

	static class UClass* StaticClass();
	static class ABuildingFoundation5x10* GetDefaultObj();

};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingFoundation5x5
class ABuildingFoundation5x5 : public ABuildingFoundation
{
public:

	static class UClass* StaticClass();
	static class ABuildingFoundation5x5* GetDefaultObj();

};

// 0x40 (0x6E8 - 0x6A8)
// Class FortniteGame.BuildingGameplayActorConsumable
class ABuildingGameplayActorConsumable : public ABuildingGameplayActor
{
public:
	TSubclassOf<class UGameplayEffect>           OnConsumeGameplayEffect;                           // 0x6A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortGameplayAbility>      OnConsumeMontageAbility;                           // 0x6B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OnConsumeMontage;                                  // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnerCalculateRandomRotation;                   // 0x6C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_109E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       DeathParticles;                                    // 0x6C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeathSound;                                        // 0x6D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDrawDistanceStw;                                // 0x6D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDrawDistanceAthena;                             // 0x6DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StatNameWhenConsumed;                              // 0x6E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingGameplayActorConsumable* GetDefaultObj();

	void PrepareOnConsumeGameplayEffectSpec(struct FGameplayEffectSpecHandle& SpecHandle);
	void OnLocalBeginUse();
	bool OnInteractAllowedToConsume(class AFortPawn* InteractingPawn);
	void OnAllowedToConsumeFailed(class AFortPawn* InteractingPawn);
	struct FGameplayEffectSpecHandle MakeOnConsumeGameplayEffectSpec();
	class UAnimMontage* GetOnConsumeMontage();
	TSubclassOf<class UGameplayEffect> GetOnConsumeGameplayEffect();
	struct FTransform GetDeathFXTransform();
};

// 0x48 (0x78 - 0x30)
// Class FortniteGame.BuildingGroup
class UBuildingGroup : public UDataAsset
{
public:
	class FName                                  GroupName;                                         // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuildingGroup*                        FallbackGroup;                                     // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuildingFoundationType           FoundationType;                                    // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_10A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AllBuildingLevelTags;                              // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FFortMapData>                  BuildingLevelData;                                 // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBuildingGroup* GetDefaultObj();

	void GetAllMapNames(TArray<class FString>* AllMaps);
};

// 0x120 (0x7C8 - 0x6A8)
// Class FortniteGame.BuildingItemCollectorActor
class ABuildingItemCollectorActor : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_10C4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortItemCollectorBehavior        ItemCollectorBehavior;                             // 0x6C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRequireAllForInteraction;                         // 0x6C1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRequireAllForTurnIn;                              // 0x6C2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasToHaveSomething;                               // 0x6C3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIncrementCaptureCountWhenGoalIsReached;           // 0x6C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCurrentInteractionSuccess;                        // 0x6C5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemCollectorState           ItemCollectorState;                                // 0x6C6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortItemCollectorTrackingType    TrackingType;                                      // 0x6C7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                 ControllingPlayer;                                 // 0x6C8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DefaultItemLootTierGroupName;                      // 0x6D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FColletorUnitInfo>             ItemCollections;                                   // 0x6D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  ManualOutputOverride;                              // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UFortWorldItemDefinition*              ActiveInputItem;                                   // 0x6F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortWorldItemDefinition*              ClientPausedActiveInputItem;                       // 0x700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ActiveItemRotationTime;                            // 0x708(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ItemRotationTime;                                  // 0x730(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10CA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AllowedItemRotationDamageTags;                     // 0x740(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        OutputDespenseDelayTime;                           // 0x760(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DespensingDelayTime;                               // 0x788(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LootSpawnLocation;                                 // 0x78C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LootTossDirection;                                 // 0x798(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LootTossConeHalfAngle;                             // 0x7A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootTossSpeed;                                     // 0x7A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTossOnGround;                                     // 0x7AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10CC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartingGoalLevel;                                 // 0x7B0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCollectorTrackedData>         TrackedInteractionData;                            // 0x7B8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ABuildingItemCollectorActor* GetDefaultObj();

	void UpdateCollectorsActiveItem(int32 StartingSeedValue, class UFortWorldItemDefinition* InputItem, class UTexture* InputTexture, int32 CurrentGoal, int32 CurrentCollectedAmount, int32 CurrentCaptureCount, class UTexture* OutputTexture);
	void SetItemCollectorState(enum class EFortItemCollectorState InItemCollectorState);
	void OnRep_TrackedInteractionData();
	void OnRep_ItemCollectorState();
	void OnRep_ControllingPlayer();
	void OnRep_ActiveInputItem();
	void OnReachedDepositGoal(class AFortPlayerController* CurrentControllingPlayer, class UFortWorldItemDefinition* CurrentActiveInputItem);
	void OnItemCollectorStateChanged(enum class EFortItemCollectorState InItemCollectorState);
	void OnForcedCycle();
	bool HasEnouphDepositItems(class AFortPlayerController* FortPC, class UFortWorldItemDefinition* InputItem, bool bAllOrNothing);
	void GoToNextCollectionItem();
	int32 GetTeamReachedGoalCount(enum class EFortTeam InTeam);
	int32 GetNumberOfCaptures(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	int32 GetDepositGoal(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	int32 GetDepositAmount(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	class UFortWorldItemDefinition* GetCurrentActiveItem();
};

// 0x0 (0xB60 - 0xB60)
// Class FortniteGame.BuildingPlayerPrimitivePreview
class ABuildingPlayerPrimitivePreview : public ABuildingSMActor
{
public:

	static class UClass* StaticClass();
	static class ABuildingPlayerPrimitivePreview* GetDefaultObj();

};

// 0x60 (0xBC0 - 0xB60)
// Class FortniteGame.BuildingLayoutRequirement
class ABuildingLayoutRequirement : public ABuildingPlayerPrimitivePreview
{
public:
	UMulticastDelegateProperty_                  OnLayoutSatisfied;                                 // 0xB60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLayoutUnSatisfied;                               // 0xB70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingSMActor>          LayoutRequirementSMActorClass;                     // 0xB80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreResourceTypeRequirements;                   // 0xB88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMakeSatisfyingActorIndestructibleWhileRequirementExists; // 0xB89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedToInitializeRequirementStatus;                // 0xB8A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRequirementSatisfied;                             // 0xB8B(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELayoutRequirementStatus          RequirementStatus;                                 // 0xB8C(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortResourceType                 OverrideResourceType;                              // 0xB8D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_10E9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     LayoutDisplayMaterial;                             // 0xB90(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              LayoutDisplayMID;                                  // 0xBB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABuildingLayoutRequirement* GetDefaultObj();

	void SetRequirementVisible(bool bVisible);
	void SetRequiredResourceType(enum class EFortResourceType DesiredResourceType);
	void OnRequirementSatisfyingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnRep_RequirementStatus();
	void ActivateRequirement(bool bMakeVisible);
};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.BuildingProp
class ABuildingProp : public ABuildingTimeOfDayLights
{
public:

	static class UClass* StaticClass();
	static class ABuildingProp* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.OutpostStructureBase
class AOutpostStructureBase : public ABuildingProp
{
public:

	static class UClass* StaticClass();
	static class AOutpostStructureBase* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.BuildingOutpostCraftingTable
class ABuildingOutpostCraftingTable : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass();
	static class ABuildingOutpostCraftingTable* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.BuildingOutpostFabricator
class ABuildingOutpostFabricator : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass();
	static class ABuildingOutpostFabricator* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.BuildingOutpostStorageVault
class ABuildingOutpostStorageVault : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass();
	static class ABuildingOutpostStorageVault* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.BuildingOutpostStormshieldUpgrade
class ABuildingOutpostStormshieldUpgrade : public AOutpostStructureBase
{
public:

	static class UClass* StaticClass();
	static class ABuildingOutpostStormshieldUpgrade* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.BuildingOutpostStormshieldCore
class ABuildingOutpostStormshieldCore : public ABuildingOutpostStormshieldUpgrade
{
public:

	static class UClass* StaticClass();
	static class ABuildingOutpostStormshieldCore* GetDefaultObj();

};

// 0x0 (0xB68 - 0xB68)
// Class FortniteGame.BuildingPillar
class ABuildingPillar : public ABuildingAutoNav
{
public:

	static class UClass* StaticClass();
	static class ABuildingPillar* GetDefaultObj();

};

// 0x140 (0xCF0 - 0xBB0)
// Class FortniteGame.BuildingPropAtlas
class ABuildingPropAtlas : public ABuildingProp
{
public:
	class UPrimitiveComponent*                   Ring1Comp;                                         // 0xBB0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   Ring2Comp;                                         // 0xBB8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   Ring3Comp;                                         // 0xBC0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              RingTransitionMID;                                 // 0xBC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       PortalAudioComp;                                   // 0xBD0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1102[0x118];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingPropAtlas* GetDefaultObj();

	void StopRingSpinning();
	void SetupAnimationTransition(class UMaterialInstanceDynamic* Mid, class FName ParamName, float InTransitionTime);
	void SetupAnimationSpeed(float InActivationTime, float InTotalDefenseTime, float InAnimSpeedStart, float InAnimSpeedEnd);
	void RestoreRingsHierarchy();
	void PlayRingsReset(float AnimDuration);
	void PlayRingSpinning(struct FRotator& Ring1RateMin, struct FRotator& Ring1RateMax, struct FRotator& Ring2Rate, struct FRotator& Ring3Rate);
	void PlayRingsIdleLoop(float AnimDuration, float Ring1ZOffset);
	void PlayRingDamage(float DurationMin, float DurationMax, float MagnitudeMin, float MagnitudeMax);
	void OnRingSpinningLoop();
	void InitializeRings(class UPrimitiveComponent* InRing1Comp, class UPrimitiveComponent* InRing2Comp, class UPrimitiveComponent* InRing3Comp);
	void InitializeAudio(class UAudioComponent* InPortalLoopingComp);
	float GetDefenseProgress();
	float GetDefenseAnimSpeed();
};

// 0x0 (0xB78 - 0xB78)
// Class FortniteGame.BuildingPropCorner
class ABuildingPropCorner : public ABuildingCorner
{
public:

	static class UClass* StaticClass();
	static class ABuildingPropCorner* GetDefaultObj();

};

// 0x18 (0xBC8 - 0xBB0)
// Class FortniteGame.BuildingPropWall
class ABuildingPropWall : public ABuildingProp
{
public:
	struct FBuildingActorNavArea                 AreaPatternOverride;                               // 0xBB0(0x4)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EBuildingWallArea                 AreaShapeType;                                     // 0xBB4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1106[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AreaWidthOverride;                                 // 0xBB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1107[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bOverrideAreaWidth : 1;                            // Mask: 0x1, PropSize: 0x10xBC0(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1108[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingPropWall* GetDefaultObj();

};

// 0xB0 (0x690 - 0x5E0)
// Class FortniteGame.BuildingRift
class ABuildingRift : public ABuildingActor
{
public:
	float                                        DistToTarget;                                      // 0x5E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_110E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnDelay;                                        // 0x5E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1111[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             EnvironmentQuery;                                  // 0x5F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                QueryParams;                                       // 0x5F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        QueryRadius;                                       // 0x608(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1112[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       FreeSpawnSlots;                                    // 0x610(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSpawnSlotData>            UsedSpawnSlots;                                    // 0x620(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1115[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRiftIsVisible;                                    // 0x640(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRiftIsActive;                                     // 0x641(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsReadyToSpawnAI;                                 // 0x642(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasBadRiftSlots;                                  // 0x643(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1118[0x4C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingRift* GetDefaultObj();

	void OnStartedEncounterSpawn(class AFortAIPawn* SpawnedAI);
	void OnSpawnAI();
	void OnRep_RiftIsVisible();
	void OnRep_RiftIsActive();
	void OnRemoved();
	void OnPlaced();
	void OnFinishedEncounterSpawn(class AFortAIPawn* SpawnedAI);
	void OnDeactivated();
	void OnActivated();
	void BroadcastRiftSpawningAI();
};

// 0x8 (0xB68 - 0xB60)
// Class FortniteGame.BuildingRoof
class ABuildingRoof : public ABuildingSMActor
{
public:
	uint8                                        Pad_111D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingRoof* GetDefaultObj();

};

// 0x8 (0xB70 - 0xB68)
// Class FortniteGame.BuildingStairs
class ABuildingStairs : public ABuildingFloor
{
public:
	enum class EBuildingStairsRailing            RailingType;                                       // 0xB68(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1122[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingStairs* GetDefaultObj();

};

// 0x2F8 (0x320 - 0x28)
// Class FortniteGame.BuildingStructuralSupportSystem
class UBuildingStructuralSupportSystem : public UObject
{
public:
	uint8                                        Pad_119D[0x240];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingLayoutRequirement*>    LayoutRequirementActorsToRegister;                 // 0x268(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_119E[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortNavigationGraph*                  NavGraph;                                          // 0x318(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBuildingStructuralSupportSystem* GetDefaultObj();

	bool WouldBuildingBeStructurallySupportedByNeighbors(class ABuildingSMActor* ActorToCheck, struct FVector& Location, struct FRotator& Rotation, bool bMirrored);
	bool K2_GetWorldLocFromGridIndices(struct FBuildingSupportCellIndex& GridIndices, struct FVector* OutWorldLoc);
	void K2_GetNeighboringBuildingActors(enum class EFortBuildingType BuildingType, struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetNeighboringActorsForWallActor(struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetNeighboringActorsForCenterCellActor(struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetLogicalBuildingActors(int32 LogicalIdx, TArray<class ABuildingSMActor*>* LogicalBuildingActors);
	bool K2_GetGridIndicesFromWorldLoc(struct FVector& WorldLoc, struct FBuildingSupportCellIndex* OutGridIndices);
	struct FBox K2_GetGridBoxFromWorldLoc(struct FVector& WorldLocation);
	bool K2_GetBuildingActorsInGridCells(TArray<struct FBuildingSupportCellIndex>& CellIndices, struct FBuildingGridActorFilter& Filter, struct FBuildingNeighboringActorInfo* OutActorsInGridCell);
	bool K2_GetBuildingActorsInGridCell(struct FVector& WorldLocation, struct FBuildingGridActorFilter& Filter, struct FBuildingNeighboringActorInfo* OutActorsInGridCell);
	enum class EFortStructuralGridQueryResults K2_CanAddWallActorToGrid(struct FVector& WorldLocation, struct FBuildingSupportCellIndex& GridIndices, enum class EFortBuildingType WallType, enum class EStructuralWallPosition* OutWallPosition, int32* OutWallIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbSupportedByWorld, bool bAllowStaticOverlap, bool bPerformCollisionChecks);
	enum class EFortStructuralGridQueryResults K2_CanAddFloorActorToGrid(struct FVector& WorldLocation, struct FBuildingSupportCellIndex& GridIndices, enum class EFortBuildingType FloorType, enum class EStructuralFloorPosition* OutFloorPosition, int32* OutFloorIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbSupportedByWorld, bool bAllowStaticOverlap, bool bPerformCollisionChecks);
	enum class EFortStructuralGridQueryResults K2_CanAddCenterCellActorToGrid(struct FVector& WorldLocation, struct FBuildingSupportCellIndex& GridIndices, enum class EFortBuildingType CenterCellType, int32* OutHorizontalGridIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbStructurallySupported, bool bAllowStaticOverlap, bool bPerformCollisionChecks);
	enum class EFortStructuralGridQueryResults K2_CanAddBuildingActorToGrid(class UObject* WorldContextObject, class ABuildingSMActor* ActorToCheck, struct FVector& Location, struct FRotator& Rotation, bool bMirrored, TArray<class ABuildingActor*>* ExistingBuildings, bool bAllowStaticOverlap);
	bool IsWorldLocValid(struct FVector& WorldLoc);
	bool IsBuildingActorValid(class ABuildingSMActor* ActorToTest);
	bool IsBuildingActorStructurallySupported(class ABuildingSMActor* ActorToCheck);
	class ABuildingSMActor* GetWallActor(struct FBuildingSupportCellIndex& GridIndices, enum class EStructuralWallPosition WallPosition);
	void GetLogicalBuildingGroundSupportedActors(int32 LogicalIndex, TArray<class ABuildingSMActor*>* LogicalBuildingGroundSupportedActors);
	struct FBox GetGridBox(struct FBuildingSupportCellIndex& CellIndex);
	class ABuildingSMActor* GetFloorActor(struct FBuildingSupportCellIndex& GridIndices, enum class EStructuralFloorPosition FloorPosition);
	class ABuildingSMActor* GetCenterCellActor(struct FBuildingSupportCellIndex& GridIndices);
	enum class EFortStructuralGridQueryResults CanAddBuildingActorClassToGrid(class UObject* WorldContextObject, class UClass* BuildingSMActorClassToCheck, struct FVector& Location, struct FRotator& Rotation, bool bMirrored, TArray<class ABuildingActor*>* OutExistingBuildings, bool bAllowStaticOverlap);
	bool AreNeighborsConnected(class ABuildingSMActor* NeighborOne, struct FVector& NeighborOneLoc, struct FRotator& NeighborOneRot, bool bNeighborOneMirrored, class ABuildingSMActor* NeighborTwo, struct FVector& NeighborTwoLoc, struct FRotator& NeighborTwoRot, bool bNeighborTwoMirrored);
	bool AreNeighboringBuildingActorsConnected(class ABuildingSMActor* NeighborOne, class ABuildingSMActor* NeighborTwo);
	bool AreGridIndicesValid(struct FBuildingSupportCellIndex& GridIndices);
};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.BuildingTextureData
class UBuildingTextureData : public UDataAsset
{
public:
	class UTexture2D*                            Diffuse;                                           // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            Normal;                                            // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            Specular;                                          // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OverrideMaterial;                                  // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTextureDataType              Type;                                              // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortResourceType                 ResourceType;                                      // 0x51(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11A6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ResourceCost[0x4];                                 // 0x54(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11A7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingTextureData* GetDefaultObj();

};

// 0x140 (0xCA0 - 0xB60)
// Class FortniteGame.BuildingTrap
class ABuildingTrap : public ABuildingSMActor
{
public:
	uint8                                        Pad_11C7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       TraceLocation;                                     // 0xB70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           TrapRangeMesh;                                     // 0xB78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           TrapPreviewMesh;                                   // 0xB80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*               TrapData;                                          // 0xB88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  AttachmentHintText;                                // 0xB90(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFortTargetFilter                     TriggerFilter;                                     // 0xBA8(0x28)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               TrapPlacementOffset;                               // 0xBD0(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySet*                       AbilitySet;                                        // 0xBE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageAttributeSet;                                // 0xBE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAlterationItemDefinition*> AppliedAlterations;                                // 0xBF0(0x10)(Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         AlterationAbilitySetHandles;                       // 0xC00(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      AttachedTo;                                        // 0xC10(0x8)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetWithAttachedTo;                             // 0xC18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      LastAttachedTo;                                    // 0xC20(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBeforeDestroyAfterDurabilityExpired;          // 0xC28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SavedDurabilityPct;                                // 0xC2C(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       ShouldTriggerTraceOffsets;                         // 0xC38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           TriggerComponents;                                 // 0xC48(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>           DamageComponents;                                  // 0xC58(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>          StaticMeshes;                                      // 0xC68(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	int32                                        TrapLevel;                                         // 0xC78(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_11CD[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingTrap* GetDefaultObj();

	bool UseAttachedToWhenTargeted();
	bool TriggerIfAppropriate();
	void OnTriggerTouch(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_AttachedTo();
	void OnReloadEnd();
	void OnReloadBegin();
	void OnPlaced();
	void OnOutOfDurability();
	void OnInitTeam();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnFinishedBuilding();
	void OnDestroy();
	bool HasDurability();
	int32 GetTrapRating();
	int32 GetTrapLevel();
	TArray<class AActor*> GetTouchingDamageTargets(struct FFortTargetFilter& Filter);
	float GetReloadTime();
	float GetMaxDurability();
	float GetFireDelay();
	float GetDurabilityPercent();
	float GetDamageDelay();
	struct FVector GetCenter();
	class ABuildingSMActor* GetBuildingAttachedTo();
	float GetArmTime();
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void FinishTrigger();
	bool BP_ShouldTrigger(TArray<class AActor*>& TouchingActors);
	void AttemptRetrigger(float Seconds);
	void AddTriggerComponent(class UPrimitiveComponent* TriggerComponent);
	void AddDamageComponent(class UPrimitiveComponent* DamageComponent);
};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingTrapCeiling
class ABuildingTrapCeiling : public ABuildingTrap
{
public:

	static class UClass* StaticClass();
	static class ABuildingTrapCeiling* GetDefaultObj();

};

// 0x18 (0xCB8 - 0xCA0)
// Class FortniteGame.BuildingTrapCeiling_Falling
class ABuildingTrapCeiling_Falling : public ABuildingTrapCeiling
{
public:
	class UStaticMeshComponent*                  VisibleMeshComponent;                              // 0xCA0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                    SpawnPoints;                                       // 0xCA8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABuildingTrapCeiling_Falling* GetDefaultObj();

	void TrapActivated(float CooldownDuration);
};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingTrapFloor
class ABuildingTrapFloor : public ABuildingTrap
{
public:

	static class UClass* StaticClass();
	static class ABuildingTrapFloor* GetDefaultObj();

};

// 0x50 (0xCF0 - 0xCA0)
// Class FortniteGame.BuildingTrapDefender
class ABuildingTrapDefender : public ABuildingTrapFloor
{
public:
	enum class EFortDefenderInteractionError     LastInteractError;                                 // 0xCA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11DE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIPawn*                           DefenderPawn;                                      // 0xCA8(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDefenderItemDefinition*           DefenderItemDefinition;                            // 0xCB0(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DefenderItemLevel;                                 // 0xCB8(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11DF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  DefenderPawnOrItemSet;                             // 0xCC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	uint8                                        Pad_11E0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingTrapDefender* GetDefaultObj();

	class UFortWorldItem* TakeWeaponAwayFromDefender(class UFortWorldItem* WeaponToTakeAway);
	void SupplyDefender(class UFortWorldItem* WeaponToGive, int32 AmmoQuantity);
	class AFortAIPawn* SpawnDefenderfromItem(class UFortAccountItem* DefenderItem, class FName& DefenderSquadId, struct FTransform& SpawnTransform, class AActor* InOwner);
	void RemoveCurrentDefender(class AFortPlayerStateZone* RequestingPlayer, bool bRemovalCausedByPlayerJoin);
	void OnRep_DefenderPawn();
	void OnRep_DefenderItemDefinition();
	class FText GetLastInteractErrorText();
	struct FTransform GetDefenderSpawnTransform();
	void DeployDefender(class AFortPlayerController* ItemSelectorPC, class UFortDefenderItem* InDefenderItem, class FName& InDefenderSquadId, class UFortWorldItem* WeaponToGive, int32 AmmoQuantity);
	void ClearCurrentDefender(bool bForceKillDefender);
};

// 0x28 (0xCC8 - 0xCA0)
// Class FortniteGame.BuildingTrapFloor_Hoverboard
class ABuildingTrapFloor_Hoverboard : public ABuildingTrapFloor
{
public:
	class UArrowComponent*                       DirectionArrow;                                    // 0xCA0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PushAmount;                                        // 0xCA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11EB[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingTrapFloor_Hoverboard* GetDefaultObj();

	bool TriggerIfAppropriate();
	void OnTriggerTouch(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnTriggerEndTouch(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void AddTriggerComponent(class UPrimitiveComponent* TriggerComponent);
};

// 0x20 (0xCC0 - 0xCA0)
// Class FortniteGame.BuildingTrapFloor_Hoverboard_Curve
class ABuildingTrapFloor_Hoverboard_Curve : public ABuildingTrapFloor
{
public:
	class USceneComponent*                       Target;                                            // 0xCA0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEffect*                       TriggeredEffect;                                   // 0xCA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_11EF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingTrapFloor_Hoverboard_Curve* GetDefaultObj();

	void OnTriggerTouch(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x28 (0xCC8 - 0xCA0)
// Class FortniteGame.BuildingTrapLauncher
class ABuildingTrapLauncher : public ABuildingTrapFloor
{
public:
	struct FScalableFloat                        LaunchStrength;                                    // 0xCA0(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABuildingTrapLauncher* GetDefaultObj();

};

// 0x0 (0xCA0 - 0xCA0)
// Class FortniteGame.BuildingTrapWall
class ABuildingTrapWall : public ABuildingTrap
{
public:

	static class UClass* StaticClass();
	static class ABuildingTrapWall* GetDefaultObj();

};

// 0x50 (0x140 - 0xF0)
// Class FortniteGame.BuildingTurretComponent
class UBuildingTurretComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnTurretTargetChanged;                             // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          OnFireTagTrigger;                                  // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FiringInterval;                                    // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTargetValidationInterval;                   // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPerformPeriodicValidationOnCurrentTarget : 1;     // Mask: 0x1, PropSize: 0x10x110(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_101 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_11F5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   TargetingOverlapComponent;                         // 0x118(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               OwnerASC;                                          // 0x120(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                CurrentTarget;                                     // 0x128(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11F6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingTurretComponent* GetDefaultObj();

	void SetTargetingOverlapComponent(class UPrimitiveComponent* NewTargetingOverlapComponent);
	void OnTargetingEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTargetingBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_CurrentTarget(class AActor* OldTarget);
	void OnPerformTargetValidation();
	void OnFiringTimer();
	bool IsValidTarget(class AActor* InTarget);
	class AActor* ChooseBestTarget(TArray<class AActor*>& InOutPotentialTargets);
	bool AttemptSetCurrentTarget(class AActor* NewTarget);
};

// 0x10 (0x150 - 0x140)
// Class FortniteGame.BuildingTurretComponent_MOBA
class UBuildingTurretComponent_MOBA : public UBuildingTurretComponent
{
public:
	struct FMOBATurretPrioritySetting            TargetingPriority;                                 // 0x140(0xC)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_11F9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuildingTurretComponent_MOBA* GetDefaultObj();

	void OnAllyHarmed(class AActor* InAllyActor, class AActor* InHarmingActor);
};

// 0x100 (0xC60 - 0xB60)
// Class FortniteGame.BuildingWall
class ABuildingWall : public ABuildingSMActor
{
public:
	uint8                                        Pad_11FB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UNavArea>                DoorObstacleClass;                                 // 0xB68(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FClimbLinkData                        ClimbLink;                                         // 0xB90(0x28)(DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               DoorOffset;                                        // 0xBB8(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_11FD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DoorOpeningSound;                                  // 0xBC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DoorClosingSound;                                  // 0xBD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DoorAnimatingMaterial;                             // 0xBD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           DoorMesh;                                          // 0xBE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DoorComponent;                                     // 0xBE8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDoorLinkComponent*                DoorSmartLinkComp;                                 // 0xBF0(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DoorBlueprintMeshComp;                             // 0xBF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      DoorAnimatingMIDs;                                 // 0xC00(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_11FE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              DoorDesiredRotOffset;                              // 0xC18(0xC)(Net, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_11FF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBuildingActorNavArea                 AreaPatternOverride;                               // 0xC3C(0x4)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AreaWidthOverride;                                 // 0xC40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1200[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EBuildingWallArea                 AreaShapeType;                                     // 0xC48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDoorOpen : 1;                                     // Mask: 0x1, PropSize: 0x10xC49(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLocalDoorOpen : 1;                                // Mask: 0x2, PropSize: 0x10xC49(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_102 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class ECollisionEnabled                 DoorDisabledCollisionSetting;                      // 0xC4A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDoorCollisionDisabled : 1;                        // Mask: 0x1, PropSize: 0x10xC4B(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLocalDoorCollisionDisabled : 1;                   // Mask: 0x2, PropSize: 0x10xC4B(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOverrideAreaWidth : 1;                            // Mask: 0x4, PropSize: 0x10xC4B(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCreateClimbLink : 1;                              // Mask: 0x8, PropSize: 0x10xC4B(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1202[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingWall* GetDefaultObj();

	void VerifyDoorOpenMatchesServer();
	void VerifyDoorCollisionMatchesServer();
	void OnRep_bDoorOpen();
	void OnRep_bDoorCollisionDisabled();
	bool IsDoorOpen();
	bool IsDoorComponent(class UStaticMeshComponent* MeshComponent);
};

// 0x8 (0x330 - 0x328)
// Class FortniteGame.FortClientOnlyActor
class AFortClientOnlyActor : public AActor
{
public:
	uint8                                        Pad_1203[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortClientOnlyActor* GetDefaultObj();

};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.BuildingWeakSpot
class ABuildingWeakSpot : public AFortClientOnlyActor
{
public:
	uint8                                        Pad_1205[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ABuildingSMActor>       ParentBuilding;                                    // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHit : 1;                                          // Mask: 0x1, PropSize: 0x10x340(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFadeOut : 1;                                      // Mask: 0x2, PropSize: 0x10x340(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bActive : 1;                                       // Mask: 0x4, PropSize: 0x10x340(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_103 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1206[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HitCount;                                          // 0x344(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x348(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLevel;                                          // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               StartingLocation;                                  // 0x350(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitNormal;                                         // 0x35C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPhysicalSurface                  PhysicalSurfaceType;                               // 0x368(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1207[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABuildingWeakSpot* GetDefaultObj();

	void OnStartDirectionEffect();
	void OnHit();
	void OnFadeOut();
	void Deactivate();
};

// 0x50 (0x140 - 0xF0)
// Class FortniteGame.BulletWhipTrackerComponentBase
class UBulletWhipTrackerComponentBase : public UActorComponent
{
public:
	float                                        PassByRadiusMax;                                   // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PassByRadiusMin;                                   // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PassByFarSound;                                    // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PassByCloseSound;                                  // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WhipTrackerMinimumTriggerDistance;                 // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_120A[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBulletWhipTrackerComponentBase* GetDefaultObj();

	void UpdateVelocity(const struct FVector& CurrentVelocity);
	void Reset(const struct FVector& StartLocationIn);
	void Disable();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.CosmeticPreviewInterface
class ICosmeticPreviewInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICosmeticPreviewInterface* GetDefaultObj();

	void PerformSpecialAction(class FName ActionName);
	void GetSpecialPreviewActions(TArray<class FName>* OutActionList);
	void CustomizePreviewInstance(class UFortItemDefinition* InItemDefinition);
};

// 0x48 (0x78 - 0x30)
// Class FortniteGame.CustomAccessoryAttachmentData
class UCustomAccessoryAttachmentData : public UDataAsset
{
public:
	struct FVector                               MaleRelativeScale;                                 // 0x30(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               FemaleRelativeScale;                               // 0x3C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SmallMaleRelativeScale;                            // 0x48(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SmallFemaleRelativeScale;                          // 0x54(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LargeMaleRelativeScale;                            // 0x60(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LargeFemaleRelativeScale;                          // 0x6C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCustomAccessoryAttachmentData* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.CustomColorSwatch
class UCustomColorSwatch : public UPrimaryDataAsset
{
public:
	enum class EFortCustomGender                 GenderPermitted;                                   // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EColorSwatchType                  ColorSwatchType;                                   // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1210[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomColorSwatch* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class FortniteGame.CustomDynamicColorSwatch
class UCustomDynamicColorSwatch : public UCustomColorSwatch
{
public:
	TArray<struct FColorSwatchPair>              ColorPairs;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCustomPartTextureParameter>   TextureParameters;                                 // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCustomDynamicColorSwatch* GetDefaultObj();

};

// 0x30 (0x88 - 0x58)
// Class FortniteGame.CustomAccessoryColorSwatch
class UCustomAccessoryColorSwatch : public UCustomDynamicColorSwatch
{
public:
	struct FLinearColor                          AccessoryColors[0x3];                              // 0x58(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomAccessoryColorSwatch* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.CustomCharacterPartData
class UCustomCharacterPartData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCustomCharacterPartData* GetDefaultObj();

};

// 0xE8 (0x110 - 0x28)
// Class FortniteGame.CustomCharacterAccessoryData
class UCustomCharacterAccessoryData : public UCustomCharacterPartData
{
public:
	class FName                                  AttachSocketName;                                  // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomAccessoryAttachmentData*        AttachmentOverrideData;                            // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseCollisionFromBody;                             // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1213[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UPhysicsAsset>          PhysicsAsset;                                      // 0x40(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0x68(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           FrontEndAnimClass;                                 // 0x90(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           MannequinAnimClass;                                // 0xB8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomAccessoryColorSwatch> AccessoryColors;                                   // 0xE0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1215[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomCharacterAccessoryData* GetDefaultObj();

};

// 0x8 (0x118 - 0x110)
// Class FortniteGame.CustomCharacterBackpackData
class UCustomCharacterBackpackData : public UCustomCharacterAccessoryData
{
public:
	class FName                                  LootSocketName;                                    // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomCharacterBackpackData* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class FortniteGame.CustomCharacterBodyPartData
class UCustomCharacterBodyPartData : public UCustomCharacterPartData
{
public:
	TSoftClassPtr<class UAnimInstance>           AnimClass;                                         // 0x28(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           FrontEndAnimClass;                                 // 0x50(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAnimInstance>           MannequinAnimClass;                                // 0x78(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomAccessoryColorSwatch> AccessoryColors;                                   // 0xA0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomCharacterBodyPartData* GetDefaultObj();

};

// 0x8 (0x118 - 0x110)
// Class FortniteGame.CustomCharacterCharmData
class UCustomCharacterCharmData : public UCustomCharacterAccessoryData
{
public:
	enum class EFortCustomPartType               PartAttachedToOverride;                            // 0x110(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1216[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomCharacterCharmData* GetDefaultObj();

};

// 0x8 (0x118 - 0x110)
// Class FortniteGame.CustomCharacterFaceData
class UCustomCharacterFaceData : public UCustomCharacterAccessoryData
{
public:
	enum class EFortCustomPartType               PartAttachedToOverride;                            // 0x110(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1217[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomCharacterFaceData* GetDefaultObj();

};

// 0x8 (0x118 - 0x110)
// Class FortniteGame.CustomCharacterHatData
class UCustomCharacterHatData : public UCustomCharacterAccessoryData
{
public:
	enum class ECustomHatType                    HatType;                                           // 0x110(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1218[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomCharacterHatData* GetDefaultObj();

};

// 0xE0 (0x1A8 - 0xC8)
// Class FortniteGame.CustomCharacterHeadData
class UCustomCharacterHeadData : public UCustomCharacterBodyPartData
{
public:
	TSoftObjectPtr<class UFortMontageLookupTable> RootSkeletonDefaultMontageLookupTable;             // 0xC8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> RootSkeletonOverrideMontageLookupTable;            // 0xF0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomSkinColorSwatch> SkinColorSwatch;                                   // 0x118(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomHairColorSwatch> HairColorSwatch;                                   // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          CapMorphTargets;                                   // 0x168(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          HelmetMorphTargets;                                // 0x178(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          MaskMorphTargets;                                  // 0x188(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          HatMorphTargets;                                   // 0x198(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomCharacterHeadData* GetDefaultObj();

};

// 0x158 (0x880 - 0x728)
// Class FortniteGame.CustomCharacterPart
class UCustomCharacterPart : public UFortWorldItemDefinition
{
public:
	enum class EFortCustomGender                 GenderPermitted;                                   // 0x728(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomBodyType               BodyTypesPermitted;                                // 0x729(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomPartType               CharacterPartType;                                 // 0x72A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_121A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 PartTypeTags;                                      // 0x730(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 DisallowedCosmeticTags;                            // 0x750(0x20)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bGameplayRelevantCosmeticPart;                     // 0x770(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_121B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ACustomCharacterPartModifier> PartModifierBlueprint;                             // 0x778(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomCharacterPartData*              AdditionalData;                                    // 0x7A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> DefaultMontageLookupTable;                         // 0x7A8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> OverrideMontageLookupTable;                        // 0x7D0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x7F8(0x28)(Edit, AssetRegistrySearchable, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class USkeletalMesh>>  MasterSkeletalMeshes;                              // 0x820(0x10)(Edit, ZeroConstructor, AssetRegistrySearchable, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bSinglePieceMesh;                                  // 0x830(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportsColorSwatches;                            // 0x831(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_121C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCustomPartMaterialOverrideData> MaterialOverrides;                                 // 0x838(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCustomPartTextureParameter>   TextureParameters;                                 // 0x848(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCustomPartScalarParameter>    ScalarParameters;                                  // 0x858(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCustomPartVectorParameter>    VectorParameters;                                  // 0x868(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        MaterialOverrideFlags;                             // 0x878(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_121D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomCharacterPart* GetDefaultObj();

	class USkeletalMesh* GetSkeletalMesh();
	TMap<int32, class UMaterialInterface*> GetMaterialOverridesByIndex();
};

// 0x88 (0x3E0 - 0x358)
// Class FortniteGame.FortAnimInstance
class UFortAnimInstance : public UAnimInstance
{
public:
	bool                                         bUpdateAllPawnProperties;                          // 0x358(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_121E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VelocityLerpAlpha;                                 // 0x35C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PawnVelocity;                                      // 0x360(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeed2DThreshold;                               // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnSpeed2D;                                       // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnVelocityZ;                                     // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnMovementDirectionAzimuth;                      // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PawnMovementDirectionElevation;                    // 0x37C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PawnDeltaRotation;                                 // 0x380(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              PawnLastRotation;                                  // 0x38C(0xC)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsJumping;                                        // 0x398(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFalling;                                        // 0x399(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldPredictLanding;                             // 0x39A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLandingPredicted;                                 // 0x39B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PredictedFallTimeLeft;                             // 0x39C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallLookAheadSubStepping;                          // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FallLookAheadMaxIterations;                        // 0x3A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugLandPrediction;                              // 0x3A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecordJumpPositions;                              // 0x3A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRecordingJump;                                  // 0x3AA(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1220[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RecordJumpFrameCount;                              // 0x3AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RecordJumpInitialJumpLocation;                     // 0x3B0(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimPitch;                                          // 0x3BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimYaw;                                            // 0x3C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeForRecentlyFired;                              // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToReachRelaxedLevel1;                          // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToReachRelaxedLevel2;                          // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecentlyFired;                                    // 0x3D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRelaxedLevel1;                                  // 0x3D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRelaxedLevel2;                                  // 0x3D2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1222[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RelaxedLevelTimeCounter;                           // 0x3D4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SavedWeaponLastFireTime;                           // 0x3D8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1223[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnimInstance* GetDefaultObj();

	class AFortPawn* TryGetFortPawn();
	class AFortAIPawn* TryGetFortAIPawn();
	void AnimNotify_RightFootStep(class UAnimNotify* Notify);
	void AnimNotify_LeftFootStep(class UAnimNotify* Notify);
};

// 0x30 (0x410 - 0x3E0)
// Class FortniteGame.CustomCharacterPartAnimInstance
class UCustomCharacterPartAnimInstance : public UFortAnimInstance
{
public:
	uint8                                        Pad_1224[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUsesDayPhaseChange : 1;                           // Mask: 0x1, PropSize: 0x10x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreSignificanceManagerAndAlwaysTick : 1;       // Mask: 0x2, PropSize: 0x10x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRestrictClothToLocalPlayer : 1;                   // Mask: 0x4, PropSize: 0x10x3E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanPlayCustomAnimations : 1;                      // Mask: 0x8, PropSize: 0x10x3E8(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_104 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1225[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagAnimations                GameplayTagAnimations;                             // 0x3F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask: 0x1, PropSize: 0x10x400(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_105 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1226[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCustomPartType               PartType;                                          // 0x404(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1227[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomCharacterPartAnimInstance* GetDefaultObj();

	void PreDestruction();
	void OnPlayMontageFromGameplayTagQuery(struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent();
	float GetOwnerZVelocity();
	class USkeletalMeshComponent* GetOwnerSkeletalMeshComponent();
	float GetOwnerDirection();
	enum class EFortCustomPartType GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.CustomCharacterPartModifier
class ACustomCharacterPartModifier : public AActor
{
public:
	uint8                                        bUsesDayPhaseChange : 1;                           // Mask: 0x1, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask: 0x2, PropSize: 0x10x328(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_106 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1228[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPlayerPawn>        FortPlayerPawnPtr;                                 // 0x32C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCustomPartType               PartType;                                          // 0x334(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_122A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACustomCharacterPartModifier* GetDefaultObj();

	void PreDestruction();
	void OnPawnAndPartChanged();
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	enum class EFortCustomPartType GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.CustomCharacterPartOwnerInterface
class ICustomCharacterPartOwnerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICustomCharacterPartOwnerInterface* GetDefaultObj();

	void PlayAnimationsMatchingQuery(struct FGameplayTagQuery& TagQueryToMatch);
	class USkeletalMeshComponent* GetCustomizationRootSkeletalMeshComponent();
};

// 0x20 (0x58 - 0x38)
// Class FortniteGame.CustomClothingColorSwatch
class UCustomClothingColorSwatch : public UCustomColorSwatch
{
public:
	struct FLinearColor                          AccessoryColors[0x2];                              // 0x38(0x20)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomClothingColorSwatch* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.CustomColorComponent
class UCustomColorComponent : public UObject
{
public:
	uint8                                        Pad_122D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomColorComponent* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.CustomHairColorSwatch
class UCustomHairColorSwatch : public UCustomDynamicColorSwatch
{
public:

	static class UClass* StaticClass();
	static class UCustomHairColorSwatch* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.CustomPlayerComponent
class UCustomPlayerComponent : public UObject
{
public:
	uint8                                        Pad_122F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomPlayerComponent* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.CustomSkinColorSwatch
class UCustomSkinColorSwatch : public UCustomDynamicColorSwatch
{
public:

	static class UClass* StaticClass();
	static class UCustomSkinColorSwatch* GetDefaultObj();

};

// 0x8 (0x6B0 - 0x6A8)
// Class FortniteGame.DecoyActor
class ADecoyActor : public ABuildingGameplayActor
{
public:
	float                                        GoalOverrideRadius;                                // 0x6A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1230[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADecoyActor* GetDefaultObj();

};

// 0x60 (0x708 - 0x6A8)
// Class FortniteGame.DeployableBaseCore
class ADeployableBaseCore : public ABuildingGameplayActor
{
public:
	class ADeployableBasePlot*                   Plot;                                              // 0x6A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        SimpleDeathParticles;                              // 0x6B0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             SimpleDeathSound;                                  // 0x6D8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRegisterAsGlobalGameplayEventListener : 1;        // Mask: 0x1, PropSize: 0x10x700(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1232[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADeployableBaseCore* GetDefaultObj();

	struct FTransform GetSimpleDeathFXTransform();
};

// 0x238 (0x8E0 - 0x6A8)
// Class FortniteGame.DeployableBasePlot
class ADeployableBasePlot : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_123A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      OccupantNetID;                                     // 0x6B0(0x28)(Net, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortCloudSaveInfo                    OccupantNextCloudSaveInfo;                         // 0x6D8(0x18)(Transient, Protected, NativeAccessSpecifierProtected)
	class UFortDeployableBaseRecord*             OccupantDeployableBaseRecord;                      // 0x6F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BuildableSpaceComponent;                           // 0x6F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         SavableSpaceComponent;                             // 0x700(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         EntirePlotSpaceComponent;                          // 0x708(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SpawnOffsetComponent;                              // 0x710(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BuildableAreasArray[0x3];                          // 0x718(0x18)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ADeployableBaseCore>     DeployableBaseCoreClass;                           // 0x730(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADeployableBaseCore*                   DeployableBaseCore;                                // 0x758(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDirty : 1;                                        // Mask: 0x1, PropSize: 0x10x760(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDirtiedSinceLastWriteToBuffer : 1;                // Mask: 0x2, PropSize: 0x10x760(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCloudFileSavedSinceLastCloudItemUpdate : 1;       // Mask: 0x4, PropSize: 0x10x760(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_107 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_123B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EDeployableBaseBuildingState      CurrentBuildingState;                              // 0x764(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDeployableBaseBuildingState      GoalBuildingState;                                 // 0x765(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_123C[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOccupantIdChanged;                               // 0x778(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBaseCoreCreated;                       // 0x788(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBaseCoreDestroyed;                     // 0x798(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBasePlotSpacesChanged;                 // 0x7A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortDeployableBasePickup*>     OutstandingAssociatedPickups;                      // 0x7B8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortInventory*                        PlotInventory;                                     // 0x7C8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_123E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DeferredActorIdxToResumeAt;                        // 0x7E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumActorsFromRecordDestroyed;                      // 0x7EC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntVector                            BuildableSpaceExpansionVector;                     // 0x7F0(0xC)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActorsToCreatePerBuildingCall;                  // 0x7FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActorsToDestroyPerDestroyCall;                  // 0x800(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenActorRecordBuilding;                   // 0x804(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayBetweenActorRecordDestroying;                 // 0x808(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1242[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStart*                      PlayerStart;                                       // 0x810(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ConstructionTimeEffect;                            // 0x818(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDeferredActorData>            DeferredConstructionActors;                        // 0x820(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1243[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBox                                  BuildableAreasStructuralSupportBoxesArray[0x3];    // 0x838(0x54)(Net, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1244[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADeployableBasePlot* GetDefaultObj();

	void OnRep_OccupantNetID();
	void OnRep_CurrentBuildingState();
	void OnRep_BuildableSpaceExpansionVector();
	void OnCurrentBuildingStateSet(enum class EDeployableBaseBuildingState InCurrentBuildingState);
	void OnBuildingStateTransition(enum class EDeployableBaseBuildingState InPreviousState, enum class EDeployableBaseBuildingState InCurrentState);
	bool IsOccupied();
	bool IsOccupant(struct FUniqueNetIdRepl& UserId);
	bool IsBuildingActorWithinBuildableSpace(class ABuildingActor* ActorToCheck, struct FVector& GridLocation);
	void HandleBuildingStateTransition(enum class EDeployableBaseBuildingState InPreviousState, enum class EDeployableBaseBuildingState InCurrentState);
	class AFortPlayerStart* GetPlayerStart();
	struct FUniqueNetIdRepl GetOccupantNetID();
	int32 GetNumOfItemsInPlot();
};

// 0x38 (0x3B0 - 0x378)
// Class FortniteGame.EdgeNavLinks
class AEdgeNavLinks : public ANavLinkProxy
{
public:
	float                                        DistanceBetweenLinks;                              // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Start;                                             // 0x37C(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               End;                                               // 0x388(0xC)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SnapRadius;                                        // 0x394(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SnapHeight;                                        // 0x398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LinkProjectionHeight;                              // 0x39C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightLinkForwardOffset;                            // 0x3A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x3A4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1245[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bManualAdjustment : 1;                             // Mask: 0x1, PropSize: 0x10x3A8(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1247[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AEdgeNavLinks* GetDefaultObj();

};

// 0x0 (0x560 - 0x560)
// Class FortniteGame.EdgeNavLinksRenderingComponent
class UEdgeNavLinksRenderingComponent : public UNavLinkRenderingComponent
{
public:

	static class UClass* StaticClass();
	static class UEdgeNavLinksRenderingComponent* GetDefaultObj();

};

// 0x188 (0x4B0 - 0x328)
// Class FortniteGame.FortSaveFileBuildingInstructionsHandler
class AFortSaveFileBuildingInstructionsHandler : public AActor
{
public:
	class FString                                SaveFileName;                                      // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LoadedBuildingsScale;                              // 0x338(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LoadedBuildingsAdditionalTranslation;              // 0x344(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseAbsoluteCoordinates : 1;                       // Mask: 0x1, PropSize: 0x10x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTrackDestroyedBuildings : 1;                      // Mask: 0x2, PropSize: 0x10x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_108 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_124E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortBuildingInstructions> DefaultBuildingInstructions;                       // 0x358(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLoadInvisible : 1;                                // Mask: 0x1, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDespawnOnBuildingsSpawned : 1;                    // Mask: 0x2, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSpawnBuildingsAutomaticallyAfterLoad : 1;         // Mask: 0x4, PropSize: 0x10x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_109 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_124F[0x87];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      OperationUserId;                                   // 0x408(0x28)(Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1250[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortSaveFileBuildingInstructionsHandler* GetDefaultObj();

	bool SaveBuildings(class AFortPlayerController* FortPC);
	bool ResetBuildings();
	void LoadBuildings(class AFortPlayerController* FortPC);
	bool AreBuildingsLoaded();
};

// 0x8 (0x4B8 - 0x4B0)
// Class FortniteGame.FOBSaveFileBuildingInstructionsHandler
class AFOBSaveFileBuildingInstructionsHandler : public AFortSaveFileBuildingInstructionsHandler
{
public:
	float                                        BuildingPieceConstructionTime;                     // 0x4B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1251[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFOBSaveFileBuildingInstructionsHandler* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortCameraMode
class UFortCameraMode : public UObject
{
public:
	class AFortPlayerCameraBase*                 PlayerCamera;                                      // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionTime;                                    // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionOutTime;                                 // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FViewTargetTransitionParams           TransitionParams;                                  // 0x38(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bResetInterpolation : 1;                           // Mask: 0x1, PropSize: 0x10x48(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1253[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCameraMode* GetDefaultObj();

};

// 0xD8 (0x128 - 0x50)
// Class FortniteGame.Fort3PCameraMode
class UFort3PCameraMode : public UFortCameraMode
{
public:
	struct FViewOffsetData                       ViewOffsets;                                       // 0x50(0x24)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        FOV;                                               // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SafeLocationOffset;                                // 0x78(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bValidateSafeLoc : 1;                              // Mask: 0x1, PropSize: 0x10x84(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDoPredictiveAvoidance : 1;                        // Mask: 0x2, PropSize: 0x10x84(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPreventPenetration : 1;                           // Mask: 0x4, PropSize: 0x10x84(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_10A : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1254[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPenetrationAvoidanceFeeler>   PenetrationAvoidanceFeelers;                       // 0x88(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        PenetrationBlendInTime;                            // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PenetrationBlendOutTime;                           // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PivotLocInterpSpeed;                               // 0xA0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PivotRotInterpSpeed;                               // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FOVInterpSpeed;                                    // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewOffsetInterpSpeed;                             // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeLocationInterpSpeed;                           // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastActualViewOffset;                              // 0xBC(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastIdealViewOffset;                               // 0xC8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastFOV;                                           // 0xD4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastSafeLocationLocal;                             // 0xD8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastSafeLocation;                                  // 0xE4(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastSafeLocBlockedPct;                             // 0xF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastPenetrationBlockedPct;                         // 0xF4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastActualPivotLoc;                                // 0xF8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LastActualPivotRot;                                // 0x104(0xC)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               LastIdealPivotLoc;                                 // 0x110(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LastIdealPivotRot;                                 // 0x11C(0xC)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFort3PCameraMode* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class FortniteGame.Fort3PCam_Default
class UFort3PCam_Default : public UFort3PCameraMode
{
public:

	static class UClass* StaticClass();
	static class UFort3PCam_Default* GetDefaultObj();

};

// 0x0 (0x128 - 0x128)
// Class FortniteGame.Fort3PCam_Targeting
class UFort3PCam_Targeting : public UFort3PCameraMode
{
public:

	static class UClass* StaticClass();
	static class UFort3PCam_Targeting* GetDefaultObj();

};

// 0x7D8 (0xB00 - 0x328)
// Class FortniteGame.FortWeapon
class AFortWeapon : public AActor
{
public:
	uint8                                        Pad_126F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnWeaponRateOfFireChanged;                         // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1270[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsEquippingWeapon;                                // 0x358(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsReloadingWeapon;                                // 0x359(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsChargingWeapon;                                 // 0x35A(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1271[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnLocalAmmoChanged;                                // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1272[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnReticleColorChanged;                             // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             WeaponData;                                        // 0x388(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             CosmeticOverrideWeaponData;                        // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;               // 0x398(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UWeaponHitNotifyAudioBank*             HitNotifyAudioBank;                                // 0x3A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CosmeticStatToObserve;                             // 0x3B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CosmeticStatValue;                                 // 0x3B8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        EquippedWeaponDestroyWrapperRepCounter;            // 0x3BC(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldDrawNativeReticle;                          // 0x3BD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1273[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ReticleImage;                                      // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleDefaultColor;                               // 0x3C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleEnemyColor;                                 // 0x3CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                ReticleBuildingColor;                              // 0x3D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1274[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            HitNotifyReticleImage;                             // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HitNotifyDisplayDuration;                          // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1275[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ReticleCenterImage;                                // 0x3E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            ReticleCenterPerfectAimImage;                      // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MuzzleBlockedReticleImage;                         // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReticleDefaultPrimaryStrikeAngle;                  // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReticleDefaultSecondaryStrikeAngle;                // 0x404(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportsAutofireAtReticleTarget;                  // 0x408(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1277[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode>           CameraBase3PClass;                                 // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CameraTargeting3PClass;                            // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CameraBase1PClass;                                 // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CameraTargeting1PClass;                            // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DestroyedSound;                                    // 0x430(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            OutOfAmmoSound;                                    // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ReloadSounds[0x3];                                 // 0x440(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PrimaryFireSound[0x3];                             // 0x458(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            PrimaryFireStopSound[0x3];                         // 0x470(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SecondaryFireSound[0x3];                           // 0x488(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SecondaryFireStopSound[0x3];                       // 0x4A0(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PrimaryFireSoundFadeOutTime;                       // 0x4B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_127A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ImpactPhysicalSurfaceSounds[0x3F];                 // 0x4C0(0x1F8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ImpactPhysicalSurfaceEffects[0x3F];                // 0x6B8(0x1F8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCameraShake>              ImpactCameraShake;                                 // 0x8B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  PrimaryForceFeedbackEffect;                        // 0x8B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  SecondaryForceFeedbackEffect;                      // 0x8C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  PrimaryImpactForceFeedbackEffect;                  // 0x8C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                  SecondaryImpactForceFeedbackEffect;                // 0x8D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       FireAudioChannels[0x4];                            // 0x8D8(0x20)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentGunFireIndex;                               // 0x8F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_127B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                WeaponMesh;                                        // 0x900(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            DefaultWeaponMaterials;                            // 0x908(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        FireAudioChannelWantsToPlay[0x4];                  // 0x918(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsingSecondaryFireAudio;                          // 0x928(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_127C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColor                                CurrentReticleColor;                               // 0x92C(0x4)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentDamageStartLocation;                        // 0x930(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentAdjustedAimDirection;                       // 0x93C(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortEffectDistanceQuality            FireFXSignificance;                                // 0x948(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LastFireTime;                                      // 0x960(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayingFireFX;                                  // 0x964(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFireFXTriggered;                                  // 0x965(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_127D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimerIntervalAdjustment;                           // 0x968(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputQueueTimePercent;                             // 0x96C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowTargeting;                                   // 0x970(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsTargeting;                                      // 0x971(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_127E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastTargetingTransitionTime;                       // 0x974(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetSourceOffset;                                // 0x978(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetSourceOffsetWhileCrouched;                   // 0x984(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetSourceOffsetWhileTargeting;                  // 0x990(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTraceThroughPawns;                                // 0x99C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTraceThroughWorld;                                // 0x99D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_127F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TraceThroughPawnsLimit;                            // 0x9A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TraceThroughBuildingsLimit;                        // 0x9A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastReloadTime;                                    // 0x9A8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastSuccessfulReloadTime;                          // 0x9AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentReloadDuration;                             // 0x9B0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 ItemEntryGuid;                                     // 0x9B4(0x10)(Net, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponLevel;                                       // 0x9C4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AmmoCount;                                         // 0x9C8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1280[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BurstFireCounter;                                  // 0x9D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargeTime;                                        // 0x9D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentShotLogIndex;                               // 0x9D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1281[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint32>                               ShotLogFlags;                                      // 0x9E0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        bInitializedWeaponItem : 1;                        // Mask: 0x1, PropSize: 0x10x9F0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_10B : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUpdateLocalAmmoCount : 1;                         // Mask: 0x8, PropSize: 0x10x9F0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPendingDestroyDueToDurabilityOrStackCount : 1;    // Mask: 0x10, PropSize: 0x10x9F0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_10C : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1282[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int16                                        ChargeStatusPack;                                  // 0x9F4(0x2)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1283[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortProjectileTrajectory*             AttachedTrajectoryIndicator;                       // 0xA00(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGameplayAbility*                  ActiveAbility;                                     // 0xA08(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            PrimaryAbilitySpecHandle;                          // 0xA10(0x4)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            SecondaryAbilitySpecHandle;                        // 0xA14(0x4)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            ReloadAbilitySpecHandle;                           // 0xA18(0x4)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1285[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAbilitySpecHandle>    EquippedAbilityHandles;                            // 0xA20(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         EquippedAbilitySetHandles;                         // 0xA30(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AppliedAlterations;                                // 0xA40(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	class AFortFXManager*                        CachedFXManager;                                   // 0xA50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSignificanceManager*              CachedSignificanceManager;                         // 0xA58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleSocketName;                                  // 0xA60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleFalloffSocketName;                           // 0xA68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1286[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxWeaponSwitchNetworkWaitTime;                    // 0xA80(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastFireAbilityTime;                               // 0xA84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          EquipAnimation;                                    // 0xA88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ReloadAnimation;                                   // 0xA90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponEquipMontage;                                // 0xA98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponReloadMontage;                               // 0xAA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponCoreAnimation          WeaponCoreAnimation;                               // 0xAA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1287[0x47];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LockOnTargetCandidate;                             // 0xAF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1288[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIgnoreTryToFireSlotCooldownRestriction;           // 0xAF9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1289[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortWeapon* GetDefaultObj();

	void UseWeaponDurability(float DurabilityScale);
	void StopWeaponFireFX();
	void StopForceFeedback();
	void SetWeaponVisibility(bool bDesiredVisibility, bool bForceUpdate);
	void SetShouldDrawNativeReticle(bool bInShouldDrawReticle);
	void SetFireSoundPitchMultiplier(float NewPitch);
	void ServerSetChargeState(uint8 NewState);
	void ServerResetShotReport();
	void ServerReleaseWeaponPrimaryAbility();
	void ResetTempWeaponMaterialOverride();
	void Reload();
	void PlayWeaponFireFX(bool bSecondaryFire);
	void PlayReloadFX(enum class EFortReloadFXState ReloadStage);
	void PlayNativeImpactFX(struct FHitResult& HitResult, struct FGameplayCueParameters& GameplayCueParameters);
	void PlayForceFeedback(bool bSecondaryFire, bool bPersistentFire, bool bImpact);
	void OnWeaponVisibilityChanged(bool bVisible);
	void OnWeaponMontageStarted(class UAnimMontage* WeaponMontage);
	void OnWeaponMontageBlendingOut(class UAnimMontage* WeaponMontage, bool bInterrupted);
	void OnWeaponDetached();
	void OnWeaponAttached();
	void OnStopWeaponFireFX();
	void OnStartCharge();
	void OnSetTargeting(bool bNewIsTargeting);
	void OnRep_ReplicatedWeaponData();
	void OnRep_ReplicatedCosmeticOverrideWeaponData();
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_PrimaryAbilitySpecHandle();
	void OnRep_EquippedWeaponDestroyWrapper();
	void OnRep_CosmeticStatValue();
	void OnRep_ChargeStatusPack();
	void OnRep_AmmoCount(int32 OldAmmoCount);
	void OnReachedMinCharge();
	void OnReachedMaxCharge();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnPlayReloadFX(enum class EFortReloadFXState ReloadStage);
	void OnPlayImpactFX(struct FHitResult& HitResult, enum class EPhysicalSurface ImpactPhysicalSurface, class UParticleSystemComponent* SpawnedPSC);
	void OnPawnMontageStarted(class UAnimMontage* PawnMontage);
	void OnPawnMontageBlendingOut(class UAnimMontage* PawnMontage, bool bInterrupted);
	void OnOutOfAmmoFire();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod, class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnEquippedWeaponDestory();
	void OnEndCharge();
	void OnChargeUp();
	void OnChargeDown();
	void OnAmmoCountChanged();
	void K2_OnUnEquip();
	void K2_OnProgressiveCosmeticWatchedStatChanged(class FName StatName, int32 NewValue);
	bool IsSuppressed();
	bool IsReloading();
	bool IsProjectileWeapon();
	float GetWeaponRateOfFireModifier();
	bool GetSupportsAutoFireAtReticleTargetMode();
	struct FColor GetReticleColor();
	int32 GetRemainingAmmo();
	float GetReloadTime();
	float GetReloadProgress();
	float GetRange();
	float GetProjectileSpeed();
	struct FTransform GetMuzzleSocketTransform();
	struct FVector GetMuzzleLocation();
	float GetMeleeAttackPlayRate();
	int32 GetMagazineAmmoCount();
	int32 GetLocalRemainingAmmo();
	int32 GetLocalMagazineAmmoCount();
	struct FGuid GetInventoryGUID();
	float GetFiringRate();
	struct FVector GetDamageStartLocation(struct FVector* AimDir);
	float GetCurrentMaxChargePercent();
	enum class EFortWeaponCoreAnimation GetCoreAnimation();
	float GetChargeToMinPercent();
	float GetChargePercent();
	int32 GetBulletsPerClip();
	int32 GetAmmoCostPerFire(float ChargePercentage);
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void GameplayCue_Weapons_Activation(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Impact(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	struct FColor DetermineReticleColor();
	void ClientReportShotFlags(uint32 ShotFlags, int32 ShotIndex);
	void ClientGivenTo(class APawn* P);
};

// 0x50 (0xB50 - 0xB00)
// Class FortniteGame.FortDecoTool
class AFortDecoTool : public AFortWeapon
{
public:
	bool                                         bButtonDown;                                       // 0xB00(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_128D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   ItemDefinition;                                    // 0xB08(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                       DecoHelper;                                        // 0xB10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                CarriedActor;                                      // 0xB18(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlaceCarriedActor;                                // 0xB20(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_128E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        SpawnEffect;                                       // 0xB28(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortDecoTool* GetDefaultObj();

	void ServerSpawnDeco(const struct FVector& Location, const struct FRotator& Rotation, class ABuildingSMActor* AttachedActor, enum class EBuildingAttachmentType InBuildingAttachmentType);
	void OnRep_ItemDefinition();
	void OnRep_CarriedActor(class AActor* OldCarriedActor);
	void OnCarriedActorDestroyed(class AActor* DestroyedActor);
	void ClientDestroyDecoPreview();
};

// 0x28 (0xB78 - 0xB50)
// Class FortniteGame.FortAbilityDecoTool
class AFortAbilityDecoTool : public AFortDecoTool
{
public:
	struct FAbilityToolSpawnParameters           CachedSpawnParameters;                             // 0xB50(0x28)(Transient, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortAbilityDecoTool* GetDefaultObj();

	void GetSpawnParameters(struct FAbilityToolSpawnParameters* OutSpawnParamters);
	class UFortGameplayAbility* GetPlacementAbilityInstance();
	struct FGameplayAbilitySpecHandle GetPlacementAbilityHandle();
	class ABuildingActor* AbilitySpawnDeco(struct FAbilityToolSpawnParameters& SpawnParameters);
};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.FortAbilitySet
class UFortAbilitySet : public UPrimaryDataAsset
{
public:
	uint8                                        Pad_128F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UFortGameplayAbility>> GameplayAbilities;                                 // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfoHard> GrantedGameplayEffects;                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> PassiveGameplayEffects;                            // 0x58(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAbilitySet* GetDefaultObj();

};

// 0x1A8 (0x210 - 0x68)
// Class FortniteGame.FortAbilityKit
class UFortAbilityKit : public UFortAbilitySet
{
public:
	uint8                                        Pad_1290[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DisplayName;                                       // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	TArray<class FText>                          Description;                                       // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	class FText                                  TooltipDescription;                                // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FSlateBrush                           IconBrush;                                         // 0xB0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PrimaryTraitIconBrushOverride;                     // 0x138(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortGadgetItemDefinition>> Gadgets;                                           // 0x1C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FAbilityKitItem>               Items;                                             // 0x1D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortSchematicItemDefinition*>  AddedSchematics;                                   // 0x1E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortSchematicItemDefinition*>  RemovedSchematics;                                 // 0x1F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortTooltip>              Tooltip;                                           // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTooltipDisplayStatsList*          StatList;                                          // 0x208(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAbilityKit* GetDefaultObj();

	TArray<class FText> GetDescription(class UObject* WorldContextObject);
	void BP_GetGadgets(TArray<class UFortGadgetItemDefinition*>* GadgetItemDefinitions);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAbilityKitTooltip
class UFortAbilityKitTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortAbilityKitTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAbilitySetTooltip
class UFortAbilitySetTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortAbilitySetTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
};

// 0x298 (0x1460 - 0x11C8)
// Class FortniteGame.FortAbilitySystemComponent
class UFortAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_12A4[0x178];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedMontagePair                LandingMontagePair;                                // 0x1340(0x28)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_12A5[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilitySystemComponent* GetDefaultObj();

	void SetLandingMontageReplication(class UAnimMontage* Montage1, class FName Section1, class UAnimMontage* Montage2, class FName Section2);
	void NetMulticast_RefreshActiveGameplayEffectCueEvents();
	bool HasActiveAbilityWithAnyMatchingTag(const struct FGameplayTagContainer& Tags);
	float GetAttributeMagnitude(const struct FAttributeInfo& Info);
	struct FAttributeInfo FindAttributeInformation(const class FString& AttributeName);
	bool CanActivateAbilityWithMatchingTag(const struct FGameplayTagContainer& GameplayAbilityTags);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAbilitySystemComponentAbilityGivenListenerInterface
class IFortAbilitySystemComponentAbilityGivenListenerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAbilitySystemComponentAbilityGivenListenerInterface* GetDefaultObj();

};

// 0x0 (0x1460 - 0x1460)
// Class FortniteGame.FortAbilitySystemComponentAthena
class UFortAbilitySystemComponentAthena : public UFortAbilitySystemComponent
{
public:

	static class UClass* StaticClass();
	static class UFortAbilitySystemComponentAthena* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortTooltipContext
class UFortTooltipContext : public UObject
{
public:
	class UAbilitySystemComponent*               SourceAbilitySystem;                               // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*               DestAbilitySystem;                                 // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TreatAsLevel;                                      // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagContainer;                                      // 0x40(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UObject*                               ComparisonObject;                                  // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortTooltipContext* GetDefaultObj();

	class UFortTooltipContext* SpawnTooltipContextWithSource(class APlayerController* SourcePlayerController);
	class UFortTooltipContext* SpawnTooltipContextWithNetID(class UObject* WorldContextObject, struct FUniqueNetIdRepl& UniqueId);
	class UFortTooltipContext* SpawnTooltipContext();
};

// 0x28 (0x90 - 0x68)
// Class FortniteGame.FortAbilitySystemComponentTooltipContext
class UFortAbilitySystemComponentTooltipContext : public UFortTooltipContext
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x68(0x20)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle           ActiveGEHandle;                                    // 0x88(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAbilitySystemComponentTooltipContext* GetDefaultObj();

	class UFortAbilitySystemComponentTooltipContext* SpawnAbilitySystemTooltipContextFromOtherContext(class UFortTooltipContext* OtherContext);
	class UFortAbilitySystemComponentTooltipContext* SpawnAbilitySystemTooltipContext();
};

// 0x8 (0x98 - 0x90)
// Class FortniteGame.FortAbilitySystemComponentTooltip
class UFortAbilitySystemComponentTooltip : public UFortTooltip
{
public:
	class UFortTooltipContext*                   CachedContext;                                     // 0x90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAbilitySystemComponentTooltip* GetDefaultObj();

	bool GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTokenToAttributeTable
class UFortTokenToAttributeTable : public UDataAsset
{
public:
	TArray<struct FTokenAttributePair>           TokenToAttributeList;                              // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortTokenToAttributeTable* GetDefaultObj();

};

// 0x10 (0x258 - 0x248)
// Class FortniteGame.FortAbilitySystemGlobals
class UFortAbilitySystemGlobals : public UAbilitySystemGlobals
{
public:
	TArray<class FName>                          BROnlyAttributeSetDefaultsToExclude;               // 0x248(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAbilitySystemGlobals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAbilitySystemInterface
class IFortAbilitySystemInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAbilitySystemInterface* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortAbilitySystemUI
class UFortAbilitySystemUI : public UObject
{
public:
	uint8                                        Pad_12B9[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilitySystemUI* GetDefaultObj();

	struct FFortGameplayEffectDescription GetStaticGameplayEffectDescription(class UGameplayEffect* Effect, float Level);
	class UGameplayEffect* GetDefaultObjectOfGameplayEffectType(TSubclassOf<class UGameplayEffect> EffectType);
};

// 0x48 (0xC8 - 0x80)
// Class FortniteGame.FortAbilityTask_CommitAccountCosts
class UFortAbilityTask_CommitAccountCosts : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnCommitted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailed;                                          // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bWasCancellable;                                   // 0xA0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequestPending;                                   // 0xA1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCommittedLocally;                                 // 0xA2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_12BB[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerName;                                        // 0xA8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AbilityName;                                       // 0xB8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAbilityTask_CommitAccountCosts* GetDefaultObj();

	class UFortAbilityTask_CommitAccountCosts* CommitAccountCosts(class UGameplayAbility* OwningAbility);
};

// 0x70 (0xF0 - 0x80)
// Class FortniteGame.FortAbilityTask_DirectedMovement
class UFortAbilityTask_DirectedMovement : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnMovementComplete;                                // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMovementCancelled;                               // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_12C8[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetLocation;                                    // 0xBC(0xC)(Net, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       TargetComponent;                                   // 0xC8(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementDistance;                                  // 0xD0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IdealArrivalDistance;                              // 0xD4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DurationOfMovement;                                // 0xD8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bModifyZ;                                          // 0xDC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCancelOnFalling;                                  // 0xDD(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12C9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterMovementComponent*           MovementComponent;                                 // 0xE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12CA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilityTask_DirectedMovement* GetDefaultObj();

	class UFortAbilityTask_DirectedMovement* DirectedMovementToLocation(class UGameplayAbility* OwningAbility, const struct FVector& MovementTargetLocation, enum class EFortDirectedMovementSpace MovementSpaceType, float MovementDuration, float CloseEnoughDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* DirectedMovementToComponent(class UGameplayAbility* OwningAbility, class USceneComponent* TargetComponent, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* DirectedMovementToActor(class UGameplayAbility* OwningAbility, class AActor* TargetActor, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* DirectedMovement(class UGameplayAbility* OwningAbility, const struct FVector& MovementDirection, enum class EFortDirectedMovementSpace MovementSpaceType, float MovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
};

// 0x38 (0x148 - 0x110)
// Class FortniteGame.FortAITask_Move
class UFortAITask_Move : public UAITask_MoveTo
{
public:
	struct FFortMoveConfig                       MoveConfig;                                        // 0x110(0x28)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_12CB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_Move* GetDefaultObj();

};

// 0x38 (0x180 - 0x148)
// Class FortniteGame.FortAbilityTask_MoveAI
class UFortAbilityTask_MoveAI : public UFortAITask_Move
{
public:
	UMulticastDelegateProperty_                  OnComplete;                                        // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInterrupted;                                     // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCancelled;                                       // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_12D2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilityTask_MoveAI* GetDefaultObj();

	class UFortAbilityTask_MoveAI* CreateMoveAITask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AActor* MoveActor, const struct FVector& MoveLocation, enum class EPawnActionMoveMode MoveMode, enum class EPathObstacleAction PathObstacleAction, bool bStopAtEnd, enum class EAIOptionFlag AcceptPartialPath, bool bFinishOnPlayerCollision, bool bProjectGoalLocationOnNavMesh, float AcceptableRadius, TSubclassOf<class AFortPawn> PushBumpedPawnClass, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bUseContinuousGoalTracking);
};

// 0xB0 (0x130 - 0x80)
// Class FortniteGame.FortAbilityTask_PlayMontageWaitTarget
class UFortAbilityTask_PlayMontageWaitTarget : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Triggered;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Cancelled;                                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Completed;                                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FFortGameplayAbilityMontageInfo       MontageInfo;                                       // 0xB0(0x60)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_12E0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilityTask_PlayMontageWaitTarget* GetDefaultObj();

	class UFortAbilityTask_PlayMontageWaitTarget* PlayMontageWithCharPartsWait(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, const TArray<struct FFortCharacterPartMontageInfo>& CharacterPartMontages, float AnimPlayRate, enum class EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection, float AnimRootMotionTranslationScale);
	class UFortAbilityTask_PlayMontageWaitTarget* PlayMontageWaitTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, float AnimPlayRate, enum class EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection, float AnimRootMotionTranslationScale);
	class UFortAbilityTask_PlayMontageWaitTarget* PlayMontageInfoAndWaitForTrigger(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, struct FFortGameplayAbilityMontageInfo& MontageInfo);
	void OnTargetDataReadyCallback(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
	void EnableScalingWithRateOfFire();
};

// 0x30 (0xB0 - 0x80)
// Class FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait
class UFortAbilityTask_SetNextMontageSectionAndWait : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnComplete;                                        // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInterrupted;                                     // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_12E7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilityTask_SetNextMontageSectionAndWait* GetDefaultObj();

	class UFortAbilityTask_SetNextMontageSectionAndWait* SetNextMontageSectionAndWait(class UGameplayAbility* OwningAbility, class UAnimMontage* PlayingMontage, class FName NextMontageSection);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
};

// 0x1A8 (0x228 - 0x80)
// Class FortniteGame.FortAbilityTask_SpawnProjectileAndWait
class UFortAbilityTask_SpawnProjectileAndWait : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Created;                                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Touched;                                           // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Bounced;                                           // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Stopped;                                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Exploded;                                          // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Destroyed;                                         // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortProjectileBase>    SpawnedProj;                                       // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                RequestedBy;                                       // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocation;                                     // 0xF0(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnRotation;                                     // 0xFC(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              SpawnDirection;                                    // 0x108(0xC)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        InitialSpeed;                                      // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnHit;                   // 0x118(0x80)(NativeAccessSpecifierPublic)
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnExplode;               // 0x198(0x80)(NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x218(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_12F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HomingTarget;                                      // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAbilityTask_SpawnProjectileAndWait* GetDefaultObj();

	class UFortAbilityTask_SpawnProjectileAndWait* SpawnProjectileAndWait(class UGameplayAbility* OwningAbility, TSubclassOf<class AFortProjectileBase> Class, class AActor* RequestedBy, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, struct FRotator& SpawnDirection, float InitialSpeed, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, float GravityScale, class AActor* HomingTarget);
	void OnProjectileDestroyed(class AActor* DestroyedActor);
	void FinishSpawningActor(class UGameplayAbility* OwningAbility, class AFortProjectileBase* SpawnedActor);
	bool BeginSpawningActor(class UGameplayAbility* OwningAbility, TSubclassOf<class AFortProjectileBase> Class, class AFortProjectileBase** SpawnedActor);
};

// 0x10 (0x90 - 0x80)
// Class FortniteGame.FortAbilityTask_Sprint
class UFortAbilityTask_Sprint : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnTargetLocationReached;                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAbilityTask_Sprint* GetDefaultObj();

};

// 0x68 (0xE8 - 0x80)
// Class FortniteGame.FortAbilityTask_WaitAnimBPOverride
class UFortAbilityTask_WaitAnimBPOverride : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  OnReady;                                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UAnimInstance>           AnimInstanceWaitingFor;                            // 0x90(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortGadgetItemDefinition> GadgetItemDefWaitingFor;                           // 0xB8(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerPawn*                       FortPlayerPawn;                                    // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAbilityTask_WaitAnimBPOverride* GetDefaultObj();

	class UFortAbilityTask_WaitAnimBPOverride* WaitAnimBPOverrideReady(class UGameplayAbility* OwningAbility, TSoftClassPtr<class UAnimInstance> AnimInstance, TSoftObjectPtr<class UFortGadgetItemDefinition> GadgetItemDef);
	void OnPawnAnimBPCallback();
	void OnFinishedCharacterCustomizationCallback(class AFortPlayerPawn* InPawn);
};

// 0x40 (0xC0 - 0x80)
// Class FortniteGame.FortAbilityTask_WaitTargetSelection
class UFortAbilityTask_WaitTargetSelection : public UAbilityTask
{
public:
	UMulticastDelegateProperty_                  Targeted;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  Cancelled;                                         // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EGameplayTargetingConfirmation    ConfirmationType;                                  // 0xA0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceTargetingOnServer;                           // 0xA1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12FA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          InstantTargetTag;                                  // 0xA8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_12FB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAbilityTask_WaitTargetSelection* GetDefaultObj();

	class UFortAbilityTask_WaitTargetSelection* WaitTargetSelection(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FGameplayTag& InApplicationTag, bool bForceTargetingOnServer);
	void OnTargetDataReadyCallback(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};

// 0x30 (0x358 - 0x328)
// Class FortniteGame.FortAbilityTestObserver
class AFortAbilityTestObserver : public AActor
{
public:
	uint8                                        Pad_1304[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAbilityTestObserver* GetDefaultObj();

	bool WasAbilityTagActivated(struct FGameplayTag& AbilityTag);
	bool WasAbilityActivated(class UGameplayAbility* Ability);
	void StopObserving();
	void StartObserving(class APawn* Pawn);
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortAccountBuffCreditItem
class UFortAccountBuffCreditItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortAccountBuffCreditItem* GetDefaultObj();

};

// 0x8 (0x338 - 0x330)
// Class FortniteGame.FortConsumableAccountItemDefinition
class UFortConsumableAccountItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bCanActivateOnSelf;                                // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanActivateOnOthers;                              // 0x331(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsAutomaticallyConsumed;                          // 0x332(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemProfileType                  ProfileType;                                       // 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1306[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortConsumableAccountItemDefinition* GetDefaultObj();

};

// 0x38 (0x370 - 0x338)
// Class FortniteGame.FortAccountBuffCreditItemDefinition
class UFortAccountBuffCreditItemDefinition : public UFortConsumableAccountItemDefinition
{
public:
	TSoftObjectPtr<class UFortAccountBuffItemDefinition> BuffToGrant;                                       // 0x338(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinutesOfBuffTimeToGrant;                          // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1307[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAccountBuffCreditItemDefinition* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortAccountBuffItem
class UFortAccountBuffItem : public UFortAccountItem
{
public:
	struct FDateTime                             Expiration_date;                                   // 0xE0(0x8)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAccountBuffItem* GetDefaultObj();

	bool IsActive();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortAccountBuffItemDefinition
class UFortAccountBuffItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<TSoftClassPtr<class UGameplayEffect>> BuffEffects;                                       // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAccountBuffItemDefinition* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortItemTooltip
class UFortItemTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortItemTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAccountItemTooltip
class UFortAccountItemTooltip : public UFortItemTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortAccountItemTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortAccountStatProxyInstance
class UFortAccountStatProxyInstance : public UObject
{
public:
	class FString                                StatName;                                          // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  CachedDisplayName;                                 // 0x38(0x18)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAccountStatProxyInstance* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortGameplayEffectExecutionCalculation
class UFortGameplayEffectExecutionCalculation : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayEffectExecutionCalculation* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortActiveDurationExecutionCalculation
class UFortActiveDurationExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UFortActiveDurationExecutionCalculation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortActorIndicatorInterface
class IFortActorIndicatorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortActorIndicatorInterface* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAttributeSet
class UFortAttributeSet : public UAttributeSet
{
public:

	static class UClass* StaticClass();
	static class UFortAttributeSet* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class FortniteGame.FortAdvancedMovementSet
class UFortAdvancedMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            GroundFriction;                                    // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingDecelerationWalking;                        // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingDecelerationFalling;                        // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxAcceleration;                                   // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BrakingFrictionFactor;                             // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpZVelocity;                                     // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpHorizontalAccelerationOverride;                // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpHorizontalVelocityOverride;                    // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MinAnalogWalkSpeed;                                // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAdvancedMovementSet* GetDefaultObj();

	void OnRep_MinAnalogWalkSpeed();
	void OnRep_MaxAcceleration();
	void OnRep_JumpZVelocity();
	void OnRep_GroundFriction();
	void OnRep_BrakingFrictionFactor();
	void OnRep_BrakingDecelerationWalking();
	void OnRep_BrakingDecelerationFalling();
};

// 0x28 (0x408 - 0x3E0)
// Class FortniteGame.FortAIAnimInstance
class UFortAIAnimInstance : public UFortAnimInstance
{
public:
	float                                        Speed;                                             // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpwardVelocity;                                    // 0x3E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MovementDirection;                                 // 0x3E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerBodyCurrentWeight;                            // 0x3EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerBodyBlendTime;                                // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RunVariation;                                      // 0x3F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WalkVariation;                                     // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                MovementStyle;                                     // 0x3FC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_131E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        BlockGetUp : 1;                                    // Mask: 0x1, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStunned : 1;                                    // Mask: 0x2, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsKnockedback : 1;                                // Mask: 0x4, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStaggered : 1;                                  // Mask: 0x8, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSleeping : 1;                                   // Mask: 0x10, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDBNO : 1;                                       // Mask: 0x20, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCowering : 1;                                   // Mask: 0x40, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasWeapon : 1;                                    // Mask: 0x80, PropSize: 0x10x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAdditiveHitReactLoop : 1;                         // Mask: 0x1, PropSize: 0x10x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseAltSleepAnim : 1;                              // Mask: 0x2, PropSize: 0x10x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldUseMovementLocomotion : 1;                  // Mask: 0x4, PropSize: 0x10x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanLookAtAimTarget : 1;                           // Mask: 0x8, PropSize: 0x10x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x10, PropSize: 0x10x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransitionToIdle : 1;                             // Mask: 0x20, PropSize: 0x10x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_10D : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1322[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortWeaponCoreAnimation          WeaponCoreAnimation;                               // 0x404(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1323[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIAnimInstance* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class FortniteGame.FortAIAssignment
class UFortAIAssignment : public UObject
{
public:
	struct FFortAIAssignmentIdentifier           AssignmentIdentifier;                              // 0x28(0x30)(Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*             AssignmentSettings;                                // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIGoalProvider*                   GoalProvider;                                      // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAIController*>             ControllersOnAssignment;                           // 0x68(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1324[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIGoal>                   Goals;                                             // 0xC8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAIAssignment* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortAIAssignmentSettings
class UFortAIAssignmentSettings : public UDataAsset
{
public:
	TArray<struct FGoalSelectionQueryInfo>       GoalSelectionQueryInfos;                           // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bGoalLocationsAlwaysKnown;                         // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsEnemyAssignment;                                // 0x41(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1325[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 RequiredTags;                                      // 0x48(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ProhibitedTags;                                    // 0x68(0x20)(Edit, NativeAccessSpecifierPrivate)
	float                                        MaxAIAllowedForAssignment;                         // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxAIAllowedPerGoal;                               // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAIAssignmentSettings* GetDefaultObj();

};

// 0xA0 (0xD0 - 0x30)
// Class FortniteGame.FortCharacterAttrSet
class UFortCharacterAttrSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            Fortitude;                                         // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Offense;                                           // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Tech;                                              // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Resistance;                                        // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxCharacterLevel;                                 // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortCharacterAttrSet* GetDefaultObj();

	void OnRep_Tech();
	void OnRep_Resistance();
	void OnRep_Offense();
	void OnRep_MaxCharacterLevel();
	void OnRep_Fortitude();
};

// 0x0 (0xD0 - 0xD0)
// Class FortniteGame.FortAIAttributesSet
class UFortAIAttributesSet : public UFortCharacterAttrSet
{
public:

	static class UClass* StaticClass();
	static class UFortAIAttributesSet* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortAIDataProvider_Ability
class UFortAIDataProvider_Ability : public UAIDataProvider
{
public:
	struct FGameplayTagContainer                 AbilityTag;                                        // 0x28(0x20)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AbilityBehaviorDistanceTag;                        // 0x48(0x20)(Edit, NativeAccessSpecifierPublic)
	float                                        BehaviorDistance;                                  // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTargetSelectionRange;                           // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAIDataProvider_Ability* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortAIDataProvider_AIDirector
class UFortAIDataProvider_AIDirector : public UAIDataProvider
{
public:
	float                                        AIRelevantDistanceToPlayer;                        // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterRelevantDistanceToPlayer;                 // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAIDataProvider_AIDirector* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortAIDataProvider_GoalProviderAbility
class UFortAIDataProvider_GoalProviderAbility : public UFortAIDataProvider_Ability
{
public:

	static class UClass* StaticClass();
	static class UFortAIDataProvider_GoalProviderAbility* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAIDataProvider_Pawn
class UFortAIDataProvider_Pawn : public UAIDataProvider
{
public:
	float                                        SightRadius;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HearingRadius;                                     // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewLocationOffsetFromGround;                      // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxStepHeight;                                     // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TetheredBoxCenterLocation;                         // 0x38(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxWidth;                                  // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxHeight;                                 // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxEQSGridSize;                            // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TetheredBoxEQSSpaceBetween;                        // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1329[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIDataProvider_Pawn* GetDefaultObj();

};

// 0x950 (0xC78 - 0x328)
// Class FortniteGame.FortAIDirector
class AFortAIDirector : public AActor
{
public:
	uint8                                        Pad_1348[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  MaxAliveCurve;                                     // 0x338(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinAliveCurve;                                     // 0x348(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntensityData                        IntensityInfo;                                     // 0x358(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDController         AIDirectorPIDController;                           // 0x388(0x68)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDControllerSettings PIDControllerSettings;                             // 0x3F0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FUtilityData                          UtilityContributionData[0x10];                     // 0x420(0x400)(Edit, NativeAccessSpecifierPublic)
	float                                        UnreachableLocationPathCost;                       // 0x820(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1349[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerPerformanceEstimateSettings PlayerPerformanceEstimateSettings;                 // 0x828(0x40)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bUsePrototypeEnemies : 1;                          // Mask: 0x1, PropSize: 0x10x868(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_10E : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_134B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortEncounterDirection>   DebugEncounterDirections;                          // 0x870(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DebugSpawnAIGroupTags;                             // 0x880(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 DebugEncounterTags;                                // 0x8A0(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	float                                        BurstSpawnThreatVisualsEndDelay;                   // 0x8C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_134C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIEncounterSpawnGroupCapsProfile> EncounterSpawnGroupCapSettings;                    // 0x8C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterSpawnPointsProfile> EncounterSpawnPointsSettings;                      // 0x8D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterPawnDifficultyLevelModifier> EncounterPawnDifficultyLevelModifiers;             // 0x8E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAISpawnGroupUpgradeData>  SpawnGroupUpgrades;                                // 0x8F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        GuaranteedUpgradeGroupUtilityBonus;                // 0x908(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DiscreteEncounterUtilityDesireMappings[0x4];       // 0x90C(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortAIUtility                    InitialDynamicUtilities[0x4];                      // 0x91C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEncounterEnvironmentQueryInfo        SpawnLocationPlacementQueries[0x4];                // 0x920(0xA0)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortAIDirectorDataTrackingSettings*   DataTrackingSettings;                              // 0x9C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDataTableRowHandle>           BaseLootDropData;                                  // 0x9C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAILootDropModifiers>      LootDropModifiers;                                 // 0x9D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     LootDropDenialQuery;                               // 0x9E8(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        bDebugEncounterQueries : 1;                        // Mask: 0x1, PropSize: 0x10xA30(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_10F : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_134F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEncounterPawnNumberCaps          DefaultEncounterPawnCaps;                          // 0xA38(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1350[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UReporterGraph*                        IntensityGraph;                                    // 0xA58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        UtilitiesGraph;                                    // 0xA60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDValuesGraph;                                    // 0xA68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDContributionsGraph;                             // 0xA70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNightActive : 1;                                  // Mask: 0x1, PropSize: 0x10xA78(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAIDisabled : 1;                                   // Mask: 0x2, PropSize: 0x10xA78(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRegisteredForDayPhaseChange : 1;                  // Mask: 0x4, PropSize: 0x10xA78(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSpawnCap : 1;                                  // Mask: 0x8, PropSize: 0x10xA78(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_110 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1351[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NightCount;                                        // 0xA7C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingRift*>                 RiftSpawnPoints;                                   // 0xA80(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        NightEncounterFailureBreatherTime;                 // 0xA90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterPawnSpawnInterval;                        // 0xA94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      DefaultNightEncounter;                             // 0xA98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      DummyDebugEncounter;                               // 0xAA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortAIEncounterInfo>      BaseEncounterClass;                                // 0xAA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxActiveAlive;                                    // 0xAB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveAlive;                                    // 0xAB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPendingCapRelevantAI;                           // 0xAB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1356[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPendingSpawnInfo>             PendingSpawns;                                     // 0xB10(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AFortAIPawn>>    PendingDespawns;                                   // 0xB20(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                        NumWorldSubdivides;                                // 0xB30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAISpawnDistanceFromPlayers;                     // 0xB34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AmbientThreatPreferredPlacementActorTags;          // 0xB38(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 AmbientThreatRequiredPlacementActorTags;           // 0xB58(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterInfo*>          ActiveEncounters;                                  // 0xB78(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortPendingStoppedEncounterData> PendingStoppedEncounters;                          // 0xB88(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                  ActiveDefaultEncounter;                            // 0xB98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAIEncounterInfo*                  ActiveDummyDebugEncounter;                         // 0xBA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAIEncounterSequence*>      EncounterSequences;                                // 0xBA8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UEQSRenderingComponent*                EQSRenderingComp;                                  // 0xBB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DebugGraphUpdateFrequency;                         // 0xBC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxNormalLODDistanceToPlayer;                      // 0xBC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AIRelevantDistanceToPlayer;                        // 0xBC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterRelevantDistanceToPlayer;                 // 0xBCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterRelevantDistanceToDefender;               // 0xBD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_135B[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TScriptInterface<class IFortPatrolWardInterface>> PatrolWards;                                       // 0xC28(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_135C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTotalActiveAliveAI;                             // 0xC3C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterActiveAliveAI;                         // 0xC40(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSPUsed;                                         // 0xC44(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_135D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         DebugEncounterTopUtilityPercentages;               // 0xC50(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UCurveFloat*>                   DebugEncounterSpawnPointsCurves;                   // 0xC60(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bDebugAllowEncounterModifierTags : 1;              // Mask: 0x1, PropSize: 0x10xC70(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_111 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_135E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SimulatedNumberOfPlayersForAIEncounters;           // 0xC74(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortAIDirector* GetDefaultObj();

	void UnregisterPatrolWard(TScriptInterface<class IFortPatrolWardInterface> PatrolWard);
	void RegisterPatrolWard(TScriptInterface<class IFortPatrolWardInterface> PatrolWard);
	void ReceivePawnSpawned(class AFortPawn* SpawnedPawn);
	void PostDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void OnRestStarted();
	void OnRampStarted();
	void OnPlayerSpawn(class AFortPlayerPawn* PlayerPawn);
	void OnPlayerDied(class AFortPlayerPawn* PlayerPawn);
	void OnPeakStarted();
	void OnPawnDied(class AFortAIPawn* KilledPawn);
	void OnFadeStarted();
	void OnDirectorDeactivated();
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	bool IsPointTooCloseToPatrolWards(struct FVector& Point, enum class EWardAffectType WardEffectTypeFilter);
	bool IsLineTooCloseToPatrolWards(struct FVector& LineStart, struct FVector& LineEnd);
	bool IsAnyEncounterGoalWithinDistanceOfPoint(struct FVector& Point, float Distance, bool bOnlyActiveEncounters);
	bool IsAnyAIRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToDefender(class AFortAIPawn* Defender);
	struct FVector GetVectorFromEncounterDirection(enum class EFortEncounterDirection Direction);
	TArray<class ABuildingRift*> GetRiftsFromClosestActiveEncounterTo(class AActor* Target);
	int32 GetNumPlayers();
	enum class EFortEncounterDirection GetEncounterDirectionFromVector(const struct FVector& DirectionVector);
	void GetAmbientThreatEncounterSpawnLocations(TArray<struct FVector>* AmbientThreatEncounterSpawnLocations);
	void Deactivate();
	TArray<enum class EFortEncounterDirection> ConvertInvalidDirectionsToValidDirections(const TArray<enum class EFortEncounterDirection>& InvalidDirections);
	void Activate();
};

// 0xE0 (0x408 - 0x328)
// Class FortniteGame.FortAIDirectorDataManager
class AFortAIDirectorDataManager : public AActor
{
public:
	class UObject*                               OwnerObject;                                       // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAIDirectorEventData>          EventsToTrack;                                     // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIDirectorFactorData>     FactorsToTrack;                                    // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1369[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortAIDirectorFactor>     FactorsBeingTracked;                               // 0x3F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_136A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIDirectorDataManager* GetDefaultObj();

	void TriggerEvent(struct FFortAIDirectorEvent& TriggeredEvent);
	float GetAIDirectorFactorValue(enum class EFortAIDirectorFactor AIDirectorFactor);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAIDirectorDataTrackingSettings
class UFortAIDirectorDataTrackingSettings : public UDataAsset
{
public:
	TSubclassOf<class AFortAIDirectorDataManager> PlayerDataManager;                                 // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAIDirectorDataManager> EncounterDataManager;                              // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAIDirectorDataTrackingSettings* GetDefaultObj();

};

// 0x50 (0x378 - 0x328)
// Class FortniteGame.FortAIDirectorEventManager
class AFortAIDirectorEventManager : public AActor
{
public:
	uint8                                        Pad_136C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIDirectorEventManager* GetDefaultObj();

};

// 0xC70 (0xC98 - 0x28)
// Class FortniteGame.FortAIEncounterInfo
class UFortAIEncounterInfo : public UObject
{
public:
	uint8                                        Pad_1385[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAISpawnGroupProgressionInfo*      SpawnGroupProgressionInfo;                         // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo SpawnPointsPercentageCurveSequence;                // 0x40(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortIntensityCurveSequenceInstanceInfo IntensityCurveSequence;                            // 0x50(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        BurstSpawnPointsPercentage;                        // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnPointsMultiplier;                             // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBreathers;                                     // 0x68(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1386[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  LowPlayerPerformanceBreatherTimeSecondsCurve;      // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  NormalPlayerPerformanceBreatherTimeSecondsCurve;   // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  HighPlayerPerformanceBreatherTimeSecondsCurve;     // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EncounterTimeSeconds;                              // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1388[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         LockedUtilityValues;                               // 0xA8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        NumFreeUtilities;                                  // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UtilityAdjustmentPeriodSeconds;                    // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpawnDistance;                                  // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpawnDistance;                                  // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumDirections;                                     // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bChangeDirectionsOnRest;                           // 0xCC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_138A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnPointsPercentageLimit;                        // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PawnNumberLimit;                                   // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortEncounterPawnNumberCaps          PawnNumberCaps;                                    // 0xD8(0x18)(Protected, NativeAccessSpecifierProtected)
	float                                        SpawningIntervalSeconds;                           // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_138C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncounterSpawnDirectionsChosen;                  // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        NextSpawningTime;                                  // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_138D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAIEncounterSpawnGroupCapsProfile EncounterSpawnGroupCapsProfile;                    // 0x110(0x30)(NativeAccessSpecifierPublic)
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> AdditionalSpawnGroupCapsCategories;                // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnPointsProfile    EncounterSpawnPointsProfile;                       // 0x150(0x40)(NativeAccessSpecifierPublic)
	TArray<struct FFortAISpawnGroupUpgradeData>  AvailableUpgrades;                                 // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCurveTableRowHandle>          PawnDifficultyLevelModifiers;                      // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAIBaseLootDropRow>        BaseLootDropRows;                                  // 0x1B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAILootDropModifierRow>    LootDropModifierRows;                              // 0x1C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bRequiresReinitializationFromProfile;              // 0x1D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_138E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  DesiredHostilityCurve;                             // 0x1D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortIntensityCurveSequenceProgression* IntensitySequenceProgression;                      // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1390[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AliveMultiplier;                                   // 0x260(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterSpawnLimitType      SpawnLimitType;                                    // 0x264(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1391[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnLimit;                                        // 0x268(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PawnNumberLimitProgress;                           // 0x26C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsLimitProgress;                          // 0x270(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnLimitReached;                                // 0x274(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSpawnedAllBurstSpawnAI;                        // 0x275(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideAliveCounts;                              // 0x276(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1392[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MinAliveOverride;                                  // 0x278(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxAliveOverride;                                  // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityThreshold;                                // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeakTimeSeconds;                                   // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreatherTimeSeconds;                               // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRampTimeSeconds;                                // 0x28C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTimeBetweenBreathesSeconds;                     // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFadeTimeSeconds;                                // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeEndIntensity;                                  // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeEndRemainingSpawnPointsPercentage;             // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompletionPercentageToDisableBreathers;            // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1394[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnEncounterAllEnemiesKilled;                       // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterEnemySpawned;                           // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterCompleted;                              // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterPawnDied;                               // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1396[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisplayThreatVisuals;                             // 0x2EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseDesiredUtilities[0x10];                        // 0x2EC(0x40)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1397[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 UtilitiesRequiredTags[0x10];                       // 0x330(0x200)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 InjectedTagForUtilityCheck;                        // 0x530(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_1398[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxLargeSpawnGroupDiscountInterval;                // 0x554(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSelectionToSpawningDelay;                       // 0x558(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1399[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         CurrentDesiredUtilities;                           // 0x5B0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        UtilityRecentSelectionPenalties[0x10];             // 0x5C0(0x40)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UtilityEffectivenessMeasurements[0x10];            // 0x600(0x40)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  UtilityEffectivenessMultiplierCurve;               // 0x640(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UtilityEffectivenessInfluenceCap;                  // 0x650(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUtilityTypeFloatPair>         CurrentTopUtilityPercentages;                      // 0x658(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EFortAIUtility>            UsedTopUtilities;                                  // 0x668(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        NumUtilitiesConsidered;                            // 0x678(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReactivityPercentage;                              // 0x67C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdjustUtilitiesDuringRest;                        // 0x680(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDespawnAIsDuringRest;                             // 0x681(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastPlayerCombatFactorUpdateTime;                  // 0x684(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastUtilityAdjustTime;                             // 0x688(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastSpawnPointAdjustmentTime;                      // 0x68C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLargeGroupSpawnTime;                           // 0x690(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAIEncounterSpawnGroupWeights> EnemySpawnData;                                    // 0x698(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortAIEncounterPIDController         EncounterPIDController;                            // 0x6A8(0x68)(NoDestructor, NativeAccessSpecifierPublic)
	int32                                        CurrentSpawnPointsCap;                             // 0x710(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentSpawnPointsUsed;                            // 0x714(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_139F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FailSafeMinSpawnPoints;                            // 0x720(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnGroupInstanceInfo>       ActiveSpawnGroups;                                 // 0x728(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        EncounterEngagementDistance;                       // 0x738(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRelevantBuildingDamagedDistance;                // 0x73C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRelevantBuildingDamagedDistance;                // 0x740(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A1[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentGroupSpawnPoint;                            // 0x758(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterState               EncounterState;                                    // 0x760(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortEncounterPacingState         PacingState;                                       // 0x761(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastPacingStateTransitionTime;                     // 0x764(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterWaveProgressEstimation WaveProgressEstimate;                              // 0x768(0x1C)(NoDestructor, NativeAccessSpecifierPublic)
	float                                        DesiredDifficultyLevel;                            // 0x784(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DifficultyLevelOverride;                           // 0x788(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIDirector*                       MyAIDirector;                                      // 0x790(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortGoalActorEncounterDataManagerPair> DataManagers;                                      // 0x798(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                TargetObjective;                                   // 0x7A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyActiveAtNight;                                // 0x7B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumRiftsToUse;                                     // 0x7B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRiftsToUse;                                     // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsUsed;                                      // 0x7BC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x7C0(0x58)(NativeAccessSpecifierPublic)
	float                                        EncounterStartTime;                                // 0x818(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityCurveStartTime;                           // 0x81C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        DefaultEnvironmentQueryInfo;                       // 0x820(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        FallbackEnvironmentQueryInfo;                      // 0x848(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        OverrideEnvironmentQueryInfo;                      // 0x870(0x28)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        CurrentEnvironmentQueryInfo;                       // 0x898(0x28)(NativeAccessSpecifierPublic)
	bool                                         bNukeWavesAtDaybreak;                              // 0x8C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNukeWavesAtEncounterEnd;                          // 0x8C1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNukeWavesAtEncounterDeactivation;                 // 0x8C2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ObjectiveSafeRadius;                               // 0x8C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveEnemyCap;                                    // 0x8C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentHostilityLevel;                             // 0x8CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityScalePerPlayerCount[0x4];                 // 0x8D0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterRampStarted;                            // 0x8E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterPeakStarted;                            // 0x8F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterFadeStarted;                            // 0x900(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterRestStarted;                            // 0x910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterCombatParticipation;                    // 0x920(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterOptionsChanged;                         // 0x930(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassTemplate;                                 // 0x940(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13A9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class AActor>, struct FFortAISpawnerData> ExternalAISpawners;                                // 0x968(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UFortAIEncounterRiftManager*           RiftManager;                                       // 0x9B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AssociatedMissionName;                             // 0x9C0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMissionType                  AssociatedMissionType;                             // 0x9D0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bCanBeActive : 1;                                  // Mask: 0x1, PropSize: 0x10x9D4(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_112 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_13AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAIAssignment*>             EncounterAssignments;                              // 0x9D8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortAIAssignmentSettings*             DefaultEncounterAssignmentSettings;                // 0x9E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13AD[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxActiveAlive;                                    // 0xA20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSpawnPointsUsed;                                // 0xA24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           OverrideSpawnPointsCurve;                          // 0xA28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13AE[0x1F8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseAILifespans;                                   // 0xC28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTrackCombatParticipation;                         // 0xC29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13AF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ModifierTags;                                      // 0xC30(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIEncounterTimedModifierTags> TimedModifierTags;                                 // 0xC50(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 GameContextTags;                                   // 0xC60(0x20)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortGameplayMutator_AILevelVariance*  AILevelMutator;                                    // 0xC80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortGameplayMutator_AIEncounterModifierTags*> EncounterModifierTagsMutators;                     // 0xC88(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAIEncounterInfo* GetDefaultObj();

	void UnRegisterAISpawner(class AActor* InAISpawner);
	class AFortAIPawn* SpawnAIPawnReservedForEnemySpawner(class AActor* EnemySpawner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void SetPawnNumberLimit(int32 InPawnNumberLimit);
	void SetEncounterActivationState(bool bEncounterActivityState);
	void RequestActivation(int32 ActivationDelay);
	void RegisterAISpawner(class AActor* InAISpawner);
	void OnRestStarted();
	void OnRampStarted();
	void OnPeakStarted();
	void OnGoalTakeDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnGameDifficultyChanged();
	void OnFadeStarted();
	void OnEncounterPawnDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	bool GroupHasAIRemainingToSpawn(struct FFortAISpawnerData& FortAISpawnerData);
	int32 GetPawnNumberLimit();
	float GetEncounterTimeSeconds();
	class AFortAIDirectorDataManager* GetEncounterDataManager();
	bool GetCurrentSpawnAreaDirections(TArray<enum class EFortEncounterDirection>* OutDirections);
	bool EncounterHasReservedSpawnRequestForEnemySpawner(class AActor* EnemySpawner);
	class UFortAIAssignment* CreateEncounterAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIEncounterInfoOwnerInterface
class IFortAIEncounterInfoOwnerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAIEncounterInfoOwnerInterface* GetDefaultObj();

	class UFortAIEncounterInfo* GetEncounterInfo();
};

// 0x1E0 (0x208 - 0x28)
// Class FortniteGame.FortAIEncounterRiftManager
class UFortAIEncounterRiftManager : public UObject
{
public:
	uint8                                        Pad_13B4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  MyEncounter;                                       // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortAIDirector*                       AIDirector;                                        // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnArea             CurrentSpawnArea;                                  // 0x48(0x48)(NativeAccessSpecifierPublic)
	struct FFortAIEncounterSpawnArea             FutureSpawnArea;                                   // 0x90(0x48)(NativeAccessSpecifierPublic)
	float                                        UpdateIntervalTimeSeconds;                         // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRiftsToUse;                                     // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinRiftsToUse;                                     // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13B5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEncounterSettings                EncounterSettings;                                 // 0xE8(0x58)(NativeAccessSpecifierPublic)
	float                                        ExtraSpawnLocationPercentage;                      // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEncounterEnvironmentQueryInfo        CurrentEnvironmentQueryInfo;                       // 0x148(0x28)(NativeAccessSpecifierPublic)
	struct FEncounterEnvironmentQueryInfo        FallbackEnvironmentQueryInfo;                      // 0x170(0x28)(NativeAccessSpecifierPublic)
	struct FFortAIEncounterQueryDirectionTracker EncounterQueryDirectionTracker;                    // 0x198(0x48)(NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingRift>             RiftClassTemplate;                                 // 0x1E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastObjectiveBatchPathCostUpdateTime;              // 0x1E8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPlayerBatchPathCostUpdateTime;                 // 0x1EC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_13B7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIEncounterRiftManager* GetDefaultObj();

	class AFortMission* GetAssociatedMission();
};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortAIEncounterSequence
class UFortAIEncounterSequence : public UObject
{
public:
	struct FFortGeneratedEncounterSequence       GeneratedEncounterSequence;                        // 0x28(0x30)(Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentEncounterIndexInSequence;                   // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_13CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  CurrentEncounter;                                  // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIDirector*                       AssociatedAIDirector;                              // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                          AssociatedMission;                                 // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAIEncounterSequence* GetDefaultObj();

	void StopCurrentEncounter();
	class UFortAIEncounterInfo* StartCurrentEncounter(enum class EFortEncounterSequenceResult* OutRequestResult, TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& OverrideEnvironmentQueryInfo, class AActor* OptionalQueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	enum class EFortEncounterSequenceResult Previous();
	enum class EFortEncounterSequenceResult Next();
	bool IsOnFinalIndexInSequence();
	bool HasEncounter();
	int32 GetNumEncountersInSequence();
	int32 GetEncounterIndexInSequence();
	class UFortAIEncounterInfo* GetCurrentEncounter();
	bool EncounterBelongsToSequence(class UFortAIEncounterInfo* InEncounter);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIEncounterTargetInterface
class IFortAIEncounterTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAIEncounterTargetInterface* GetDefaultObj();

	bool IsFloatingTarget();
	float GetObjectiveCompletionPercentage();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIFunctionLibrary
class UFortAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortAIFunctionLibrary* GetDefaultObj();

	void MakeNoiseEventAtLocation(class AActor* NoiseMaker, float MaxRange, struct FVector& NoiseLocation);
	void MakeNoiseEvent(class AActor* NoiseMaker, float MaxRange);
};

// 0x118 (0x440 - 0x328)
// Class FortniteGame.FortAIGoalManager
class AFortAIGoalManager : public AActor
{
public:
	uint8                                        Pad_13F5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAIAssignment*>             WorldAssignments;                                  // 0x330(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortAIAssignment*>             WorldEnemyAssignments;                             // 0x340(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortAIAssignment*                     DefaultAttackPlayersAssignment;                    // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13F6[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UEnvQuery*>                     CombinedQueries;                                   // 0x3B8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13F7[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIAssignmentSettings*             DefaultEncounterAssignmentSettings;                // 0x418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignmentSettings*             DefaultEnemyAssignmentSettings;                    // 0x420(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPawnGoalSelectionTableEntry>  PawnGoalSelectionTable;                            // 0x428(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_13F8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIGoalManager* GetDefaultObj();

	void SetCurrentGoalDiscouragement(class UObject* WorldContext, class AFortAIController* AI);
	void RemoveWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier);
	void RemoveGoalsFromWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void RemoveGoalFromWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, struct FFortAIGoalInfo& GoalInfo);
	void MakeGoalsFromLocationsAndActor(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<struct FVector>& GoalLocations, class AActor* GoalActor);
	void MakeGoalsFromLocations(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<struct FVector>& GoalLocations);
	void MakeGoalsFromActors(TArray<struct FFortAIGoalInfo>* Goals, class UObject* WorldContextObject, TArray<class AActor*>& GoalActors, bool bActorsAlwaysPerceived, bool bGoalActorsAllowUndermining);
	void MakeGoalFromLocation(struct FFortAIGoalInfo* Goal, class UObject* WorldContextObject, struct FVector& GoalLocation);
	void MakeGoalFromActor(struct FFortAIGoalInfo* Goal, class UObject* WorldContextObject, class AActor* GoalActor, bool bActorAlwaysPerceived, bool bGoalActorAllowsUndermining);
	void CreateWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& WorldAssignmentIdentifier, class UFortAIAssignmentSettings* AssignmentSettings, TSubclassOf<class UFortAIGoalProvider> GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier, enum class EAssignmentCreationResult* CreationResult);
	class UFortAIAssignment* AddWorldAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
	void AddGoalToWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, struct FFortAIGoalInfo& GoalInfo);
	void AddGoalsToWorldAssignment(class UObject* WorldContextObject, struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void AddGoalActorToAssignment(class UFortAIAssignment* Assignment, class AActor* GoalActor);
	void AddGoal(class AActor* GoalActor, class UFortAIAssignmentSettings* GoalSettings);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortAIGoalProvider
class UFortAIGoalProvider : public UObject
{
public:
	uint8                                        Pad_1400[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWorld*                                World;                                             // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIAssignment*                     AssignmentOwner;                                   // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAIGoalProvider* GetDefaultObj();

	void UpdateGoals();
	bool InitializeGoalProvider(class UWorld* ContextWorld, class UFortAIAssignment* Assignment);
	class UFortAIEncounterInfo* GetEncounterInfo();
};

// 0x90 (0xD8 - 0x48)
// Class FortniteGame.FortAIGoalProvider_EnvQuery
class UFortAIGoalProvider_EnvQuery : public UFortAIGoalProvider
{
public:
	uint8                                        Pad_1404[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             GoalQuery;                                         // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutomaticUpdatePeriodInSeconds;                    // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1406[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAIAssignmentIdentifier           SpecificAssignmentContext;                         // 0x60(0x30)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortAIPawn>             AIPawnContext;                                     // 0x90(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1408[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIGoalProvider_EnvQuery* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAIEncounterGoalSelectionTable
class UFortAIEncounterGoalSelectionTable : public UDataAsset
{
public:
	TArray<struct FEncounterGoalSelectionTableEntry> EncounterGoalSelectionCriteria;                    // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAIEncounterGoalSelectionTable* GetDefaultObj();

};

// 0x28 (0x4D8 - 0x4B0)
// Class FortniteGame.FortAIHotSpot
class AFortAIHotSpot : public AAIHotSpot
{
public:
	uint8                                        Pad_140A[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIHotSpot* GetDefaultObj();

};

// 0x88 (0x560 - 0x4D8)
// Class FortniteGame.FortAIHotSpot_Building
class AFortAIHotSpot_Building : public AFortAIHotSpot
{
public:
	class UAIHotSpotConfig*                      ExtraTypeConfig;                                   // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_140B[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIHotSpot_Building* GetDefaultObj();

};

// 0x0 (0x4D8 - 0x4D8)
// Class FortniteGame.FortAIHotSpot_FakeBuilding
class AFortAIHotSpot_FakeBuilding : public AFortAIHotSpot
{
public:

	static class UClass* StaticClass();
	static class AFortAIHotSpot_FakeBuilding* GetDefaultObj();

};

// 0x0 (0x4D8 - 0x4D8)
// Class FortniteGame.FortAIHotSpot_Shooting
class AFortAIHotSpot_Shooting : public AFortAIHotSpot
{
public:

	static class UClass* StaticClass();
	static class AFortAIHotSpot_Shooting* GetDefaultObj();

};

// 0x148 (0x1C8 - 0x80)
// Class FortniteGame.FortAIHotSpotManager
class UFortAIHotSpotManager : public UAIHotSpotManagerProxy
{
public:
	TSoftObjectPtr<class UBuildingActorHotSpotConfig> FallbackHotspotConfig;                             // 0x80(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_140C[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAutoAcquireSlot>              AutoAcquireSlots;                                  // 0x198(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_140D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIHotSpotManager* GetDefaultObj();

};

// 0x10 (0xD0 - 0xC0)
// Class FortniteGame.FortAIHotSpotSlot
class UFortAIHotSpotSlot : public UAIHotSpotSlot
{
public:
	enum class EFortHotSpotSlot                  SlotType;                                          // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_140F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bHasProjectedLocation : 1;                         // Mask: 0x1, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bProjectedOnLowArea : 1;                           // Mask: 0x2, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAutoGenerated : 1;                              // Mask: 0x4, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanDuplicateOnProjection : 1;                     // Mask: 0x8, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanProjectUp : 1;                                 // Mask: 0x10, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1410[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIHotSpotSlot* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAIHotSpotSlotGenerator_FromConfig
class UFortAIHotSpotSlotGenerator_FromConfig : public UAIHotSpotSlotGenerator
{
public:
	class UAIHotSpotConfig*                      BuildingConfig;                                    // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Offset;                                            // 0x30(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorX : 1;                                      // Mask: 0x1, PropSize: 0x10x3C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bMirrorY : 1;                                      // Mask: 0x2, PropSize: 0x10x3C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1412[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIHotSpotSlotGenerator_FromConfig* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortAIHotSpotSlotGenerator_OnBoundingBox
class UFortAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator_OnBoundingBox
{
public:
	float                                        DistanceForRangedSlots;                            // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceForHugeSlots;                              // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAIHotSpotSlotGenerator_OnBoundingBox* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAIHotSpotSlotGenerator_RampTrace
class UFortAIHotSpotSlotGenerator_RampTrace : public UAIHotSpotSlotGenerator
{
public:
	uint8                                        Pad_1415[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIHotSpotSlotGenerator_RampTrace* GetDefaultObj();

};

// 0x40 (0x368 - 0x328)
// Class FortniteGame.FortAIProxyActor
class AFortAIProxyActor : public AActor
{
public:
	uint8                                        Pad_1417[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPhysicalSurface                  PrimaryPhysicalSurface;                            // 0x338(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1418[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHealthSet*                        HealthSet;                                         // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDamageSet*                        DamageSet;                                         // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMovementSet*                      MovementSet;                                       // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortBaseWeaponDamage             BaseWeaponDamageResponseType;                      // 0x360(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_141C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIProxyActor* GetDefaultObj();

};

// 0x0 (0x368 - 0x368)
// Class FortniteGame.FortAIMobileProxyActor
class AFortAIMobileProxyActor : public AFortAIProxyActor
{
public:

	static class UClass* StaticClass();
	static class AFortAIMobileProxyActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIObjectiveInterface
class IFortAIObjectiveInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAIObjectiveInterface* GetDefaultObj();

};

// 0x7D0 (0xF10 - 0x740)
// Class FortniteGame.FortPawn
class AFortPawn : public ACharacter
{
public:
	uint8                                        Pad_147E[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   PawnStatHandle;                                    // 0x7B8(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_147F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlidingFriction;                                   // 0x7CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlidingBrakingDeceleration;                        // 0x7D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMovementStyle                CurrentMovementStyle;                              // 0x7D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortPawnPushSize                 PushSize;                                          // 0x7D5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBaseChanged;                                   // 0x7D6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeleportCounter;                                   // 0x7D7(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1480[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PawnUniqueID;                                      // 0x7DC(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                           CurrentWeapon;                                     // 0x7E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortWeapon*>                   CurrentWeaponList;                                 // 0x7E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                         bIgnoreNextFallingDamage;                          // 0x7F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1483[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponHandSocketName;                              // 0x800(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandWeaponHandSocketName;                      // 0x808(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                SpawnSpot;                                         // 0x810(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 DeathTags;                                         // 0x818(0x20)(Transient, NativeAccessSpecifierPublic)
	float                                        SpawnImmunityTime;                                 // 0x838(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDying;                                          // 0x83C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayedDying;                                      // 0x83D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHiddenForDeath;                                 // 0x83E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1485[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPickup*>                   IncomingPickups;                                   // 0x840(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortPickupEntryData>          PickupDirectionData;                               // 0x850(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsKnockedback;                                    // 0x860(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStunned;                                        // 0x861(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStaggered;                                      // 0x862(0x1)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortControlRecoveryBehavior      ControlRecoveryBehavior;                           // 0x863(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AdditiveCringeCount;                               // 0x864(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdditiveCringeDuration;                            // 0x868(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   PushMomentum;                                      // 0x86C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1487[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshSocket*                   DeathHitSocket;                                    // 0x8D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDBNO;                                           // 0x8D8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWasDBNOOnDeath;                                   // 0x8D9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1489[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeamBeaconMaxDist;                                 // 0x8DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                TeamBeaconTextColor;                               // 0x8E0(0x4)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastTakeHitTimeTimeout;                            // 0x8E4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastDamagedTime;                                   // 0x8E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipAnalogJump;                                   // 0x8EC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_148F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortWeapon*                           CurrentlyAttachedWeapon;                           // 0x8F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                   CachedNavFloor;                                    // 0x8F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxFootstepDistance;                               // 0x900(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1490[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DefaultFootstepSound;                              // 0x908(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultFastFootstepSound;                          // 0x910(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultLandingSound;                               // 0x918(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultHardLandingSound;                           // 0x920(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultJumpSound;                                  // 0x928(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanCapsuleBeUsedForTargeting : 1;                 // Mask: 0x1, PropSize: 0x10x930(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseLineTestForDamageZoneBoneDetection : 1;        // Mask: 0x2, PropSize: 0x10x930(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_113 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1491[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LineTestForDamageZoneBoneDetectionRadius;          // 0x934(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPawnDamageZones                      DamageZones[0x4];                                  // 0x938(0x60)(Edit, NativeAccessSpecifierPublic)
	uint8                                        DamageZoneActiveBitMask;                           // 0x998(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1492[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargettingZOffset;                                 // 0x99C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1493[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        JumpFlashCount;                                    // 0x9A1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1494[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       EmoteAudioComp;                                    // 0x9B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class UMeshComponent*>           EmoteMeshComps;                                    // 0x9B8(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<int32, class AActor*>                   EmotePropActors;                                   // 0xA08(0x50)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        EmoteCount;                                        // 0xA58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMovingEmote;                                      // 0xA5C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1495[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EmoteWalkSpeed;                                    // 0xA60(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1496[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPawnLanded;                                      // 0xA68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHitPawn;                                         // 0xA78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDied;                                            // 0xA88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeathEffects;                                    // 0xA98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1497[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDamaged;                                         // 0xAD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortFootstepAudioBank*                FootstepBank;                                      // 0xAE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETraceTypeQuery                   FootstepTraceTypeQuery;                            // 0xAF0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortFootstepSurfaceType          FootstepSurfaceType;                               // 0xAF1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1498[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnWeaponEquippedDelegate;                          // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           HealthRegenDelayGameplayEffect;                    // 0xB18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           HealthRegenGameplayEffect;                         // 0xB20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ShieldRegenDelayGameplayEffect;                    // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ShieldRegenGameplayEffect;                         // 0xB30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_149B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInvulnerable;                                   // 0xB39(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_149D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaponHolsterCounter;                              // 0xB3C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponHolstered;                                  // 0xB40(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_149E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StaySpottedTime;                                   // 0xB44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpottedEvent;                                      // 0xB48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSpotted : 1;                                      // Mask: 0x1, PropSize: 0x10xB50(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_114 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_14A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortFeedbackBank*                     DefaultFeedback;                                   // 0xB58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortEmitterCameraLensEffectDirectional> DefaultSoundTrackingVisual;                        // 0xB60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortPawnVocalChord>           VocalChords;                                       // 0xB68(0x10)(Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A2[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHealthSet*                        HealthSet;                                         // 0xBC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortControlResistanceSet*             ControlResistanceSet;                              // 0xBD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDamageSet*                        DamageSet;                                         // 0xBD8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMovementSet*                      MovementSet;                                       // 0xBE0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAdvancedMovementSet*              AdvancedMovementSet;                               // 0xBE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHealthSynced;                                     // 0xBF0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A4[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAbilityDecisionWindowStackUpdated;               // 0xC00(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0xC10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortActiveMontageDecisionWindow> DecisionWindowStack;                               // 0xC18(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bPrimaryInputHeld;                                 // 0xC28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSecondaryInputHeld;                               // 0xC29(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrimaryInputQueued;                               // 0xC2A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14A7[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0xC30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  DisplayName;                                       // 0xC50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDamagerInfo>                  Damagers;                                          // 0xC68(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, float>             DamageDone;                                        // 0xC78(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UFortHealthBarIndicator*               HealthBarIndicator;                                // 0xCC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CurrentCalloutTag;                                 // 0xCD0(0x8)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCalloutEntry>                 CalloutEntries;                                    // 0xCD8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        HealthBarWidth;                                    // 0xCE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthBarHeightMultiplier;                         // 0xCEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           SpottedBrush;                                      // 0xCF8(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SpottedIconOffset;                                 // 0xD80(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ClientNonRenderedAnimUpdateRate;                   // 0xD8C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxEvalRateForInterpolation;                       // 0xD90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                AnimUpdateRateVisibleMaxDistanceFactor;            // 0xD98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<int32, int32>                           LODToFrameSkipMap;                                 // 0xDA8(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EUpdateRateShiftBucket            UroShiftBucket;                                    // 0xDF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AC[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPostProcessNavLocation;                           // 0xE10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortConversationSentence             CurrentSentence;                                   // 0xE18(0xC8)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_14AE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPawnHealthChanged;                               // 0xEF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_14AF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPawn* GetDefaultObj();

	void TriggerFeedbackEvent(class FName EventName, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay);
	void StopPushMomentum();
	void StartPushMomentum(const struct FVector& NewPushMomentum, float Duration);
	class AFortSoundCameraLensEffect* SpawnSoundLensEffectDirectional(class AFortPawn* TrackedPawn, const struct FVector& HitInfo, float MaxAudibleDistance, enum class EFortSoundIndicatorTypes IndicatorType, class AActor* InstigatingActor);
	class AFortEmitterCameraLensEffectDirectional* SpawnCameraLensEffectDirectional(TSubclassOf<class AFortEmitterCameraLensEffectDirectional> LensEffectEmitterClass, class AFortPawn* DamageDealer, struct FHitResult& HitInfo, bool bDeferSpawn);
	class AEmitterCameraLensEffectBase* SpawnCameraLensEffect(TSubclassOf<class AEmitterCameraLensEffectBase> LensEffectEmitterClass);
	void SetSpawnSpot(class AActor* InSpawnSpot);
	void SetPawnVisibility(bool bNewHidden, bool bPropagateToWeapon);
	void SetPawnAndControlRotation(const struct FRotator& NewRotation);
	void SetMaxShield(float NewValue);
	void SetMaxHealth(float NewHealthVal);
	void SetIsKnockedBack(bool bKnockback);
	void SetHolsterWeapon(bool bHolster, bool bPlayEquipAnim);
	void SetHealth(float NewHealthVal);
	void SetFNameBasedOnHitDirection(struct FVector& HitDirection, class FName* NameResult, class FName NameFront, class FName NameBack, class FName NameLeft, class FName NameRight);
	void SetControlRecoveryBehavior(enum class EFortControlRecoveryBehavior NewBehavior);
	void SetCallout(struct FGameplayTag& CalloutTagToSet, float Duration);
	void ServerTeleportNearLocation(const struct FVector& ActorLocation);
	void ServerInternalEquipWeapon(class AFortWeapon* Weap);
	void ResetFallingHeight();
	void RemoveCallout(struct FGameplayTag& CalloutTagToRemove);
	void PrototypeCharacterMovement(enum class EMovementMode MovementMode, const struct FVector& LaunchVelocity);
	void PlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	float PlayLocalAnimMontage(class UAnimMontage* NewAnimMontage, float InPlayRate, class FName StartSectionName);
	void PlayFootStepSound(int32 FootDown);
	bool PickUpActor(class AActor* PickupTarget, class UFortDecoItemDefinition* PlacementDecoItemDefinition);
	void PawnUniqueIDSet();
	void PawnStopFire(uint8 FireModeNum);
	void PawnStartFire(uint8 FireModeNum);
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnTeleported();
	void OnStunned();
	void OnRep_VocalChords();
	void OnRep_TeleportCounter();
	void OnRep_Sentence();
	void OnRep_PushMomentum();
	void OnRep_PawnUniqueID();
	void OnRep_JumpFlashCount();
	void OnRep_IsKnockedBack();
	void OnRep_IsDBNO();
	void OnRep_DamageZoneActiveBitMask();
	void OnRep_CurrentWeapon();
	void OnRep_bWeaponHolstered();
	void OnOutOfControlResistanceServer(float ImpactDamageDone, struct FGameplayTagContainer& SourceTags, struct FGameplayEffectContextHandle& EffectContext, class AController* EffectInstigator, class AActor* EffectCauser);
	void OnMontageStarted(class UAnimMontage* Montage);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	void OnDisplaySentence(class FText& SpeechText);
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageZoneStatusChanged(enum class EFortDamageZone Zone, bool bStatus);
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnClearSentence();
	void OnBumpPushedPawn(class AFortPawn* InstigatedBy, float PushTimeLeft);
	void OnBaseChanged(class AActor* NewBase);
	void OnAllMontageInstancesEnded();
	void MovingEmoteStopped();
	void LaunchCharacterJump(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride, bool bIgnoreFallDamage, bool bPlayFeedbackEvent);
	bool IsWeaponHolstered();
	bool IsStaggered();
	bool IsFrontalHit(struct FVector& HitDirection);
	bool IsDead();
	bool IsDBNO();
	bool IsAllowChainStun();
	bool IsActionInputIgnored();
	void InitializeDeathHitSocket(const struct FVector& WorldLocation, const struct FVector& WorldNormal);
	void HideBodyOnDeath();
	bool HasCurrentMontage();
	void HandleIsHiddenForDeath();
	void HandleIsDying();
	struct FTransform GetTargetingTransform(enum class EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility);
	void GetSphericalHitDirection(struct FVector& HitDirection, float* Azimuth, float* Elevation);
	float GetShieldOrHealthPercent();
	float GetShield();
	class UMaterialInstanceDynamic* GetPawnMID(int32 ElementIndex);
	class AActor* GetMyMovementBaseActor();
	struct FVector GetMovementPredictionPosition(float PredictionDeltaTime);
	float GetMeleeReticleStrikeAngle(bool bPrimaryInput);
	int32 GetMeleeComboCounter();
	float GetMaxShield();
	float GetMaxHealth();
	float GetMaxControlResistance();
	class APlayerController* GetLocalViewingPlayerController();
	float GetKnockbackThreshold();
	float GetKnockbackMultiplier();
	float GetHealthPercent();
	float GetHealth();
	class UFortAIEncounterInfo* GetEncounterInfo();
	struct FRotator GetDefaultTargetingRotation();
	struct FVector GetDefaultTargetingOrigin();
	enum class EFortDamageZone GetDamageZone(struct FHitResult& InHitResult);
	class FText GetCurrentSentenceSpeechText();
	float GetCurrentMontageSectionTimeLeft();
	float GetControlResistance();
	enum class EFortControlRecoveryBehavior GetControlRecoveryBehavior();
	class USkeletalMeshComponent* GetAssetSkeletalMeshComponentAttachment(class FName SocketName);
	void GameplayCue_InstantDeath(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ForceKill(const struct FGameplayTag& DeathReason, class AController* KillerController, class AActor* KillerActor);
	class AFortWeapon* EquipWeaponDefinition(class UFortWeaponItemDefinition* WeaponData, const struct FGuid& ItemEntryGuid);
	void EmoteStopped();
	void EmoteStarted(class UFortItemDefinition* MontageItemDef);
	void DoFatalDamage(class UAbilitySystemComponent* KillerAbilitySystemComponent);
	void DetachAssetFromSocket(class FName SocketName);
	void ClientInternalEquipWeapon(class AFortWeapon* Weap);
	void ClearJumpFlashCount();
	void AttachAssetToSocket(struct FAssetAttachment& InAttachment);
	void ApplyKnockback(float KnockbackMagnitude, float KnockbackZAngle, const struct FVector& ImpulseDir);
	void AnimMontage_LocalSetNextSectionName(class UAnimMontage* AnimMontage, class FName SectionName, class FName NextSectionName);
	bool AnimMontage_LocalJumpToSectionName(class FName SectionName);
	int32 AnimMontage_LocalJumpToRandomSection();
	void AlignRotationToHitDirection(struct FVector& HitDirection);
};

// 0xBB0 (0x1AC0 - 0xF10)
// Class FortniteGame.FortAIPawn
class AFortAIPawn : public AFortPawn
{
public:
	uint8                                        Pad_1545[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bNeedsDeathNotification : 1;                       // Mask: 0x1, PropSize: 0x10xF30(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bKilledOrDowned : 1;                               // Mask: 0x2, PropSize: 0x10xF30(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDespawnedDueToInactivity : 1;                     // Mask: 0x4, PropSize: 0x10xF30(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNotifySpawnRift : 1;                              // Mask: 0x8, PropSize: 0x10xF30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsesDBNO : 1;                                     // Mask: 0x10, PropSize: 0x10xF30(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasInventory : 1;                                 // Mask: 0x20, PropSize: 0x10xF30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTrackNearbyPickups : 1;                           // Mask: 0x40, PropSize: 0x10xF30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCharging : 1;                                   // Mask: 0x80, PropSize: 0x10xF30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCowering : 1;                                   // Mask: 0x1, PropSize: 0x10xF31(0x1)(BlueprintVisible, Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowMinimapFarOffDirectionArrow : 1;              // Mask: 0x2, PropSize: 0x10xF31(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasEngaged : 1;                                   // Mask: 0x4, PropSize: 0x10xF31(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAlwaysGameplayRelevant : 1;                     // Mask: 0x8, PropSize: 0x10xF31(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_115 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsDebugSpawnedAI : 1;                             // Mask: 0x20, PropSize: 0x10xF31(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEncounterExpectedLifespanExpired : 1;             // Mask: 0x40, PropSize: 0x10xF31(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableBlockingCollisionWithOtherAI : 1;           // Mask: 0x80, PropSize: 0x10xF31(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSetMiniMapIconRotation : 1;                       // Mask: 0x1, PropSize: 0x10xF32(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasDroppedLoot : 1;                               // Mask: 0x2, PropSize: 0x10xF32(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_116 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1547[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInventoryUpdated;                                // 0xF38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1548[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AIDifficultyLevel;                                 // 0xF60(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAILevelRatingDisplayType     LevelRatingDisplayType;                            // 0xF64(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1549[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  EncounterInfo;                                     // 0xF68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnSetIndex;                                     // 0xF70(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 SpawnGroupGuid;                                    // 0xF74(0x10)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyIndexInSpawnGroup;                            // 0xF84(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishEncounterSpawnFallbackTime;                  // 0xF88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterSpawnDisableRangedAttackingTime;          // 0xF8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EncounterSpawnDisableMeleeAttackingTime;           // 0xF90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          EncounterExpectedLifespanTimerHandle;              // 0xF98(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	class AActor*                                SpawnRift;                                         // 0xFA0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnRiftLocation;                                 // 0xFA8(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnSourceActor;                                  // 0xFB8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTimeAllowedOutsideTether;                       // 0xFC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         BehaviorTree;                                      // 0xFC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    DefaultNavFilter;                                  // 0xFD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    HuntingNavFilter;                                  // 0xFD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DBNOInteractionDuration;                           // 0xFE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_154E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDowned;                                          // 0xFF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ETInteractionType                 DBNOInteractionType;                               // 0x1000(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMovementStyle                MovementStyles[0x4];                               // 0x1001(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1550[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateNearbyPickupFrequency;                       // 0x1008(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1552[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          RequiredWeaponPickupTag;                           // 0x1010(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NoWeaponInCombatEventName;                         // 0x1018(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NoWeaponOutOfCombatEventName;                      // 0x1020(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TurnTransitionGameplayAbilityTag;                  // 0x1028(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        DeathParticles;                                    // 0x1048(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumRunVariations;                                  // 0x1070(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentRunVariationIndex;                          // 0x1074(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RunVariationRadius;                                // 0x1078(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EyeIndex;                                          // 0x107C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkinIndex;                                         // 0x1080(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultEyeColor;                                   // 0x1084(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultEyeBrightness;                              // 0x1094(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DefaultSkinColor;                                  // 0x1098(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultSkinGlow;                                   // 0x10A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapDefaultIconColor;                           // 0x10AC(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PlayerManagerMinimapColor;                         // 0x10BC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1554[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x10E0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMapAboveBelowIconBrush;                        // 0x1168(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FMinimapGoalByTagColorsData>   MinimapGoalByTagColors;                            // 0x11F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int8                                         MinimapGoalByTagColorIndex;                        // 0x1200(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1555[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AppearanceOverrideName;                            // 0x1208(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAIPawnGender                 AppearanceOverrideGender;                          // 0x1210(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCombatEvents                 FollowPlayerEvent;                                 // 0x1211(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETInteractionType                 InteractionType;                                   // 0x1212(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1558[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FollowPlayerRange;                                 // 0x1214(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InteractionDuration;                               // 0x1218(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_155A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnInteraction;                                     // 0x1220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ABuildingTrapDefender*                 DefenderTrap;                                      // 0x1230(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActorBeginCrowdOverlap;                          // 0x1238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        BitPad_117 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bDebugAI : 1;                                      // Mask: 0x2, PropSize: 0x10x1248(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDebugAIAnim : 1;                                  // Mask: 0x4, PropSize: 0x10x1248(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseBuildingAttackingHotspots : 1;                 // Mask: 0x8, PropSize: 0x10x1248(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanMoveThroughWalls : 1;                          // Mask: 0x10, PropSize: 0x10x1248(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseNavWalking : 1;                             // Mask: 0x20, PropSize: 0x10x1248(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseSimpleCollisions : 1;                       // Mask: 0x40, PropSize: 0x10x1248(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseStepAside : 1;                              // Mask: 0x80, PropSize: 0x10x1248(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseDoors : 1;                                  // Mask: 0x1, PropSize: 0x10x1249(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseShootingHotspots : 1;                       // Mask: 0x2, PropSize: 0x10x1249(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanSleep : 1;                                     // Mask: 0x4, PropSize: 0x10x1249(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSleeping : 1;                                   // Mask: 0x8, PropSize: 0x10x1249(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldStartSleeping : 1;                          // Mask: 0x10, PropSize: 0x10x1249(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanLookAtGoal : 1;                                // Mask: 0x20, PropSize: 0x10x1249(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanUseMeshPooling : 1;                            // Mask: 0x40, PropSize: 0x10x1249(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseCrowdSimulation : 1;                           // Mask: 0x80, PropSize: 0x10x1249(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bControlWalkingOffLedges : 1;                      // Mask: 0x1, PropSize: 0x10x124A(0x1)(Edit, DisableEditOnInstance, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_118 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        BitPad_119 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUseAppearanceOverride : 1;                        // Mask: 0x2, PropSize: 0x10x124B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanInteract : 1;                                  // Mask: 0x4, PropSize: 0x10x124B(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_11A : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EFortMovementUrgency              MovementUrgency;                                   // 0x124C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortressAIType                   AIType;                                            // 0x124D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         Team;                                              // 0x124E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_155E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SimpleCollisionsProfileName;                       // 0x1250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAISpawnGroupUpgradeUIData        UpgradeUIData;                                     // 0x1258(0xB8)(Net, Protected, NativeAccessSpecifierProtected)
	float                                        ScoreMultiplier;                                   // 0x1310(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootDropConeHalfAngle;                             // 0x1314(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LootDropSpeed;                                     // 0x1318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortHotSpotSlot                  HotspotType;                                       // 0x131C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortPartialPathUsage             PartialPathUsage;                                  // 0x131D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_155F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateZone*                  PlayerManager;                                     // 0x1320(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DefenderItemInstanceId;                            // 0x1328(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DefenderSquadId;                                   // 0x1338(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefenderPlacedTime;                                // 0x1340(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RecentlySeenInterval;                              // 0x1344(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CurrentAIRotationRate;                             // 0x1348(0xC)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        MoveSoundStimulusBroadcastInterval;                // 0x1354(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1560[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UShapeComponent*                       WeaponCollisionComponent;                          // 0x1360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortInventory*                        Inventory;                                         // 0x1368(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPickup*>                   NearbyPickups;                                     // 0x1370(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class AFortPickup*, float>              UnreachablePickups;                                // 0x1380(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1562[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIAppearanceOverrideEntry> AppearanceOverrideEntries;                         // 0x13E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        AppearanceOverrideEntryIndex;                      // 0x13F0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SpawnLocation;                                     // 0x13F4(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              SpawnRotation;                                     // 0x1400(0xC)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>         SleepingFloor;                                     // 0x140C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1563[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PelvisBoneName;                                    // 0x1418(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HeadBoneName;                                      // 0x1420(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1565[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimapIndicatorUpdateFrequency;                   // 0x1434(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1566[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapViewableDistance;                           // 0x1440(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToPlayerManagerToShowHealthBar;            // 0x1444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToOtherPlayersToShowHealthBar;             // 0x1448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1567[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIAttributesSet*                  AttributesSet;                                     // 0x1458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCharacterAttrSet*                 CharacterAttrSet;                                  // 0x1460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortWeaponAttrSet*                    WeaponAttrSet;                                     // 0x1468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ImpactPhysicalSurfaceSounds[0x3F];                 // 0x1470(0x1F8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ImpactPhysicalSurfaceEffects[0x3F];                // 0x1668(0x1F8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSimpleMiniMapIndicator*           MiniMapIndicator;                                  // 0x1860(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MinimapScale;                                      // 0x1868(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySet*>               DefaultGameplayAbilitySets;                        // 0x1870(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySet*>               SpawnInheritedCharacterAbilitySets;                // 0x1880(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortGameplayModifierItemDefinition*> SpawnModifierDefinitions;                          // 0x1890(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*           AIPawnAbilitySystemComponent;                      // 0x18A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 WallAttackGameplayAbilityTags;                     // 0x18A8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 WallRangedAttackGameplayAbilityTags;               // 0x18C8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 CeilingAttackGameplayAbilityTags;                  // 0x18E8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 FloorAttackGameplayAbilityTags;                    // 0x1908(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>         FailedAbilityQueryTags;                            // 0x1928(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                CurrentAimTarget;                                  // 0x1938(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortNavObstacleComponent*             NavObstacleComponent;                              // 0x1940(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_156A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAILODLevel                   CurrentFortAILODLevel;                             // 0x1958(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_156B[0x11F];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAccountItem*                      DefenderItem;                                      // 0x1A78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_156C[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAIPawn* GetDefaultObj();

	void TurnOnSleepingOptimizations();
	void TriggerNoWeaponSpeech();
	void SetWeaponCollisionComponent(class UShapeComponent* InWeaponCollisionComponent);
	void SetUsesDBNO(bool bInUsesDBNO);
	void SetSkinColor(const struct FLinearColor& NewSkinColor, float NewSkinBrightness);
	void SetShouldStartSleeping(bool bHintStartSleeping);
	void SetMovementUrgency(enum class EFortMovementUrgency Urgency);
	void SetMinimumAILOD(enum class EFortAILODLevel MinimumAILOD);
	void SetMinimapViewableDistance(float NewMinimapViewableDistance);
	void SetIsCharging(bool bNewIsCharging);
	void SetEyeColor(const struct FLinearColor& NewEyeColor, float NewEyeBrightness);
	void SetEncounterInfo(class UFortAIEncounterInfo* InEncounterInfo);
	void SetDefenderTrap(class ABuildingTrapDefender* InDefenderTrap);
	void SetCurrentAimTarget(class AActor* AimTarget);
	void SetCollisionProfileName(class FName InCollisionProfileName);
	void SetCanSleep(bool InCanSleep);
	void SetCanInteract(bool CanInteract);
	void SetBlockCollisionWithOtherAI(bool bInEnableBlockingCollisionWithOtherAI);
	void SetAIType(enum class EFortressAIType InAIType);
	void SetAIRotationRate(struct FRotator& AIRotationRate);
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority);
	void ReviveFromDBNO();
	void ResetAIRotationRateToDefault();
	void OnStartedEncounterSpawn();
	void OnSleepingAIsFloorBuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnRep_MinimapViewableDistance();
	void OnRep_Inventory();
	void OnRep_EnableBlockingCollisionWithOtherAI();
	void OnRep_CurrentWeapon();
	void OnRep_CurrentFortAILODLevel();
	void OnRep_CurrentAIRotationRate();
	void OnRep_bIsSleeping();
	void OnRep_AppearanceOverrideEntryIndex();
	bool OnOutsideOfTetherBeyondMaxTimeAllowed();
	void OnFinishedEncounterSpawn();
	void OnEndSleepEffects();
	void OnEncounterSpawnEnableRangedAttacking();
	void OnEncounterSpawnEnableMeleeAttacking();
	void OnDefenderTrapSet(class ABuildingTrapDefender* OldDefenderTrap);
	void OnCheatUpdateSpecialEventGE(bool bShouldUseSpecialEventGE);
	void OnBeginSleepEffects();
	void OnAppearanceOverridden();
	class UFortItem* K2_GetDefenderItem();
	class UFortItem* K2_FindExistingItemForDefinition(class UFortItemDefinition* ItemDefinition, bool bInStorageVault);
	bool IsInsideTetherBounds(bool bUseRelaxedTetherBounds);
	bool IsInCombat();
	bool IsDefender();
	bool HasTether();
	void GrabPickup(class AFortPickup* Pickup);
	bool GetUsesDBNO();
	struct FRotator GetSpawnRotation();
	int32 GetSpawnPointValue();
	struct FVector GetSpawnLocation();
	int32 GetScoreValue();
	enum class EFortMovementUrgency GetMovementUrgency(class AFortAIPawn* FortAIPawn);
	enum class EFortMovementStyle GetMovementStyle(class AFortAIPawn* FortAIPawn);
	class USoundBase* GetImpactPhysicalSurfaceSound(struct FHitResult& Impact);
	float GetGroundSpeedForUrgency(class AFortAIPawn* FortAIPawn, enum class EFortMovementUrgency Urgency);
	float GetDifficultyRating();
	float GetDifficultyLevel();
	class FString GetDefenderItemInstanceId();
	class AActor* GetCurrentAimTarget();
	enum class EFortCustomGender GetCharacterGender();
	void ForceKillNoDBNO();
	void FinishedEncounterSpawn();
	void ClearAIFocalPoint(bool bUseAttackingPriority);
	bool CanHitTargetWithAbility(const struct FGameplayTagContainer& GameplayAbilityTag, class AActor* CanHitTarget, bool bUseIdealYawRotationToTarget);
	void AddUnreachablePickup(class AFortPickup* Pickup);
	void AddFortAbilitySet(class UFortAbilitySet* FortAbilitySet);
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortAIPawnVariant
class UFortAIPawnVariant : public UObject
{
public:
	TArray<TSubclassOf<class AFortAIPawn>>       PawnClasses;                                       // 0x28(0x10)(ZeroConstructor, Deprecated, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FFortAIPawnVariantDefinition>  PawnVariantDefinitions;                            // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        MinPlayersToSpawnVariant;                          // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1575[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   SpawnPointValueHandle;                             // 0x50(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        CachedSpawnPointValue;                             // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EncounterExpectedLifespan;                         // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        VersionNum;                                        // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1576[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAIPawnVariant* GetDefaultObj();

};

// 0x0 (0x130 - 0x130)
// Class FortniteGame.FortAIPerceptionSystem
class UFortAIPerceptionSystem : public UAIPerceptionSystem
{
public:

	static class UClass* StaticClass();
	static class UFortAIPerceptionSystem* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAIRootAssignmentProviderInterface
class IFortAIRootAssignmentProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAIRootAssignmentProviderInterface* GetDefaultObj();

	struct FFortAIAssignmentIdentifier GetRootAssignmentIdentifier();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAISpawnerInterface
class IFortAISpawnerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAISpawnerInterface* GetDefaultObj();

	bool OnReceiveSpawnGroup();
	bool IsReadyToReceiveNewSpawnGroup();
};

// 0xE0 (0x110 - 0x30)
// Class FortniteGame.FortAISpawnGroup
class UFortAISpawnGroup : public UPrimaryDataAsset
{
public:
	float                                        EnemyUtilities[0x10];                              // 0x30(0x40)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnGroupEnemy>              EnemiesToSpawn;                                    // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsPrototype;                                      // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsValidForEnemySpawners;                          // 0x81(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLargeSpawnGroup;                                // 0x82(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_157C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDiscountRatio;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  MaxGroupCategoryPopulationDensityCurve;            // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortSpawnGroupEncounterTypeData> EncounterTypeData;                                 // 0x98(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 SpawnGroupGameplayTags;                            // 0xA8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     RequiredTagQuery;                                  // 0xC8(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAISpawnGroup* GetDefaultObj();

	bool IsValidForEnemySpawners();
	bool IsPrototype();
	bool IsLargeSpawnGroup();
	int32 GetNumberOfEnemies();
	TSubclassOf<class UFortAIPawnVariant> GetEnemy(int32 EnemyIndex);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortAISpawnGroupCapsCategorySet
class UFortAISpawnGroupCapsCategorySet : public UObject
{
public:
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> SpawnGroupCapsCategories;                          // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAISpawnGroupCapsCategorySet* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAISpawnGroupProgressionInfo
class UFortAISpawnGroupProgressionInfo : public UDataAsset
{
public:
	TArray<struct FSpawnGroupProgression>        SpawnGroups;                                       // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAISpawnGroupProgressionInfo* GetDefaultObj();

};

// 0x140 (0x168 - 0x28)
// Class FortniteGame.FortAISpawnGroupUpgrade
class UFortAISpawnGroupUpgrade : public UObject
{
public:
	struct FGameplayTagContainer                 UpgradeTags;                                       // 0x28(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     GroupRequiredTagQuery;                             // 0x48(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAIPawnUpgrade>            BasePawnUpgrades;                                  // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FName                                  AdditionalModifiersLootTierGroup;                  // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvalidForEnemySpawners;                          // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1584[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnGroupDiscountPercentage;                      // 0xAC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAISpawnGroupUpgradeUIData        UIData;                                            // 0xB0(0xB8)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAISpawnGroupUpgrade* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAISpawnGroupUpgradeProbabilities
class UFortAISpawnGroupUpgradeProbabilities : public UObject
{
public:
	bool                                         bIsGuaranteedUpgrade;                              // 0x28(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1585[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIPawnUpgradeProbability> UpgradeProbabilities;                              // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAISpawnGroupUpgradeProbabilities* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class FortniteGame.FortAITask_AdjustToSlot
class UFortAITask_AdjustToSlot : public UAITask
{
public:
	struct FVector                               SlotLocation;                                      // 0x70(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SlotDirection;                                     // 0x7C(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1586[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_AdjustToSlot* GetDefaultObj();

};

// 0x48 (0xB8 - 0x70)
// Class FortniteGame.FortAITask_ExecuteAbility
class UFortAITask_ExecuteAbility : public UAITask
{
public:
	uint8                                        Pad_158D[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_ExecuteAbility* GetDefaultObj();

	void OnInjectedHitResultDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
};

// 0x20 (0x130 - 0x110)
// Class FortniteGame.FortAITask_FuzzyQueue
class UFortAITask_FuzzyQueue : public UAITask_MoveTo
{
public:
	uint8                                        Pad_158E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_FuzzyQueue* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class FortniteGame.FortAITask_NavmeshWait
class UFortAITask_NavmeshWait : public UAITask
{
public:
	uint8                                        Pad_1592[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_NavmeshWait* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class FortniteGame.FortAITask_RotateToFace
class UFortAITask_RotateToFace : public UAITask
{
public:
	class AActor*                                FocusTarget;                                       // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FocalPoint;                                        // 0x78(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1593[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_RotateToFace* GetDefaultObj();

};

// 0x30 (0x178 - 0x148)
// Class FortniteGame.FortAITask_StepAside
class UFortAITask_StepAside : public UFortAITask_Move
{
public:
	uint8                                        Pad_1594[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                GoalActor;                                         // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1595[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAITask_StepAside* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAITetheringBoxBoundsInterface
class IFortAITetheringBoxBoundsInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAITetheringBoxBoundsInterface* GetDefaultObj();

	float GetTetheredBoxBoundsWidth();
	float GetTetheredBoxBoundsHeight();
	float GetTetheredBoxBoundsEQSSpaceBetween();
	float GetTetheredBoxBoundsEQSGridSize();
	struct FVector GetTetheredBoxBoundsCenter();
};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.FortAlterableItem
class UFortAlterableItem : public UFortAccountItem
{
public:
	TArray<class FString>                        Alterations;                                       // 0xE0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AlterationInstances;                               // 0xF0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAlterableItem* GetDefaultObj();

	int32 GetRating();
};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortAlterableItemDefinition
class UFortAlterableItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortAlterableItemDefinition* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortAlterationItem
class UFortAlterationItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortAlterationItem* GetDefaultObj();

	class UFortAlterationItemDefinition* GetAlterationDefinitionBP();
};

// 0xB80 (0xEB0 - 0x330)
// Class FortniteGame.FortAlterationItemDefinition
class UFortAlterationItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortAlteration                   AlterationType;                                    // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_159F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCosmeticModification             DefaultCosmetic;                                   // 0x338(0xB20)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FFortConditionalCosmeticModification> ConditionalCosmetics;                              // 0xE58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortConditionalIncludeTags>   AdditionalGameplayTags;                            // 0xE68(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortAbilitySet>        AlterationAbilitySet;                              // 0xE78(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemQuantityPair>         AdditionalRespecCosts;                             // 0xEA0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAlterationItemDefinition* GetDefaultObj();

	enum class EFortAlteration GetAlterationType();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAlterationFunctionLibrary
class UFortAlterationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortAlterationFunctionLibrary* GetDefaultObj();

	class UParticleSystem* GetAlterationImpactPhysicalSurfaceEffects(enum class EPhysicalSurface HitSurface, struct FFortCosmeticModification& CosmeticMod);
};

// 0x3C8 (0xAF0 - 0x728)
// Class FortniteGame.FortAmmoItemDefinition
class UFortAmmoItemDefinition : public UFortWorldItemDefinition
{
public:
	struct FSlateBrush                           ClipIconBrush;                                     // 0x728(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIsConsumed;                                       // 0x7B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RegenCooldown;                                     // 0x7B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   AmmoIconBrush;                                     // 0x7B8(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_15A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAmmoItemDefinition* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAnalyticsConfig
class UFortAnalyticsConfig : public UObject
{
public:
	TArray<class FString>                        AltDomains;                                        // 0x28(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                UrlEndpoint;                                       // 0x38(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15A5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnalyticsConfig* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.FortAnalyticsData
class UFortAnalyticsData : public UDataAsset
{
public:
	struct FGameplayTagContainer                 DownedOrFinishTagWhitelist;                        // 0x30(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BanhammerTag;                                      // 0x50(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RemovedFromGameTag;                                // 0x58(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LoggedOutTag;                                      // 0x60(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAnalyticsData* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class FortniteGame.FortAnalyticsItemExclusions
class UFortAnalyticsItemExclusions : public UDataAsset
{
public:
	TSet<enum class EFortRarity>                 ExcludedRarities;                                  // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSet<enum class EFortItemType>               ExcludedItemTypes;                                 // 0x80(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ExcludedItemTags;                                  // 0xD0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAnalyticsItemExclusions* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAnimInputBlueprintLibrary
class UFortAnimInputBlueprintLibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class UFortAnimInputBlueprintLibrary* GetDefaultObj();

	void UpdateFortAnimInput_SpeedWarping(struct FFortAnimInput_SpeedWarping& AnimInput, class UAnimInstance* InAnimInstance, float InSpeedScale);
};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortAnimNotify_GenericNotifyGameplayAbility
class UFortAnimNotify_GenericNotifyGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                          NotifyTag;                                         // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAnimNotify_GenericNotifyGameplayAbility* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_MeleeAnimTrails_On
class UFortAnimNotify_MeleeAnimTrails_On : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotify_MeleeAnimTrails_On* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_MeleeAnimTrails_Off
class UFortAnimNotify_MeleeAnimTrails_Off : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotify_MeleeAnimTrails_Off* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortAnimNotify_PlayConsumeSound
class UFortAnimNotify_PlayConsumeSound : public UAnimNotify_PlaySound
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotify_PlayConsumeSound* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortAnimNotify_PlayEmojiItem
class UFortAnimNotify_PlayEmojiItem : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotify_PlayEmojiItem* GetDefaultObj();

};

// 0x8 (0x60 - 0x58)
// Class FortniteGame.FortAnimNotify_PlayEmoteMusic
class UFortAnimNotify_PlayEmoteMusic : public UAnimNotify_PlaySound
{
public:
	class USoundBase*                            Sound3P;                                           // 0x58(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAnimNotify_PlayEmoteMusic* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortAnimNotify_PlayReloadFX
class UFortAnimNotify_PlayReloadFX : public UAnimNotify
{
public:
	enum class EFortReloadFXState                ReloadStage;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnimNotify_PlayReloadFX* GetDefaultObj();

	void SetReloadStage(enum class EFortReloadFXState InReloadStage);
};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortAnimNotify_PlaySoundLocalOnly
class UFortAnimNotify_PlaySoundLocalOnly : public UAnimNotify_PlaySound
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotify_PlaySoundLocalOnly* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortAnimNotify_PlayWindParticleEffect
class UFortAnimNotify_PlayWindParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotify_PlayWindParticleEffect* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class FortniteGame.FortAnimNotify_TriggerGameplayAbility
class UFortAnimNotify_TriggerGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                          ApplicationTag;                                    // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MontageSectionIfBlocked;                           // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetNextSectionIfBlocked;                          // 0x48(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnimNotify_TriggerGameplayAbility* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class FortniteGame.FortAnimNotifyState_AbilityDecisionWindow
class UFortAnimNotifyState_AbilityDecisionWindow : public UAnimNotifyState
{
public:
	struct FFortMontageInputAction               PrimaryInput;                                      // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortMontageInputAction               SecondaryInput;                                    // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  DefaultNextSection;                                // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrimaryInputStrikeAngle;                           // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SecondaryInputStrikeAngle;                         // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ComboCounter;                                      // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnimNotifyState_AbilityDecisionWindow* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAnimNotifyState_AllowBlockedActions
class UFortAnimNotifyState_AllowBlockedActions : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UFortAnimNotifyState_AllowBlockedActions* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_ConsumeSound
class UFortAnimNotifyState_ConsumeSound : public UAnimNotifyState
{
public:
	class USoundBase*                            ConsumeUseSound;                                   // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAnimNotifyState_ConsumeSound* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAnimNotifyState_EmoteSound
class UFortAnimNotifyState_EmoteSound : public UAnimNotifyState
{
public:
	class USoundBase*                            EmoteSound1P;                                      // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            EmoteSound3P;                                      // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAnimNotifyState_EmoteSound* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAnimNotifyState_RootMotionInterrupt
class UFortAnimNotifyState_RootMotionInterrupt : public UAnimNotifyState
{
public:
	enum class EMontageInterrupt                 MontageInterrupt;                                  // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAllowMoveInput : 1;                               // Mask: 0x1, PropSize: 0x10x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15B9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnimNotifyState_RootMotionInterrupt* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortAnimNotifyState_SpawnProp
class UFortAnimNotifyState_SpawnProp : public UAnimNotifyState
{
public:
	class FName                                  SocketName;                                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x38(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x44(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x50(0xC)(Edit, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ActorProp;                                         // 0x60(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMeshProp;                                  // 0x68(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       SkeletalMeshPropAnimation;                         // 0x70(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInheritScale;                                     // 0x78(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPropAnimLooping;                                  // 0x79(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15BD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           StaticMeshProp;                                    // 0x80(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PropId;                                            // 0x88(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15C0[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAnimNotifyState_SpawnProp* GetDefaultObj();

};

// 0x240 (0x568 - 0x328)
// Class FortniteGame.FortGameplayEffectDeliveryActor
class AFortGameplayEffectDeliveryActor : public AActor
{
public:
	uint8                                        Pad_15D3[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnTouch;                 // 0x348(0x80)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bKillOnExplode;                                    // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetHiddenOnKill;                                  // 0x3C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKillOnMaxTargetsTouched;                          // 0x3CA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15D4[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnExplode;               // 0x3D0(0x80)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        LifespanAfterKill;                                 // 0x450(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchingActorsEffectApplicationUpdateTime;         // 0x454(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBeingKilled : 1;                                // Mask: 0x1, PropSize: 0x10x458(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasExploded : 1;                                  // Mask: 0x2, PropSize: 0x10x458(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_121 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIgnoreInstigatorCollision : 1;                    // Mask: 0x8, PropSize: 0x10x458(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAddHitResultToTouchApplication : 1;               // Mask: 0x10, PropSize: 0x10x458(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_122 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_15D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   CollisionComponent;                                // 0x460(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortSpawnContext                     SpawnContext;                                      // 0x468(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_15DB[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bDoExplosionReentrancyGuard : 1;                   // Mask: 0x1, PropSize: 0x10x550(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15DD[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameplayEffectDeliveryActor* GetDefaultObj();

	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetCollisionComponent(class UPrimitiveComponent* NewCollisionComponent);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FHitResult& HitResult, bool bIsOverlap);
	void OnRep_IsBeingKilled();
	void OnRep_HasExplodedReplay();
	void OnExploded(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
	void OnComponentTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnComponentOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void KillTimerExpired();
	void Kill();
	bool IsBeingKilled();
	class UPrimitiveComponent* GetCollisionComponent();
	void DoExplosion();
	void BroadcastExplosion(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
};

// 0x0 (0x568 - 0x568)
// Class FortniteGame.FortAreaOfEffectCloud
class AFortAreaOfEffectCloud : public AFortGameplayEffectDeliveryActor
{
public:

	static class UClass* StaticClass();
	static class AFortAreaOfEffectCloud* GetDefaultObj();

};

// 0x20 (0x8E0 - 0x8C0)
// Class FortniteGame.FortArenaCamera
class AFortArenaCamera : public ACineCameraActor
{
public:
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x8C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_123 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_15E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CameraZone;                                        // 0x8C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortSpectatorCameraComponent> CameraComponentType;                               // 0x8D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15E5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortArenaCamera* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortHLODStreamingData
class UFortHLODStreamingData : public UObject
{
public:
	TSet<class FName>                            MediumLevelHLODPackageNames;                       // 0x28(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortHLODStreamingData* GetDefaultObj();

};

// 0x1A8 (0x580 - 0x3D8)
// Class FortniteGame.FortAssetManager
class UFortAssetManager : public UAssetManager
{
public:
	TMap<class UObject*, class FName>            GCPreventionPool;                                  // 0x3D8(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15E6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          DefaultBundleState;                                // 0x438(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          PlatformBundleState;                               // 0x448(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortGameData*                         GameData;                                          // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                GameDataName;                                      // 0x460(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MobileGameDataName;                                // 0x470(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaGameData*                       AthenaGameData;                                    // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortChunkDownloadManager*             ChunkDownloadManager;                              // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AthenaGameDataName;                                // 0x490(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                FastCookTheaterPath;                               // 0x4A0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PerfMemTheaterPath;                                // 0x4B0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                BROnlyTheaterPath;                                 // 0x4C0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ActiveTheaterListPath;                             // 0x4D0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          BROnlyLootPackagesExclusionList;                   // 0x4E0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15E8[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAssetManager* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAsyncAction_AbandonSession
class UFortAsyncAction_AbandonSession : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15F0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_AbandonSession* GetDefaultObj();

	class UFortAsyncAction_AbandonSession* AbandonSession(class AFortPlayerController* PlayerController);
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortAsyncAction_EnsureClientQuestLogin
class UFortAsyncAction_EnsureClientQuestLogin : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortQuestManager*                     QuestManager;                                      // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_EnsureClientQuestLogin* GetDefaultObj();

	class UFortAsyncAction_EnsureClientQuestLogin* SendEnsureClientQuestLogin(class UFortQuestManager* QuestManager);
};

// 0x1D8 (0x200 - 0x28)
// Class FortniteGame.FortAsyncAction_MakeTieredWaveEncounterSettings
class UFortAsyncAction_MakeTieredWaveEncounterSettings : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnComplete;                                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTieredWaveSetData                    WaveData;                                          // 0x38(0x160)(Transient, NativeAccessSpecifierPrivate)
	struct FFortEncounterSettings                EncounterSettings;                                 // 0x198(0x58)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_15FD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_MakeTieredWaveEncounterSettings* GetDefaultObj();

	class UFortAsyncAction_MakeTieredWaveEncounterSettings* CreateAsyncAction_MakeTieredWaveEncounterSettings(struct FTieredWaveSetData& WaveData, struct FFortEncounterSettings& InEncounterSettings);
};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortAsyncAction_OpenChoiceUI
class UFortAsyncAction_OpenChoiceUI : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FChoiceData                           ChoiceItems;                                       // 0x50(0x30)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1605[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_OpenChoiceUI* GetDefaultObj();

	class UFortAsyncAction_OpenChoiceUI* OpenChoiceUI(class AFortPlayerController* PlayerController, const struct FChoiceData& ChoiceItems);
};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.FortAsyncAction_PlayConversation
class UFortAsyncAction_PlayConversation : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCanceled;                                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPawn*                             Pawn;                                              // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortConversation*                     ConversationToPlay;                                // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1609[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_PlayConversation* GetDefaultObj();

	class UFortAsyncAction_PlayConversation* PlayConversation(class AFortPawn* Pawn, class UFortConversation* ConversationToPlay);
};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAsyncAction_RejoinSession
class UFortAsyncAction_RejoinSession : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 PlayerController;                                  // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_160C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_RejoinSession* GetDefaultObj();

	class UFortAsyncAction_RejoinSession* RejoinSession(class AFortPlayerController* PlayerController);
};

// 0xB0 (0xD8 - 0x28)
// Class FortniteGame.FortAsyncAction_SendQuestStatEvent
class UFortAsyncAction_SendQuestStatEvent : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnSuccess;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnIgnored;                                         // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFailure;                                         // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortQuestManager*                     QuestManager;                                      // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   ObjectiveStat;                                     // 0x60(0x10)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 TargetTags;                                        // 0x70(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 SourceTags;                                        // 0x90(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ContextTags;                                       // 0xB0(0x20)(Transient, NativeAccessSpecifierPrivate)
	int32                                        Count;                                             // 0xD0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_161E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_SendQuestStatEvent* GetDefaultObj();

	class UFortAsyncAction_SendQuestStatEvent* SendClientStatEventWithTags(class UFortQuestManager* QuestManager, const struct FGameplayTagContainer& TargetTags, const struct FGameplayTagContainer& SourceTags, const struct FGameplayTagContainer& ContextTags, int32 Count);
	class UFortAsyncAction_SendQuestStatEvent* SendClientStatEvent(class UFortQuestManager* QuestManager, const struct FDataTableRowHandle& ObjectiveStat, int32 Count);
};

// 0x160 (0x188 - 0x28)
// Class FortniteGame.FortAsyncAction_TriggerNotification
class UFortAsyncAction_TriggerNotification : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnConfirmed;                                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeclined;                                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortNotificationQueueType        NotificationType;                                  // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1622[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortDialogDescription                Description;                                       // 0x58(0x130)(ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_TriggerNotification* GetDefaultObj();

	class UFortAsyncAction_TriggerNotification* TriggerNotification(class UObject* InWorldContextObject, enum class EFortNotificationQueueType NotificationType, const struct FFortDialogDescription& NotificationDescription);
};

// 0x38 (0x60 - 0x28)
// Class FortniteGame.FortAsyncAction_WaitForClientAnnouncement
class UFortAsyncAction_WaitForClientAnnouncement : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnAllClientsReady;                                 // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCanceled;                                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGuid                                 AnnouncementID;                                    // 0x48(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          CheckAllPlayersReadyTimerHandle;                   // 0x58(0x8)(NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_WaitForClientAnnouncement* GetDefaultObj();

	class UFortAsyncAction_WaitForClientAnnouncement* WaitForClientAnnouncement(class UObject* InWorldContextObject, class AFortClientAnnouncement* AnnouncementToWaitFor);
};

// 0x1F0 (0x518 - 0x328)
// Class FortniteGame.FortAthenaAircraft
class AFortAthenaAircraft : public AActor
{
public:
	struct FLinearColor                          MinimapIconColorTeammate;                          // 0x328(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapIconColorEnemy;                             // 0x338(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1627[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        JumpFlashCount;                                    // 0x378(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1628[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode_AthenaAircraft> CameraModeClass;                                   // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CameraInitialRotation;                             // 0x388(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ExitLocation;                                      // 0x394(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAircraftFlightInfo                   FlightInfo;                                        // 0x3A0(0x28)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        FlightStartTime;                                   // 0x3C8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlightEndTime;                                     // 0x3CC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropStartTime;                                     // 0x3D0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DropEndTime;                                       // 0x3D4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedFlightTimestamp;                         // 0x3D8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlightElapsedTime;                                 // 0x3DC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClientFlightTimerDrift;                            // 0x3E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_162C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapIconScale;                                  // 0x3E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_162D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x3F0(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MiniMapTeamIndicatorIconScale;                     // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_162E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapTeamIndicatorIconBrush;                     // 0x480(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UAthenaBattleBusItemDefinition*        DefaultBusSkin;                                    // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABattleBusCosmeticInstanceBase*        SpawnedCosmeticActor;                              // 0x510(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortAthenaAircraft* GetDefaultObj();

	void PlayEffectsForPlayerJumped();
	void OnRep_ReplicatedFlightTimestamp();
	void OnRep_JumpFlashCount();
	float GetDropStartTime();
	float GetDropEndTime();
	void FortAthenaAircraftDelegate__DelegateSignature(class AFortAthenaAircraft* FortAthenaAircraft);
};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortAthenaExplosionImpulseExecutionCalculation
class UFortAthenaExplosionImpulseExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UFortAthenaExplosionImpulseExecutionCalculation* GetDefaultObj();

};

// 0x11E8 (0x1570 - 0x388)
// Class FortniteGame.FortAthenaVehicle
class AFortAthenaVehicle : public APawn
{
public:
	uint8                                        Pad_1681[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPhysicalSurface                  PrimarySurfaceType;                                // 0x3B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBaseWeaponDamage             WeaponResponseType;                                // 0x3B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1683[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SeatSwitchCooldown;                                // 0x3B8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1684[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 VehicleTags;                                       // 0x3C0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FVehicleSpringInfo>            Springs;                                           // 0x3E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSMVehicleGear>                Gears;                                             // 0x3F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSMVehicleGear>                SprintGears;                                       // 0x400(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSMVehicleGear>                ReverseGears;                                      // 0x410(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WaterTestFrequency;                                // 0x420(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinLinearSpeedRunningVarianceSq;                   // 0x448(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinAngularSpeedRunningVarianceSq;                  // 0x470(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SMSleepCounter;                                    // 0x498(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpringHitNormal;                                // 0x4C0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleErrorPerDistanceCentimeters;                // 0x4E8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleErrorPerDistanceCentimetersPerSecond;       // 0x510(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleErrorPerAngleDegrees;                       // 0x538(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleErrorPerAngleDegreesPerSecond;              // 0x560(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleErrorPerUpdate;                             // 0x588(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleInvalidErrorPerSecondTolerance;             // 0x5B0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleInvalidErrorMaxSeconds;                     // 0x5D8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleInvalidErrorMinSeconds;                     // 0x600(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMinFOV;                                     // 0x628(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMaxFOV;                                     // 0x650(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMinFOVSpeed;                                // 0x678(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMaxFOVSpeed;                                // 0x6A0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleFOVInterpSpeed;                             // 0x6C8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CameraSpaceForwardDistanceOverride;                // 0x6F0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleEjectCooldown;                              // 0x718(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PlayerToSocketSweepRadius;                         // 0x740(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleCameraGraceZone;                            // 0x768(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLeftAnalogSteeringDeadZone;                 // 0x790(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAnalogReverse;                              // 0x7B8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinFallDamageNormalScale;                          // 0x7E0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleCameraLeftAnalogMultiplier;                 // 0x808(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleCameraMaxSteerAlpha;                        // 0x830(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpringStiffMultiplier;                             // 0x858(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpringDampMultiplier;                              // 0x880(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpringMaxAccelMultiplier;                          // 0x8A8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SpringLengthMultiplier;                            // 0x8D0(0x28)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1687[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        VehicleGravity;                                    // 0x900(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InWaterTopSpeedMutliplier;                         // 0x928(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpeedToDamage;                                  // 0x950(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeedToDamage;                                  // 0x978(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpeedDamage;                                    // 0x9A0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeedDamage;                                    // 0x9C8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpeedDamageNoPlayer;                            // 0x9F0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeedDamageNoPlayer;                            // 0xA18(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bIgnoreNextFallingDamage;                          // 0xA40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1688[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleMinHorSpeedToDamage;                        // 0xA44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxHorSpeedToDamage;                        // 0xA48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMinHorSpeedDamage;                          // 0xA4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleMaxHorSpeedDamage;                          // 0xA50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_168A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        MinFallDamageHeight;                               // 0xA58(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxFallDamageHeight;                               // 0xA80(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinFallDamage;                                     // 0xAA8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxFallDamage;                                     // 0xAD0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PlayerFallDamageMultiplier;                        // 0xAF8(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        ImpulseResponseMultiplier;                         // 0xB20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpulseResponseZBias;                              // 0xB24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBraking;                                        // 0xB28(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_168B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        BrakeForce;                                        // 0xB30(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AutoBrakeSpeed;                                    // 0xB58(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        BrakeAboveTopSpeedDelta;                           // 0xB80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChangeDirBrakeDelta;                               // 0xB84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DragCoefficient;                                   // 0xB88(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        GroundCheckDistanceFromCOM;                        // 0xBB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_168C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        WaterDragCoefficient;                              // 0xBB8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AngularDragCoefficient;                            // 0xBE0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PitchAngularDrag;                                  // 0xC08(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        RollAngularDrag;                                   // 0xC30(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDragSpeed;                                      // 0xC58(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LateralFriction;                                   // 0xC80(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinLinearSpeedToWake;                              // 0xCA8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinAngularSpeedToWake;                             // 0xCD0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpeedSteeringAngle;                             // 0xCF8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpeedSteeringAngle;                             // 0xD20(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDriveInclineAngle;                              // 0xD48(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxDriveTiltAngle;                                 // 0xD70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxRestSpeed;                                      // 0xD98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadLength;                            // 0xDC0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadInAirLength;                       // 0xDE8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadMinSpeed;                          // 0xE10(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadMinSpeedInAir;                     // 0xE38(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadMinNormal;                         // 0xE60(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadStiff;                             // 0xE88(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadDamp;                              // 0xEB0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadInAirStiff;                        // 0xED8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadInAirDamp;                         // 0xF00(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadMaxAccel;                          // 0xF28(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleLookAheadMaxAccelInAir;                     // 0xF50(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAirControlStiff;                            // 0xF78(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAirControlDamp;                             // 0xFA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAirYawStrength;                             // 0xFC8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAirPitchStrength;                           // 0xFF0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAutoAirPitchStrength;                       // 0x1018(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAutoAirYawStrength;                         // 0x1040(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleAutoAirRollStrength;                        // 0x1068(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMinVelAlongContactNormal;                   // 0x1090(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMaxVelAlongContactNormal;                   // 0x10B8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSameDirCollision;                               // 0x10E0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinCollisionSpeedToCorrect;                        // 0x1108(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinCollisionBoostNormal;                           // 0x1130(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CollisionSpeedBoostAlpha;                          // 0x1158(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CancelIgnoreForwardThreshold;                      // 0x1180(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleInteractDistanceScalar;                     // 0x11A8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FVector                               TestInitialLinearVelocity;                         // 0x11D0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TestInitialAngularVelocity;                        // 0x11DC(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                            LookAheadHit;                                      // 0x11E8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1691[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PushForceSocket;                                   // 0x1278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FrontWheelsSocket;                                 // 0x1280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RearWheelSockets;                                  // 0x1288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifespanAfterDeath;                                // 0x1290(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayedDying;                                      // 0x1294(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1692[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastDamagedTime;                                   // 0x1298(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1693[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          DriverToPassengerMontage;                          // 0x12A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          PassengerToDriverMontage;                          // 0x12A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReplicatedAthenaVehicleInputState    ReplicatedInputParams;                             // 0x12B0(0x24)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FReplicatedAthenaVehicleInputState    LocalInputParams;                                  // 0x12D4(0x24)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1694[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           PlayerCollisionGameplayEffect;                     // 0x1340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasDriver;                                        // 0x1348(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1695[0xD7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAthenaCarPlayerSlot>          PlayerSlots;                                       // 0x1420(0x10)(Edit, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortCameraMode_AthenaVehicle> CameraModeClass;                                   // 0x1430(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAthenaCarPlayerSlotUnreplicated> PlayerSlotsUnreplicated;                           // 0x1438(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimInstance>             DrivingAnimClass;                                  // 0x1448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAwaitingCorrectionFromServer;                     // 0x1450(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1698[0x87];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x14D8(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x14E8(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHealthSet*                        HealthSet;                                         // 0x14F0(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAthenaImpulseResponseSet*         ImpulseResponseSet;                                // 0x14F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDamageSet*                        DamageSet;                                         // 0x1500(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHealthBarIndicator*               HealthBarIndicator;                                // 0x1508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaVehicleCosmeticItemDefinition*  ActiveCosmetic;                                    // 0x1510(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USceneComponent*>               SpawnedCosmeticComponents;                         // 0x1518(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_169F[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAthenaVehicle* GetDefaultObj();

	void WakeUp();
	void UpdateClientWithVehicleTestInput(const struct FVector& LinearVelocity, const struct FVector& AngularVelocity);
	void SetShootingCone(int32 SeatIdx, const struct FAthenaVehicleShootingCone& InCone);
	void SetImpulseResponseZBias(float ZBias);
	void SetImpulseResponseMultiplier(float Multiplier);
	void SetIgnoreNextFallingDamage(bool InIgnoreNextFallingDamage);
	void ServerUpdateStateSync(TArray<uint8>& StateSyncData);
	void ServerUpdatePhysicsParams(const struct FReplicatedAthenaVehiclePhysicsState& InState);
	void ServerUpdateInputParams(const struct FReplicatedAthenaVehicleInputState& InState);
	void ServerStartFire(uint8 FireModeNum);
	void ServerSetIgnoreNextFallingDamage(bool InIgnoreNextFallingDamage);
	bool ServerOnAttemptInteract(struct FInteractionType& InteractType);
	void ServerCorrectionReceived();
	void OnStartFire(uint8 FireModeNum);
	void OnRep_PlayerSlots();
	void OnRep_LocalInputParams();
	void OnRep_InputParams();
	void OnRep_HealthSet();
	void OnRep_AbilitySystemComponent();
	void OnPxComponentWake(class UPrimitiveComponent* WakingComponent, class FName BoneName);
	void OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn);
	void OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, int32 SeatIdx);
	void OnIsSprintingChanged();
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamaged(float Damage, struct FGameplayTagContainer& DamageTags, struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void OnCollisionHitEffects(struct FVector& HitLocation, struct FVector& HitNormalImpulse, struct FVector& HitFrictionImpulse, struct FVector& HitNormal, class AActor* HitActor);
	void OnCollisionHitDamageEffects(float DamageTaken);
	float ModifyIncomingDamage(float Damage, struct FGameplayTagContainer& InTags, struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	bool IsSprinting();
	bool IsSlowEnoughToInteract();
	bool IsScrapingSidesOrTop();
	bool IsJumping();
	bool IsInWater();
	bool IsInAir();
	bool IsCameraControlledRotation();
	bool IsBraking();
	bool IsAsleep();
	bool HasDriver();
	float GetSteeringAngle();
	float GetSpringLengthRatio(int32 SpringIdx);
	bool GetShootingCone(int32 SeatIdx, struct FTransform* OutConeTM, struct FAthenaVehicleShootingCone* OutCone);
	struct FVector GetPreviousLinearVelocity();
	float GetPreviousForwardSpeedKmh();
	class AFortPlayerPawn* GetPawnAtSeat(int32 SeatIdx);
	float GetMaxHealth();
	float GetHealthPercent();
	float GetHealth();
	float GetForwardSpeedKmh();
	class AFortPlayerPawn* GetDriver();
	int32 GetCurrentGear();
	float GetCurrentBrakeForce();
	float GetBrakingDelta();
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	int32 FindSeatIndex(class AFortPlayerPawn* PlayerPawn);
	bool ContainsPlayers();
	void ChangeSeat();
	bool CanDriveOnIncline();
	bool CanCorrectOrientation();
	bool CanContainPlayers();
	void ApplyGameplayImpulseClient(const struct FVector& ImpulsePoint, const struct FVector& ImpulseValue);
};

// 0xC8 (0x1638 - 0x1570)
// Class FortniteGame.FortAthenaSKVehicle
class AFortAthenaSKVehicle : public AFortAthenaVehicle
{
public:
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x1570(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetFR;                                     // 0x1578(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetFL;                                     // 0x157C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetBR;                                     // 0x1580(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetBL;                                     // 0x1584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelOffsetLerpPerSecond;                          // 0x1588(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16A8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        AxleOffsetZ;                                       // 0x1590(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        AxleCenterF;                                       // 0x15B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleCenterB;                                       // 0x15BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleRollF;                                         // 0x15C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AxleRollB;                                         // 0x15C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WheelRadius;                                       // 0x15C8(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        WheelRotationFR;                                   // 0x15F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationFL;                                   // 0x15F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationBR;                                   // 0x15F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationBL;                                   // 0x15FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityFR;                           // 0x1600(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityFL;                           // 0x1604(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityBR;                           // 0x1608(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRotationVelocityBL;                           // 0x160C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinFR;                                       // 0x1610(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinFL;                                       // 0x1614(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinBR;                                       // 0x1618(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinBL;                                       // 0x161C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityFR;                               // 0x1620(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityFL;                               // 0x1624(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityBR;                               // 0x1628(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinVelocityBL;                               // 0x162C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelSpinDampingPerSecond;                         // 0x1630(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16AA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAthenaSKVehicle* GetDefaultObj();

};

// 0x4E8 (0x1B20 - 0x1638)
// Class FortniteGame.FortAthenaSKMotorVehicle
class AFortAthenaSKMotorVehicle : public AFortAthenaSKVehicle
{
public:
	struct FScalableFloat                        InPlaceRotationStrength;                           // 0x1638(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalForceMultiplier;                              // 0x1660(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleInPlaceThreshold;                           // 0x1688(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleWeightShiftPitchStrength;                   // 0x16B0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleWeightShiftRollStrength;                    // 0x16D8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleWeightShiftYawStrength;                     // 0x1700(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        JumpRateMultiplier;                                // 0x1728(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleDebugStrafeMultiplier;                      // 0x1750(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityVelocitySteerForwardThreshold;              // 0x1778(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityVelocitySteerErrorThreshold;                // 0x17A0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravitySteerMultiplier;                            // 0x17C8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InWaterPushMultiplier;                             // 0x17F0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinWheelRotationSpeed;                             // 0x1818(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WheelRotationAcceleration;                         // 0x1840(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WheelRotationRange;                                // 0x1868(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WheelRotationDampingPerSecond;                     // 0x1890(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalTopSpeedMultiplier;                           // 0x18B8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MountDuration;                                     // 0x18E0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalCooldown;                                     // 0x1908(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxAutoDismountForwardSpeed;                       // 0x1930(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalMinForwardVelocity;                           // 0x1958(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalMinDuration;                                  // 0x1980(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalForceDuration;                                // 0x19A8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PreDismountCooldown;                               // 0x19D0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinPreDismountCooldown;                            // 0x19F8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DismountDuration;                                  // 0x1A20(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FastDismountDuration;                              // 0x1A48(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FastDismountIncline;                               // 0x1A70(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        AntiGravityScalerWhenEmpty;                        // 0x1A98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringCompressionRefireTime;                       // 0x1A9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementAmountParam;                               // 0x1AA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedSpeed;                                       // 0x1AA4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMaxSpringCompression;                       // 0x1AA8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksLeftParam;                                   // 0x1AAC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksRightParam;                                  // 0x1AB0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftSlowDustParam;                                 // 0x1AB4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightSlowDustParam;                                // 0x1AB8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftFastDustParam;                                 // 0x1ABC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightFastDustParam;                                // 0x1AC0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastDustParam;                                     // 0x1AC4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoastingMovementParam;                             // 0x1AC8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkiddingAmountParam;                               // 0x1ACC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirParam;                                        // 0x1AD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScrapingAmountParam;                               // 0x1AD4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioWindParam;                                    // 0x1AD8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16B4[0x44];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAthenaSKMotorVehicle* GetDefaultObj();

	void OnSpringCompression();
	bool IsStandingInPlace();
	float GetStandingInPlaceSteeringAngle();
};

// 0x0 (0x1B20 - 0x1B20)
// Class FortniteGame.FortAthenaGoatVehicle
class AFortAthenaGoatVehicle : public AFortAthenaSKMotorVehicle
{
public:

	static class UClass* StaticClass();
	static class AFortAthenaGoatVehicle* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class FortniteGame.FortAthenaImpulseResponseSet
class UFortAthenaImpulseResponseSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            ImpulseMultiplier;                                 // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpulseMagnitude;                                  // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpulseZAngle;                                     // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_16B7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAthenaImpulseResponseSet* GetDefaultObj();

};

// 0x398 (0x6C0 - 0x328)
// Class FortniteGame.FortAthenaMapInfo
class AFortAthenaMapInfo : public AActor
{
public:
	TSubclassOf<class ABuildingContainer>        TreasureChestClass;                                // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TreasureChestMinSpawnPercent;                      // 0x330(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TreasureChestMaxSpawnPercent;                      // 0x358(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingContainer>        AmmoBoxClass;                                      // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmmoBoxMinSpawnPercent;                            // 0x388(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AmmoBoxMaxSpawnPercent;                            // 0x3B0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaVehicle>        VehicleClass;                                      // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMinSpawnPercent;                            // 0x3E0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleMaxSpawnPercent;                            // 0x408(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class ABuildingItemCollectorActor> VendingMachineClass;                               // 0x430(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VendingMachineRarityCount;                         // 0x438(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaSupplyDrop>     LlamaClass;                                        // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LlamaQuantityMin;                                  // 0x468(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LlamaQuantityMax;                                  // 0x490(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UFortSupplyDropInfo*>           SupplyDropInfoList;                                // 0x4B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMinPlacementHeight;                      // 0x4C8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SupplyDropMaxPlacementHeight;                      // 0x4F0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaAircraft>       AircraftClass;                                     // 0x518(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox2D                                AircraftSpawnZone;                                 // 0x520(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FBox2D                                AircraftDropZone;                                  // 0x534(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class AVolume*                               AircraftDropVolume;                                // 0x548(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SkydivingScanForImpactWorldZ;                      // 0x550(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScalableFloat                        SkydivingForceDeployParachuteWorldZ;               // 0x578(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FAircraftFlightInfo>           FlightInfos;                                       // 0x5A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScalableFloat                        AircraftDeviationAngle;                            // 0x5B0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftDistanceFromMidLine;                       // 0x5D8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftHeight;                                    // 0x600(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        AircraftSpeed;                                     // 0x628(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZoneStartDelay;                                // 0x650(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SafeZoneStartingRadius;                            // 0x678(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSafeZoneVolumeDefinition> SafeZoneVolumeDefinitions;                         // 0x6A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortSafeZoneDefinition>       SafeZoneDefinitions;                               // 0x6B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortAthenaMapInfo* GetDefaultObj();

};

// 0x8 (0x1578 - 0x1570)
// Class FortniteGame.FortAthenaSMVehicle
class AFortAthenaSMVehicle : public AFortAthenaVehicle
{
public:
	class UStaticMeshComponent*                  Mesh;                                              // 0x1570(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortAthenaSMVehicle* GetDefaultObj();

};

// 0x58 (0x15D0 - 0x1578)
// Class FortniteGame.FortAthenaPushVehicle
class AFortAthenaPushVehicle : public AFortAthenaSMVehicle
{
public:
	float                                        InPlaceRotationStrength;                           // 0x1578(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastStartPushMultiplier;                          // 0x157C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastBrakingStrength;                              // 0x1580(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastBrakingMinDelta;                              // 0x1584(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoastBrakingMaxDelta;                              // 0x1588(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartCoastCooldown;                                // 0x158C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalCooldown;                                     // 0x1590(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PedalForceDuration;                                // 0x1594(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndCoastCooldown;                                  // 0x1598(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CanCoastCooldown;                                  // 0x159C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntiGravityScalerWhenEmpty;                        // 0x15A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntiGravityScalerWhenCoasting;                     // 0x15A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16C8[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAthenaPushVehicle* GetDefaultObj();

	bool IsTryingToPedal();
	bool IsStartingToCoast();
	bool IsStandingInPlace();
	bool IsCoasting();
	bool IsBrakingFromCoast();
	float GetStandingInPlaceSteeringAngle();
};

// 0x20 (0x1590 - 0x1570)
// Class FortniteGame.FortAthenaSimpleCar
class AFortAthenaSimpleCar : public AFortAthenaVehicle
{
public:
	class UFortAthenaSimpleCarMovementComponent* WheeledVehicleMovementComponent;                   // 0x1570(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                MeshComponent;                                     // 0x1578(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16CC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAthenaSimpleCar* GetDefaultObj();

};

// 0x5D8 (0x1C10 - 0x1638)
// Class FortniteGame.FortAthenaSKPushVehicle
class AFortAthenaSKPushVehicle : public AFortAthenaSKVehicle
{
public:
	struct FScalableFloat                        InPlaceRotationStrength;                           // 0x1638(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalForceMultiplier;                              // 0x1660(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleInPlaceThreshold;                           // 0x1688(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleWeightShiftPitchStrength;                   // 0x16B0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleWeightShiftRollStrength;                    // 0x16D8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleWeightShiftYawStrength;                     // 0x1700(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        JumpRateMultiplier;                                // 0x1728(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        ShoppingMinPedalCoastSpeed;                        // 0x1750(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleDebugStrafeCoastMultiplier;                 // 0x1778(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        VehicleDebugStrafeMultiplier;                      // 0x17A0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityVelocitySteerForwardThreshold;              // 0x17C8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravityVelocitySteerErrorThreshold;                // 0x17F0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        GravitySteerMultiplier;                            // 0x1818(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        InWaterPushMultiplier;                             // 0x1840(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinWheelRotationSpeed;                             // 0x1868(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WheelRotationAcceleration;                         // 0x1890(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        WheelRotationDampingPerSecond;                     // 0x18B8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalTopSpeedMultiplier;                           // 0x18E0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CoastBrakingStrength;                              // 0x1908(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CoastBrakingMinDelta;                              // 0x1930(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CoastBrakingMaxDelta;                              // 0x1958(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CanCoastCooldown;                                  // 0x1980(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        CanCoastAfterFastDismountCooldown;                 // 0x19A8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MountDuration;                                     // 0x19D0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalCooldown;                                     // 0x19F8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxAutoDismountForwardSpeed;                       // 0x1A20(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalMinForwardVelocity;                           // 0x1A48(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalMinDuration;                                  // 0x1A70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PedalForceDuration;                                // 0x1A98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        PreDismountCooldown;                               // 0x1AC0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinPreDismountCooldown;                            // 0x1AE8(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        DismountDuration;                                  // 0x1B10(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FastDismountDuration;                              // 0x1B38(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FastDismountIncline;                               // 0x1B60(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        AntiGravityScalerWhenEmpty;                        // 0x1B88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AntiGravityScalerWhenCoasting;                     // 0x1B8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpringCompressionRefireTime;                       // 0x1B90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementAmountParam;                               // 0x1B94(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CachedSpeed;                                       // 0x1B98(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentMaxSpringCompression;                       // 0x1B9C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksLeftParam;                                   // 0x1BA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SparksRightParam;                                  // 0x1BA4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftSlowDustParam;                                 // 0x1BA8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightSlowDustParam;                                // 0x1BAC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftFastDustParam;                                 // 0x1BB0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RightFastDustParam;                                // 0x1BB4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FastDustParam;                                     // 0x1BB8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoastingMovementParam;                             // 0x1BBC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkiddingAmountParam;                               // 0x1BC0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InAirParam;                                        // 0x1BC4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScrapingAmountParam;                               // 0x1BC8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioWindParam;                                    // 0x1BCC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16DD[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortAthenaSKPushVehicle* GetDefaultObj();

	bool PlayerWantsToCoast();
	void OnSpringCompression();
	void OnIsCoastingChanged();
	bool IsStandingInPlace();
	bool IsReadyToPedalFromCoast();
	bool IsMounting();
	bool IsEndCoasting();
	bool IsDismountingFromCoast();
	bool IsCoasting();
	bool IsApplyingPedalForce();
	float GetStandingInPlaceSteeringAngle();
	enum class ECoastState GetCoastState();
};

// 0xA0 (0x748 - 0x6A8)
// Class FortniteGame.FortAthenaSupplyDrop
class AFortAthenaSupplyDrop : public ABuildingGameplayActor
{
public:
	struct FCollisionProfileName                 GroundCollsionProfile;                             // 0x6A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FHitResult                            LastGroundLocationHitResult;                       // 0x6B0(0x88)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnOffsetZ;                                      // 0x738(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16EA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundCue*                             SearchingSoundCueLoop;                             // 0x740(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortAthenaSupplyDrop* GetDefaultObj();

	class AFortPickup* SpawnPickup(class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, class AFortPawn* TriggeringPawn, const struct FVector& Position, const struct FVector& Direction);
	void SpawningLootOnDestruction(class AController* EventInstigator);
	void OnFirstSupplyDropOfWaveSpawned();
	bool IsPlayingAReplay();
	bool GroundTrace(struct FVector& TraceStart, struct FVector& TraceEnd, struct FHitResult* OutHit);
	void GetSupplyDropSpawnData(float* MinSpawnHeight, float* MaxSpawnHeight);
	struct FVector FindGroundLocationAt(struct FVector& InLocation);
};

// 0x18 (0x308 - 0x2F0)
// Class FortniteGame.FortAthenaHoverCarMovementComponent
class UFortAthenaHoverCarMovementComponent : public USimpleWheeledVehicleMovementComponent
{
public:
	uint8                                        Pad_16ED[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedAthenaVehicleState         ReplicatedAthenaState;                             // 0x2FC(0xC)(Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAthenaHoverCarMovementComponent* GetDefaultObj();

	void ServerUpdateAthenaState(float InThrottleInput, float InSteeringInput, const struct FVector& InForwardVectorTarget);
};

// 0x0 (0x450 - 0x450)
// Class FortniteGame.FortAthenaSimpleCarMovementComponent
class UFortAthenaSimpleCarMovementComponent : public UWheeledVehicleMovementComponent4W
{
public:

	static class UClass* StaticClass();
	static class UFortAthenaSimpleCarMovementComponent* GetDefaultObj();

};

// 0x160 (0x6C8 - 0x568)
// Class FortniteGame.FortProjectileBase
class AFortProjectileBase : public AFortGameplayEffectDeliveryActor
{
public:
	uint8                                        Pad_16F4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  VerticleFireOffset;                                // 0x578(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  InitialSpeed;                                      // 0x588(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSpeed;                                          // 0x598(0x10)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicatedMaxSpeed;                                // 0x5A8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x5AC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargePercent;                                     // 0x5B0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MomentumTransfer;                                  // 0x5B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddOwnerVelocity;                                 // 0x5B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnPointCanBeUsedByOtherPlayers;                // 0x5B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerSpawnOffset;                                 // 0x5BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x5C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDummyProjectile;                                  // 0x5D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopSimulatingOnHit;                              // 0x5D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableCollisionOnStop;                           // 0x5D2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStoppedSimulatingDueToHit;                        // 0x5D3(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReplicateStopSimulationLocation;                  // 0x5D4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            SimulationStoppingHit;                             // 0x5D8(0x88)(Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortBaseWeaponDamage             WeaponResponseType;                                // 0x668(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16FA[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 DefaultTags;                                       // 0x6A0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_16FB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortProjectileBase* GetDefaultObj();

	void SetGravityScale(float InitialGravityScale);
	void OnStoppedOnServer();
	void OnStopCallback(struct FHitResult& Hit);
	void OnStop(struct FHitResult& Hit);
	void OnShot(struct FHitResult& Hit);
	void OnRep_SimulationStoppingHit();
	void OnRep_ReplicatedMaxSpeed();
	void OnRep_GravityScale();
	void OnBounceCallback(struct FHitResult& Hit, struct FVector& ImpactVelocity);
	void OnBounce(struct FHitResult& Hit);
	class AFortPlayerController* GetOwnerPlayerController();
	float GetGravityScale();
};

// 0xB8 (0x780 - 0x6C8)
// Class FortniteGame.FortAttachableProjectileBase
class AFortAttachableProjectileBase : public AFortProjectileBase
{
public:
	struct FAttachedInfo                         AttachedInfo;                                      // 0x6C8(0xB8)(Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortAttachableProjectileBase* GetDefaultObj();

	void ServerAttachToActor(struct FHitResult& Hit, class AActor* AttachToActor, float StickyOffsetFromPhysicsMesh, float StickyOffsetFromBoneCenter, float NarrowPlacementAgainstVelocityThreshold);
	void OnRep_ReplicatedAttachedInfo();
	void OnFinalizeAttachmentSocketLocandRot(const struct FVector& InWorldPos, const struct FRotator& InWorldRot, class FName InSocketName, bool bFoundClosestOnPhysicsAsset, struct FVector* OutWorldPos, struct FRotator* OutWorldRot, class FName* OutSocketName);
	void OnAttachedToDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	class AActor* GetAttachedToActor();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAttachToActorInterface
class IFortAttachToActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAttachToActorInterface* GetDefaultObj();

	class AActor* GetActorAttachedTo();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortAttributeCategory
class UFortAttributeCategory : public UDataAsset
{
public:
	TArray<struct FMyFortCategoryData>           Categories;                                        // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAttributeCategory* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAttributeFuelInterface
class IFortAttributeFuelInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAttributeFuelInterface* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortAttributeLookupTable
class UFortAttributeLookupTable : public UDataAsset
{
public:
	TArray<struct FFortAttributeInfo>            AttributeInfoList;                                 // 0x30(0x10)(Edit, EditFixedSize, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1715[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAttributeLookupTable* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortAutoFireTargetInterface
class IFortAutoFireTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortAutoFireTargetInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortAwardDetector
class UFortAwardDetector : public UObject
{
public:
	class UFortAwardItemDefinition*              AwardDefinition;                                   // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortAwardDetector* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAwardDetectorFirstKill
class UFortAwardDetectorFirstKill : public UFortAwardDetector
{
public:
	uint8                                        Pad_1716[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAwardDetectorFirstKill* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortAwardDetectorKillDeveloper
class UFortAwardDetectorKillDeveloper : public UFortAwardDetector
{
public:

	static class UClass* StaticClass();
	static class UFortAwardDetectorKillDeveloper* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortAwardDetectorKillStreak
class UFortAwardDetectorKillStreak : public UFortAwardDetector
{
public:
	int32                                        NeededKills;                                       // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1718[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAwardDetectorKillStreak* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortAwardItemDefinition
class UFortAwardItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bSingleSharedDetector;                             // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanEarnMultipleTimes;                             // 0x331(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1719[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortAwardDetector>        DetectorClass;                                     // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortAwardItemDefinition* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortAwardManager
class UFortAwardManager : public UObject
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortAwardDetector*>            ActiveAwards;                                      // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAwardManager* GetDefaultObj();

	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
};

// 0x8 (0x730 - 0x728)
// Class FortniteGame.FortBackpackItemDefinition
class UFortBackpackItemDefinition : public UFortWorldItemDefinition
{
public:
	uint8                                        Pad_171B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBackpackItemDefinition* GetDefaultObj();

};

// 0x88 (0x7B0 - 0x728)
// Class FortniteGame.FortBadgeItemDefinition
class UFortBadgeItemDefinition : public UFortWorldItemDefinition
{
public:
	class FText                                  DisplayText;                                       // 0x728(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  FailedDisplayText;                                 // 0x740(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                          BadgeColor;                                        // 0x758(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   BadgeScoringValuesHandle;                          // 0x768(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortCardPackItemDefinition> BadgeCardPackReward;                               // 0x778(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortItemQuantityPair>         ItemRewards;                                       // 0x7A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortBadgeItemDefinition* GetDefaultObj();

	int32 GetScoreAwarded(class APlayerController* PlayerController);
	int32 GetMissionPoints();
	int32 GetBadgeScoreThreshold();
	enum class EStatCategory GetBadgeScoreCategory();
};

// 0x18 (0x340 - 0x328)
// Class FortniteGame.FortBallSpawner
class AFortBallSpawner : public AActor
{
public:
	uint8                                        Pad_171F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ABuildingGameplayActor>    BallToSpawn;                                       // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereComp;                                        // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortBallSpawner* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBannerUtilities
class UFortBannerUtilities : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortBannerUtilities* GetDefaultObj();

	struct FLinearColor GetSecondaryColor(struct FHomebaseBannerColor& BannerColor);
	class FName GetRowNameForBannerIconItem(class UFortHomebaseBannerIconItem* BannerIcon);
	class FName GetRowNameForBannerColorItem(class UFortHomebaseBannerColorItem* BannerColor);
	struct FLinearColor GetPrimaryColor(struct FHomebaseBannerColor& BannerColor);
	TSoftObjectPtr<class UTexture2D> GetBannerSmallIconAssetFromRowName(class FName& BannerIconRowName, enum class EBannerUsageContext Usage);
	TSoftObjectPtr<class UTexture2D> GetBannerSmallIconAsset(class UFortHomebaseBannerIconItem* BannerIcon, enum class EBannerUsageContext Usage);
	TSoftObjectPtr<class UTexture2D> GetBannerLargeIconAssetFromRowName(class FName& BannerIconRowName, enum class EBannerUsageContext Usage);
	TSoftObjectPtr<class UTexture2D> GetBannerLargeIconAsset(class UFortHomebaseBannerIconItem* BannerIcon, enum class EBannerUsageContext Usage);
	void GetBannerIconsForCategory(class AFortPlayerController* FortPC, class FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerIcons);
	class UFortHomebaseBannerIconItem* GetBannerIconItemFromRowName(class AFortPlayerController* FortPC, class FName& BannerIconRowName);
	class FName GetBannerIconCategoryRowName(class FName& BannerIconRowName);
	class FText GetBannerIconCategoryName(class FName& CategoryRowName);
	bool GetBannerFullUsageRightsFromRowName(class FName& BannerIconRowName);
	void GetBannerColorsForCategory(class AFortPlayerController* FortPC, class FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerColors);
	struct FLinearColor GetBannerColorSecondaryColorFromRowName(class FName& BannerColorRowName);
	struct FLinearColor GetBannerColorSecondaryColor(class UFortHomebaseBannerColorItem* BannerColor);
	struct FLinearColor GetBannerColorPrimaryColorFromRowName(class FName& BannerColorRowName);
	struct FLinearColor GetBannerColorPrimaryColor(class UFortHomebaseBannerColorItem* BannerColor);
	class UFortHomebaseBannerColorItem* GetBannerColorItemFromRowName(class AFortPlayerController* FortPC, class FName& BannerColorRowName);
	struct FHomebaseBannerColor GetBannerColorFromRowName(class FName& BannerColorRowName);
	class FName GetBannerColorCategoryRowName(class FName& BannerColorRowName);
	class FText GetBannerColorCategoryName(class FName& CategoryRowName);
	struct FHomebaseBannerColor GetBannerColor(class UFortHomebaseBannerColorItem* BannerColor);
};

// 0x0 (0x290 - 0x290)
// Class FortniteGame.FortBehaviorTreeComponent
class UFortBehaviorTreeComponent : public UBehaviorTreeComponent
{
public:

	static class UClass* StaticClass();
	static class UFortBehaviorTreeComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBlueprintAnalytics
class UFortBlueprintAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortBlueprintAnalytics* GetDefaultObj();

	void FireQuestAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const class FString& EventName, class UFortQuestItem* Quest, TArray<struct FFortAnalyticsEventAttribute>& Attributes);
	void FireQuestAnalyticsEvent_Blueprint(class UObject* SourceBp, const class FString& EventName, class UFortQuestItem* Quest);
	void FireMissionAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const class FString& EventName, TArray<struct FFortAnalyticsEventAttribute>& Attributes);
	void FireMissionAnalyticsEvent_Blueprint(class UObject* SourceBp, const class FString& EventName, struct FFortAnalyticsEventAttribute& Attribute);
	void FireEvent_MatchmakingClientStatusTextChanged(class UObject* SourceBp, bool bMatchmakingIsLocal, bool bUserIsMatchmaking, bool bPartyIsPostMatchmaking, bool bIsStormShieldMission, class FString& QueueState, enum class EMatchmakingState MatchmakingState);
	void FireEvent_MatchmakingClientStarted(class UObject* SourceBp, bool bMatchmakingStarted, bool bClientPartyStateMatchmaking, bool bClientPartyStateChangedPostMatchmaking);
	void FireEvent_MatchmakingClientEnded(class UObject* SourceBp, bool bPartyStateIsWorldView, bool bPartyStateIsTheaterView, bool bPartyStateIsReturningToFrontEnd, bool bMatchmakingComplete, bool bLobbyStarted, bool bMatchmakingCancelled);
	void FireEvent_BuildLimitProgressIncremented(class UObject* SourceBp, class AFortPlayerController* FortPC, class AFortMission* Mission, enum class EFortBuildingType BuildingType, int32 BuildLimitProgress, int32 BuildLimit);
	void FireEvent_BuildLimitProgressDecremented(class UObject* SourceBp, class AController* Destroyer, class AFortMission* Mission, enum class EFortBuildingType BuildingType, int32 BuildLimitProgress, int32 BuildLimit);
	void FireAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const class FString& EventName, TArray<struct FFortAnalyticsEventAttribute>& Attributes);
	void FireAnalyticsEvent_Blueprint(class UObject* SourceBp, const class FString& EventName, struct FFortAnalyticsEventAttribute& Attribute);
	struct FFortAnalyticsEventAttribute ConstructAnalyticsAttribute(const class FString& AttributeName, const class FString& StringValue, const struct FGuid& FGuidValue, int32 IntValue, float FloatValue, bool BoolValue);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortOnboardingAnalytics
class UFortOnboardingAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortOnboardingAnalytics* GetDefaultObj();

	void FireAnalyticsEvent_VinderTipPlayed(class UObject* SourceBp, const class FString& VinderTipTag);
	void FireAnalyticsEvent_TutorialStartupFailed(class UObject* SourceBp, int32 MatchmakingResult);
	void FireAnalyticsEvent_TutorialCompleted(class UObject* SourceBp, bool WasSuccessful);
	void FireAnalyticsEvent_TutorialCanceled(class UObject* SourceBp);
	void FireAnalyticsEvent_MineCartDestroyed(class UObject* SourceBp);
	void FireAnalyticsEvent_CinematicSkipped(class UObject* SourceBp, const class FString& CinematicName);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortOutpostAnalytics
class UFortOutpostAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortOutpostAnalytics* GetDefaultObj();

	void FireAnalyticsEvent_OutpostSupplyDropPickedUp(class UObject* SourceBp, TArray<struct FFortAnalyticsEventAttribute>& Resourcees);
	void FireAnalyticsEvent_OutpostLoaded(class UObject* SourceBp, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostLeaveOutpost(class UObject* SourceBp, const class FString& BuildingType, int32 NumWavesStarted, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostDefenseStart(class UObject* SourceBp, int32 NumWavesTotal, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostDefenseEnd(class UObject* SourceBp, int32 NumWavesStarted, int32 NumWavesTotal, bool bSucceeded, bool bAbandoned, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostBuildingDefended(class UObject* SourceBp, const class FString& BuildingType, int32 NumMissionsCompleted);
	void FireAnalyticsEvent_OutpostBuildingActivated(class UObject* SourceBp, const class FString& BuildingType, int32 NumMissionsCompleted);
	void FireAnalyticsEvent_OutpostAttackWaveStarted(class UObject* SourceBp, const class FString& BuildingType, int32 NumWavesStarted, const class FString& Direction, int32 DefenseLeg);
	void FireAnalyticsEvent_OutpostAttackWaveCompleted(class UObject* SourceBp, const class FString& BuildingType, int32 NumWavesCompleted, bool Succeeded, const class FString& Direction, int32 DefenseLeg);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDeployableBaseAnalytics
class UFortDeployableBaseAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortDeployableBaseAnalytics* GetDefaultObj();

	void FireAnalyticsEvent_Neighborhood_ConsoleOpened(class AFortPlayerController* FortPC, struct FUniqueNetIdRepl& OwnerId);
	void FireAnalyticsEvent_CombatZone_WaveStarted(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_WaveFailed(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_TierStarted(class AFortPlayerController* FortPC, int32 Tier, int32 NumberOfPlayers, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_TierFailed(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_TierCompleted(class AFortPlayerController* FortPC, int32 Tier, int32 FinalWave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData);
	void FireAnalyticsEvent_CombatZone_ConsoleOpened(class AFortPlayerController* FortPC);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortExpeditionAnalytics
class UFortExpeditionAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortExpeditionAnalytics* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCollectionBookAnalytics
class UFortCollectionBookAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortCollectionBookAnalytics* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSurvivorAnalytics
class UFortSurvivorAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortSurvivorAnalytics* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTwitchAnalytics
class UFortTwitchAnalytics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortTwitchAnalytics* GetDefaultObj();

};

// 0x90 (0x3B8 - 0x328)
// Class FortniteGame.FortBluGloManager
class AFortBluGloManager : public AActor
{
public:
	float                                        BluGloPerMinute;                                   // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           BluGloIcon;                                        // 0x330(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortBluGloManager* GetDefaultObj();

	class UFortItemDefinition* GetBluGloItemDefinition();
};

// 0x20 (0x348 - 0x328)
// Class FortniteGame.FortBodyPartOverridePreviewActor
class AFortBodyPartOverridePreviewActor : public AActor
{
public:
	uint8                                        Pad_17C4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaCharacterPartItemDefinition*    MyCosmeticItem;                                    // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UDelegateProperty_                           OnSettingsChangedDelegate;                         // 0x338(0x10)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortBodyPartOverridePreviewActor* GetDefaultObj();

	void OnPreviewCosmeticItem();
	void ApplyMyCosmeticItemToHero(class AFortPlayerPawn* PawnToModify, class AFortPlayerController* FortPC);
};

// 0x8 (0x530 - 0x528)
// Class FortniteGame.FortBotController
class AFortBotController : public AFortAIController
{
public:
	class UFortBotMissionLogic*                  CurrentMissionLogic;                               // 0x528(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortBotController* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortBotMissionLogic
class UFortBotMissionLogic : public UObject
{
public:
	class AFortMission*                          Mission;                                           // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        Goals;                                             // 0x30(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class AFortBotStructureBuilder*>      Builders;                                          // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         CurrentBehaviorAsset;                              // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortBotController*>            AssignedAI;                                        // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<uint8>                                GoalHasLocator;                                    // 0x68(0x10)(BlueprintVisible, ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBotMissionLogic* GetDefaultObj();

	class AFortBotStructureBuilder* SpawnStructureBuilder(class AActor* MissionGoal, class UFortBuildingInstructions* BuildingInstructions);
	void SetGoalsInvulnerable(bool bGodMode);
	void SetCurrentBehavior(class UBehaviorTree* Behavior);
	void ResetBehavior();
	void OnMissionStarted();
	void OnMissionFinished();
	void OnMissionActivated();
	bool OnInteractWithMissionGoal(class AFortAIController* BotAI, class AActor* MissionGoal);
	bool OnCanStartOtherMission(class AFortAIController* BotAI, class AFortMission* OtherMission);
	void OnAssignedBehavior(class AFortAIController* BotAI);
	void MarkSingleLocator(class AActor* LocatorActor);
	void MarkAllLocated();
	void ClearAllLocated();
};

// 0xA8 (0xD0 - 0x28)
// Class FortniteGame.FortBotMissionManager
class UFortBotMissionManager : public UObject
{
public:
	TSoftClassPtr<class AFortPawn>               BotPawnClass;                                      // 0x28(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AFortPawn*>                     BotPawns;                                          // 0x50(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortBotMissionLogic*>          ActiveMissionsLogicData;                           // 0x60(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortBotMissionLogic*                  PrimaryMissionLogicData;                           // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17D4[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBotMissionManager* GetDefaultObj();

};

// 0x0 (0x1AC0 - 0x1AC0)
// Class FortniteGame.FortBotPawn
class AFortBotPawn : public AFortAIPawn
{
public:

	static class UClass* StaticClass();
	static class AFortBotPawn* GetDefaultObj();

};

// 0x38 (0x360 - 0x328)
// Class FortniteGame.FortBotStructureBuilder
class AFortBotStructureBuilder : public AActor
{
public:
	class UFortBuildingInstructions*             BuildingInstructions;                              // 0x328(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                BuiltActors;                                       // 0x330(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AActor*                                CachedGoal;                                        // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17DF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortBotStructureBuilder* GetDefaultObj();

	void RunDeconstructor();
	void OnBuildingDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BuildAll();
};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTService_ContextOverride
class UFortBTService_ContextOverride : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UFortBTService_ContextOverride* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortBTContext_MoveUrgency
class UFortBTContext_MoveUrgency : public UFortBTService_ContextOverride
{
public:
	enum class EFortMovementUrgency              MoveUrgency;                                       // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTContext_MoveUrgency* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTContext_SkipNotPerceivedGoals
class UFortBTContext_SkipNotPerceivedGoals : public UFortBTService_ContextOverride
{
public:

	static class UClass* StaticClass();
	static class UFortBTContext_SkipNotPerceivedGoals* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortBTContext_SuppressGoalUpdate
class UFortBTContext_SuppressGoalUpdate : public UFortBTService_ContextOverride
{
public:
	bool                                         bUnregisterFromGoalManager;                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17E6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTContext_SuppressGoalUpdate* GetDefaultObj();

};

// 0x68 (0xD0 - 0x68)
// Class FortniteGame.FortBTDecorator_DistanceBetween
class UFortBTDecorator_DistanceBetween : public UBTDecorator
{
public:
	enum class EArithmeticKeyOperation           Operator;                                          // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardKeyA;                                    // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                BlackboardKeyB;                                    // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        SpecifiedDistance;                                 // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSelf : 1;                                      // Mask: 0x1, PropSize: 0x10xC4(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCalculateAs2D : 1;                                // Mask: 0x2, PropSize: 0x10xC4(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_15C : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_17E9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceCalculationUpdateRate;                     // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17EA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTDecorator_DistanceBetween* GetDefaultObj();

};

// 0x70 (0xD8 - 0x68)
// Class FortniteGame.FortBTDecorator_QueryGameplayAbility
class UFortBTDecorator_QueryGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x68(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                Target;                                            // 0x88(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ActiveAbilityTagsToSkipTesting;                    // 0xB0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseTarget;                                        // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17EC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTDecorator_QueryGameplayAbility* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_CanActivate
class UFortBTDecorator_GameplayAbility_CanActivate : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_CanActivate* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_CanHitTarget
class UFortBTDecorator_GameplayAbility_CanHitTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:
	uint8                                        UseIdealYawRotationToTarget : 1;                   // Mask: 0x1, PropSize: 0x10xD8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17F2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_CanHitTarget* GetDefaultObj();

};

// 0x10 (0xE8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_CompareDistance
class UFortBTDecorator_GameplayAbility_CompareDistance : public UFortBTDecorator_QueryGameplayAbility
{
public:
	TArray<struct FDistanceToTargetComparison>   DistanceComparisons;                               // 0xD8(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_CompareDistance* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags
class UFortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags* GetDefaultObj();

};

// 0x20 (0x88 - 0x68)
// Class FortniteGame.FortBTDecorator_GameplayAbility_HasGameplayAbility
class UFortBTDecorator_GameplayAbility_HasGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x68(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_HasGameplayAbility* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_IsOnCooldown
class UFortBTDecorator_GameplayAbility_IsOnCooldown : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_IsOnCooldown* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget
class UFortBTDecorator_GameplayAbility_IsRotatedToAttackTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_IsRotatedToAttackTarget* GetDefaultObj();

};

// 0x0 (0xD8 - 0xD8)
// Class FortniteGame.FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange
class UFortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortBTDecorator_IsGoalPawn
class UFortBTDecorator_IsGoalPawn : public UBTDecorator_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_IsGoalPawn* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class FortniteGame.FortBTDecorator_IsTakerAirborne
class UFortBTDecorator_IsTakerAirborne : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UFortBTDecorator_IsTakerAirborne* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class FortniteGame.FortBTDecorator_WeaponStatus
class UFortBTDecorator_WeaponStatus : public UBTDecorator
{
public:
	float                                        WeaponStatusUpdateRate;                            // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponIsValid : 1;                   // Mask: 0x1, PropSize: 0x10x6C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldBeValid : 1;                   // Mask: 0x2, PropSize: 0x10x6C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestAllowedCurrentWeaponTags : 1;                 // Mask: 0x4, PropSize: 0x10x6C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_165 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1800[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AllowedCurrentWeaponTags;                          // 0x70(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponIsReloading : 1;               // Mask: 0x1, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldBeReloading : 1;               // Mask: 0x2, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponHasAmmoInMagazine : 1;         // Mask: 0x4, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldHaveAmmoInMagazine : 1;        // Mask: 0x8, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTestIfCurrentWeaponHasExtraAmmo : 1;              // Mask: 0x10, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCurrentWeaponShouldHaveExtraAmmo : 1;             // Mask: 0x20, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllInterestedTestsMustPass : 1;                   // Mask: 0x40, PropSize: 0x10x90(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1801[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTDecorator_WeaponStatus* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class FortniteGame.FortBTService_UpdateBotMissionBuilding
class UFortBTService_UpdateBotMissionBuilding : public UBTService
{
public:
	struct FBlackboardKeySelector                InterestLocationKey;                               // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                BuildOrderKey;                                     // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBTService_UpdateBotMissionBuilding* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class FortniteGame.FortBTService_UpdateBotMissionGoal
class UFortBTService_UpdateBotMissionGoal : public UBTService_BlackboardBase
{
public:
	uint8                                        bRequireInteraction : 1;                           // Mask: 0x1, PropSize: 0x10x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequireInteractionOrLocator : 1;                  // Mask: 0x2, PropSize: 0x10x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRequireEncounter : 1;                             // Mask: 0x4, PropSize: 0x10x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPickClosest : 1;                                  // Mask: 0x8, PropSize: 0x10x98(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1802[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTService_UpdateBotMissionGoal* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class FortniteGame.FortBTTask_BotMissionBuild
class UFortBTTask_BotMissionBuild : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UFortBTTask_BotMissionBuild* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class FortniteGame.FortBTTask_BotMissionInteract
class UFortBTTask_BotMissionInteract : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class UFortBTTask_BotMissionInteract* GetDefaultObj();

};

// 0x20 (0x98 - 0x78)
// Class FortniteGame.FortBTTask_ExecuteGameplayAbility
class UFortBTTask_ExecuteGameplayAbility : public UBTTask_GameplayTaskBase
{
public:
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x78(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortBTTask_ExecuteGameplayAbility* GetDefaultObj();

};

// 0x40 (0xF0 - 0xB0)
// Class FortniteGame.FortBTTask_GameMoveTo
class UFortBTTask_GameMoveTo : public UBTTask_MoveTo
{
public:
	struct FBlackboardKeySelector                FocalPointWhileMoving;                             // 0xB0(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EPathObstacleAction               PathObstacleAction;                                // 0xD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1806[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortPawn>                 PushBumpedPawnClass;                               // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDetectUnexpectedPathBlockingObstacles : 1;        // Mask: 0x1, PropSize: 0x10xE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableSlowdownAtGoal : 1;                         // Mask: 0x2, PropSize: 0x10xE8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFinishMoveOnOverlap : 1;                          // Mask: 0x4, PropSize: 0x10xE8(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1808[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTTask_GameMoveTo* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class FortniteGame.FortBTTask_GameMoveDirectlyToward
class UFortBTTask_GameMoveDirectlyToward : public UFortBTTask_GameMoveTo
{
public:

	static class UClass* StaticClass();
	static class UFortBTTask_GameMoveDirectlyToward* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTTask_RequestUndermining
class UFortBTTask_RequestUndermining : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UFortBTTask_RequestUndermining* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class FortniteGame.FortBTTask_SetFrustrationDiscouragement
class UFortBTTask_SetFrustrationDiscouragement : public UBTTaskNode
{
public:
	float                                        DiscouragementDuration;                            // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_180A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBTTask_SetFrustrationDiscouragement* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class FortniteGame.FortBTTask_Sleep
class UFortBTTask_Sleep : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UFortBTTask_Sleep* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class FortniteGame.FortBTTask_TakerMoveToNavmesh
class UFortBTTask_TakerMoveToNavmesh : public UBTTask_MoveTo
{
public:

	static class UClass* StaticClass();
	static class UFortBTTask_TakerMoveToNavmesh* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class FortniteGame.FortBTTask_TriggerVOEvent
class UFortBTTask_TriggerVOEvent : public UBTTaskNode
{
public:
	uint8                                        bUseFeedbackBank : 1;                              // Mask: 0x1, PropSize: 0x10x70(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_166 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_180D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CustomEventName;                                   // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SelectedEvent;                                     // 0x88(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortFeedbackBank*                     FeedbackBank;                                      // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBTTask_TriggerVOEvent* GetDefaultObj();

};

// 0x280 (0x2B0 - 0x30)
// Class FortniteGame.FortHealthSet
class UFortHealthSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            Health;                                            // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxHealth;                                         // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CurrentShield;                                     // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Shield;                                            // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DamageResistance;                                  // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DamageVulnerability;                               // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReflectDamageAbsolute;                             // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReflectDamageFromSource;                           // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Armour;                                            // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealingSourceBaseMultiplier;                       // 0x150(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Damage;                                            // 0x170(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldDamage;                                      // 0x190(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealingSource;                                     // 0x1B0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealingBonusTarget;                                // 0x1D0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Healing;                                           // 0x1F0(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1812[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHealthSet* GetDefaultObj();

	void OnRep_Shield();
	void OnRep_MaxHealth();
	void OnRep_Health();
	void OnRep_CurrentShield();
};

// 0x40 (0x2F0 - 0x2B0)
// Class FortniteGame.FortBuildingActorSet
class UFortBuildingActorSet : public UFortHealthSet
{
public:
	struct FFortGameplayAttributeData            BuildTime;                                         // 0x2B0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RepairTime;                                        // 0x2D0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBuildingActorSet* GetDefaultObj();

	void OnRep_RepairTime();
	void OnRep_BuildTime();
};

// 0x480 (0x4B0 - 0x30)
// Class FortniteGame.FortBuildingAudioBank
class UFortBuildingAudioBank : public UPrimaryDataAsset
{
public:
	struct FFortBuildingSoundsPerResourceType    Sounds[0x4];                                       // 0x30(0x480)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBuildingAudioBank* GetDefaultObj();

};

// 0xB8 (0xE8 - 0x30)
// Class FortniteGame.FortBuildingInstructions
class UFortBuildingInstructions : public UDataAsset
{
public:
	TSoftObjectPtr<class UWorld>                 TemplateMap;                                       // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortBuildingInstruction>      Instructions;                                      // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame, NativeAccessSpecifierPublic)
	struct FBoxSphereBounds                      Bounds;                                            // 0x68(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        NumOfPiecesToSpawnAtOnce;                          // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenSpawns;                                 // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_181A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MapName;                                           // 0x90(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_181B[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBuildingInstructions* GetDefaultObj();

};

// 0x2D0 (0x9F8 - 0x728)
// Class FortniteGame.FortWeaponItemDefinition
class UFortWeaponItemDefinition : public UFortWorldItemDefinition
{
public:
	TSoftClassPtr<class AFortWeapon>             WeaponActorClass;                                  // 0x728(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USkeletalMesh>          WeaponMeshOverride;                                // 0x750(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WeaponProgressiveCosmeticStatName;                 // 0x778(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   WeaponStatHandle;                                  // 0x780(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  AlterationSlotsLoadoutRow;                         // 0x790(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BaselineAlterationSlotsLoadoutRow;                 // 0x798(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortAlterationItemDefinition> BaseAlteration;                                    // 0x7A0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortAlterationItemDefinition> BaseCosmeticAlteration;                            // 0x7C8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    PrimaryFireAbility;                                // 0x7F0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    SecondaryFireAbility;                              // 0x818(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortGameplayAbility>    ReloadAbility;                                     // 0x840(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UFortGameplayAbility>> EquippedAbilities;                                 // 0x868(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortWorldItemDefinition> AmmoData;                                          // 0x878(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowAmmoPercentage;                                 // 0x8A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DegradedPercentage;                                // 0x8A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortWeaponTriggerType            TriggerType;                                       // 0x8A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowTargetingDuringReload;                       // 0x8A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetingPreventsReload;                          // 0x8AA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlwaysChargeUpToMin;                              // 0x8AB(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1848[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             ReticleImage;                                      // 0x8B0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                ReticleCornerAngles;                               // 0x8D8(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             HitNotifyImage;                                    // 0x8E8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             MuzzleBlockedImage;                                // 0x910(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleCenterImage;                                // 0x938(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReticleCenterPerfectAimImage;                      // 0x960(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ReticleCenterImageOffset;                          // 0x988(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReticleCornerOutsideSpreadRadius;                 // 0x990(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_184E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitNotifyDuration;                                 // 0x994(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            HitNotifyOpacityCurve;                             // 0x998(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bValidForLastEquipped;                             // 0x9C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDisplayTier                  DisplayTier;                                       // 0x9C1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1850[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AnalyticTags;                                      // 0x9C8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ActualAnalyticFNames;                              // 0x9E8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortWeaponItemDefinition* GetDefaultObj();

	bool TargetingPreventsReload();
	bool ShouldAllowTargetingDuringReload();
	bool HasUniqueAmmo();
	struct FDataTableRowHandle GetWeaponStatHandle();
	class USkeletalMesh* GetWeaponMeshOverride();
	TSubclassOf<class AFortWeapon> GetWeaponActorClass();
	enum class EFortWeaponTriggerType GetTriggerType();
	class FText GetShortDisplayName();
	TSubclassOf<class UFortGameplayAbility> GetSecondaryFireAbility();
	class UTexture2D* GetReticleImage();
	TArray<float> GetReticleCornerAngles();
	class UTexture2D* GetReticleCenterPerfectAimImage();
	struct FVector2D GetReticleCenterImageOffset();
	class UTexture2D* GetReticleCenterImage();
	TSubclassOf<class UFortGameplayAbility> GetReloadAbility();
	TSubclassOf<class UFortGameplayAbility> GetPrimaryFireAbility();
	class UTexture2D* GetMuzzleBlockedImage();
	float GetLowAmmoPercentage();
	class UCurveFloat* GetHitNotifyOpacityCurve();
	class UTexture2D* GetHitNotifyImage();
	float GetHitNotifyDuration();
	TArray<TSubclassOf<class UFortGameplayAbility>> GetEquippedAbilities();
	class FText GetDisplayTierAsText(enum class EFortDisplayTier DisplayTier);
	enum class EFortDisplayTier GetDisplayTier();
	float GetDegradedPercentage();
	class UFortAlterationItemDefinition* GetBaseCosmeticAlteration();
	class UFortAlterationItemDefinition* GetBaseAlteration();
	TArray<class FName> GetAnalyticTags();
	bool AlwaysChargeUpToMin();
};

// 0x28 (0xA20 - 0x9F8)
// Class FortniteGame.FortBuildingItemDefinition
class UFortBuildingItemDefinition : public UFortWeaponItemDefinition
{
public:
	TSoftObjectPtr<class UBuildingEditModeMetadata> BuildingMetaData;                                  // 0x9F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortBuildingItemDefinition* GetDefaultObj();

};

// 0xD0 (0x3C0 - 0x2F0)
// Class FortniteGame.FortBuildingTrapSet
class UFortBuildingTrapSet : public UFortBuildingActorSet
{
public:
	struct FFortGameplayAttributeData            Durability;                                        // 0x2F0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxDurability;                                     // 0x310(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DurabilityCostPerFire;                             // 0x330(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ArmTime;                                           // 0x350(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReloadTime;                                        // 0x370(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	uint8                                        Pad_1865[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBuildingTrapSet* GetDefaultObj();

	void OnRep_Durability();
};

// 0x40 (0x8C0 - 0x880)
// Class FortniteGame.FortCameraBase
class AFortCameraBase : public ACameraActor
{
public:
	float                                        MinDistanceToDrag;                                 // 0x880(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultFieldOfView;                                // 0x884(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              DefaultRotation;                                   // 0x888(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               DefaultLocation;                                   // 0x894(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortExhibitActor*                     ExhibitActor;                                      // 0x8A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExhibitActorChanged;                              // 0x8A8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CheckForDragBegin;                                 // 0x8A9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1868[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             DownDelta;                                         // 0x8AC(0x8)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1869[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortCameraBase* GetDefaultObj();

	void OnDragEnd();
	void OnDragBegin();
	void OnDeactivated();
	void OnActivated();
	void Exhibit(class AFortExhibitActor* TargetActor);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUICameraFrameInterface
class IFortUICameraFrameInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortUICameraFrameInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUICameraFrameTargetInterface
class IFortUICameraFrameTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortUICameraFrameTargetInterface* GetDefaultObj();

	void SetFrameTargetSettingsChangedDelegate(UDelegateProperty_& Delegate);
	struct FFortUICameraFrameTargetSettings GetZoomedOutCameraFramingSettings();
	struct FFortUICameraFrameTargetSettings GetZoomedInCameraFramingSettings();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUICameraFramingFunctionLibrary
class UFortUICameraFramingFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortUICameraFramingFunctionLibrary* GetDefaultObj();

	struct FBoxSphereBounds CalculateComponentSetBoundsForCameraFraming(TSet<class USceneComponent*>& Components);
	struct FBoxSphereBounds CalculateComponentBoundsForCameraFraming(class USceneComponent* ParentComponent);
	struct FBoxSphereBounds CalculateCharacterCapsuleForCameraFraming(class ACharacter* Character);
	struct FBoxSphereBounds CalculateCharacterBoundsForCameraFraming(class AFortPlayerPawn* PlayerPawn);
	struct FBoxSphereBounds CalculateActorBoundsForCameraFraming(class AActor* Actor);
};

// 0xBC8 (0xC18 - 0x50)
// Class FortniteGame.FortCameraMode_ThirdPerson
class UFortCameraMode_ThirdPerson : public UFortCameraMode
{
public:
	float                                        FOV;                                               // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraSpaceForwardDistance;                        // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClampCameraPitch;                                 // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1875[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraPitchMin;                                    // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CameraPitchMax;                                    // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECameraOrigin                     CameraOrigin;                                      // 0x64(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1876[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CameraOriginSocketName;                            // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CameraOriginInterpSpeed;                           // 0x70(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1877[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInterpOffset                         ViewTargetSpaceViewOffset;                         // 0x80(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FInterpOffset                         ViewTargetSpaceViewOffset_Crouch;                  // 0x90(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FVector                               ViewTargetSpaceViewOffseInterpSpeed;               // 0xA0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1878[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInterpOffset                         CameraSpaceViewOffset;                             // 0xB0(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bSupportsShoulderSwap;                             // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1879[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastCameraOrigin;                                  // 0xC8(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               CameraOriginLocalOffset;                           // 0xD4(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PenetrationBlendInTime;                            // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PenetrationBlendOutTime;                           // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventPenetration;                               // 0xE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoPredictiveAvoidance;                            // 0xE9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CollisionPushOutDistance;                          // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HidePawnPenetrationPercent;                        // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LastAttachSocketName;                              // 0xF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMinimalViewInfo                      LastBasePOV;                                       // 0x100(0x570)(Transient, NativeAccessSpecifierPublic)
	struct FMinimalViewInfo                      DeltaBasePOV;                                      // 0x670(0x570)(Transient, NativeAccessSpecifierPublic)
	float                                        BlendAlpha;                                        // 0xBE0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPenetrationAvoidanceFeeler>   PenetrationAvoidanceFeelers;                       // 0xBE8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        SafeLocToAimLineBlockedPct;                        // 0xBF8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AimLineToDesiredPosBlockedPct;                     // 0xBFC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastDrawDebugTime;                                 // 0xC00(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LastViewTargetSpaceViewOffset;                     // 0xC04(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                IgnoreActorForCameraPenetration;                   // 0xC10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortCameraMode_ThirdPerson* GetDefaultObj();

};

// 0x18 (0xC30 - 0xC18)
// Class FortniteGame.FortCameraMode_AthenaAircraft
class UFortCameraMode_AthenaAircraft : public UFortCameraMode_ThirdPerson
{
public:
	struct FVector                               CameraOriginInterpSpeedToPawn;                     // 0xC18(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCameraMode_AthenaAircraft* GetDefaultObj();

};

// 0x18 (0xC30 - 0xC18)
// Class FortniteGame.FortCameraMode_AthenaVehicle
class UFortCameraMode_AthenaVehicle : public UFortCameraMode_ThirdPerson
{
public:
	struct FVector                               CameraOriginOffset;                                // 0xC18(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_187F[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCameraMode_AthenaVehicle* GetDefaultObj();

};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.FortCardPackItem
class UFortCardPackItem : public UFortAccountItem
{
public:
	TArray<struct FMcpLootEntry>                 Options;                                           // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                Pack_source;                                       // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortCardPackItem* GetDefaultObj();

	bool IsChoicePack();
	void GetChoices(TArray<class UFortAccountItemDefinition*>* Choices);
	bool CanStoreOpen();
};

// 0x90 (0x3C0 - 0x330)
// Class FortniteGame.FortCardPackItemDefinition
class UFortCardPackItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bIsLlama;                                          // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1882[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LootTierGroup;                                     // 0x338(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LootTier;                                          // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsChoicePack;                                     // 0x34C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoOpenAsReward;                                 // 0x34D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1883[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DisplayRarityLevel;                                // 0x350(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1884[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture>               PackImage;                                         // 0x358(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          PackColor;                                         // 0x380(0x10)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortPackPersonality>   PackPersonality;                                   // 0x390(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1885[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCardPackItemDefinition* GetDefaultObj();

	bool IsLlama();
	bool IsChoicePack();
	class UFortPackPersonality* GetPackPersonality();
	class UTexture* GetPackImage();
	struct FLinearColor GetPackColor();
};

// 0x168 (0x490 - 0x328)
// Class FortniteGame.FortCarriedObject
class AFortCarriedObject : public AActor
{
public:
	uint8                                        Pad_1889[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UProjectileMovementComponent*          ProjectileComp;                                    // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_188A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCarriedObjectAttachmentInfo          HolderInfo;                                        // 0x350(0x28)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_188B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               IndicatorRelativeOffset;                           // 0x3A0(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_188C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           Indicator;                                         // 0x3B0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                           DefaultIndicatorColor;                             // 0x438(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FVector                               RelativeTranslation;                               // 0x460(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RelativeRotation;                                  // 0x46C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bPickupOnTouch;                                    // 0x478(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         Team;                                              // 0x479(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_188D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingFlagSpawn*                    SpawnPointActor;                                   // 0x480(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_188E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortCarriedObject* GetDefaultObj();

	void ReturnToSpawnPoint();
	void OnRep_HolderInfo(struct FCarriedObjectAttachmentInfo* PreviousInfo);
	class AActor* GetHoldingActor();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCarriedObjectHolderInterface
class IFortCarriedObjectHolderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortCarriedObjectHolderInterface* GetDefaultObj();

	void OnCarriedObjectDetach(class AActor* DetachedObject);
	void OnCarriedObjectAttach(class AActor* AttachedObject);
	void GetCarriedObjectAttachmentInfo(struct FCarriedObjectAttachmentInfo* OutAttachInfo);
	class USceneComponent* GetAttachmentComponent(class FName SocketName);
	bool CanHoldObject(class AActor* CarriableObject);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortCarriedObjectInterface
class IFortCarriedObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortCarriedObjectInterface* GetDefaultObj();

};

// 0x10 (0xF0 - 0xE0)
// Class FortniteGame.FortChallengeBundleItem
class UFortChallengeBundleItem : public UFortAccountItem
{
public:
	TArray<class FString>                        GrantedQuestInstanceIds;                           // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortChallengeBundleItem* GetDefaultObj();

	void GetQuests(class UFortQuestManager* QuestManager, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests);
	float GetPercentageComplete();
	class UFortChallengeBundleItemDefinition* GetChallengeDefinitionBP();
	void GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount);
};

// 0x70 (0x3A0 - 0x330)
// Class FortniteGame.FortChallengeBundleItemDefinition
class UFortChallengeBundleItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortChallengeBundleQuestEntry> QuestInfos;                                        // 0x330(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                EventName;                                         // 0x340(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ShortName;                                         // 0x350(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  ShortNameNumber;                                   // 0x368(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        CompletionThreshold;                               // 0x380(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaRewardScheduleLevel            CompletionRewards;                                 // 0x388(0x10)(Edit, NativeAccessSpecifierPrivate)
	enum class EChallengeBundleVisualStyle       VisualStyle;                                       // 0x398(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortChallengeBundleItemDefinition* GetDefaultObj();

	enum class EChallengeBundleVisualStyle GetVisualStyle();
	void GetUnownedQuestDefs(class UFortQuestManager* QuestManager, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests);
	class FText GetShortNameNumber();
	class FText GetShortName();
	int32 GetRewardCompletionThreshold();
	int32 GetNumVisibleQuests();
	int32 GetNumQuests();
	class FString GetEventName();
	TArray<struct FAthenaRewardItemReference> GetCompletionRewards();
};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortChallengeBundleScheduleDefinition
class UFortChallengeBundleScheduleDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortChallengeBundleScheduleEntry> ScheduleEntries;                                   // 0x330(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                EventName;                                         // 0x340(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CategoryId;                                        // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  CategoryName;                                      // 0x358(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int32                                        SortPriority;                                      // 0x370(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18AE[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortChallengeBundleScheduleDefinition* GetDefaultObj();

	int32 GetSortPriority();
	int32 GetNumBundles();
	class FString GetEventName();
	class FText GetCategoryName();
	class FName GetCategoryID();
	TArray<class UFortChallengeBundleItemDefinition*> GetBundleDefinitions();
	bool DoesChallengeBundleScheduleExpire();
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortChallengeBundleScheduleItem
class UFortChallengeBundleScheduleItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortChallengeBundleScheduleItem* GetDefaultObj();

	class UFortChallengeBundleScheduleDefinition* GetScheduleDefinitionBP();
	float GetPercentageComplete();
	void GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount);
};

// 0x18 (0xF8 - 0xE0)
// Class FortniteGame.FortCharacter
class UFortCharacter : public UFortAccountItem
{
public:
	class FString                                Squad_id;                                          // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Squad_slot_idx;                                    // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18B5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCharacter* GetDefaultObj();

};

// 0x10 (0xF0 - 0xE0)
// Class FortniteGame.FortCharacterCosmeticItem
class UFortCharacterCosmeticItem : public UFortAccountItem
{
public:
	class FString                                Equipped_character_id;                             // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortCharacterCosmeticItem* GetDefaultObj();

};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortCharacterCosmeticItemDefinition
class UFortCharacterCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortCharacterCosmetic            Cosmetic_Type;                                     // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18B9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortHeroType>>  Hero_Types_Allowed;                                // 0x338(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                         bModifyColor;                                      // 0x348(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCustomColorSwatch>     ColorAlteration;                                   // 0x350(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18BB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCharacterCosmeticItemDefinition* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class FortniteGame.FortCharacterCosmeticManager
class UFortCharacterCosmeticManager : public UObject
{
public:
	uint8                                        Pad_18BE[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCharacterCosmeticManager* GetDefaultObj();

};

// 0x20 (0xB0 - 0x90)
// Class FortniteGame.FortCharacterTooltip
class UFortCharacterTooltip : public UFortAccountItemTooltip
{
public:
	uint8                                        Pad_18D1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCharacterTooltip* GetDefaultObj();

	bool GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortCharacterType
class UFortCharacterType : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortCharacterType* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortChat
class UFortChat : public UChatroom
{
public:

	static class UClass* StaticClass();
	static class UFortChat* GetDefaultObj();

};

// 0x1188 (0x1830 - 0x6A8)
// Class FortniteGame.FortPlayerController
class AFortPlayerController : public APlayerController
{
public:
	uint8                                        Pad_19E0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleTrickInfo                     VehicleTrickInfo;                                  // 0x6C0(0x38)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bFailedToRespawn : 1;                              // Mask: 0x1, PropSize: 0x10x6F8(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDisconnecting : 1;                              // Mask: 0x2, PropSize: 0x10x6F8(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBeingKicked : 1;                                // Mask: 0x4, PropSize: 0x10x6F8(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasInitiallySpawned : 1;                          // Mask: 0x8, PropSize: 0x10x6F8(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAssignedStartSpawn : 1;                           // Mask: 0x10, PropSize: 0x10x6F8(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bReadyToStartMatch : 1;                            // Mask: 0x20, PropSize: 0x10x6F8(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bClientPawnIsLoaded : 1;                           // Mask: 0x40, PropSize: 0x10x6F8(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_196 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_19E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpawnLoc;                                          // 0x6FC(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumPreviousSpawns;                                 // 0x708(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBlueprintReadyCheckCompleted;                    // 0x710(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19E5[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIPawn*>                   ManagedAIs;                                        // 0x750(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       MyFortPawn;                                        // 0x760(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasClientFinishedLoading;                         // 0x768(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasServerFinishedLoading;                         // 0x769(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19E6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeStartedWaiting;                                // 0x76C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeFinishedNavigationBuild;                       // 0x770(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PendingSpectatorLocation;                          // 0x774(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 ActorUnderReticle;                                 // 0x780(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 AutoFireReticleTarget;                             // 0x788(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          AutofireTimerHandle;                               // 0x790(0x8)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AutoFireAcquisitionTime;                           // 0x798(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowAutofireAtReticleTarget;                     // 0x79C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ABuildingWeakSpot>      WeakspotUnderReticle;                              // 0x7A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBuildingWeakSpotData>         ActiveWeakSpots;                                   // 0x7A8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        LastActiveTime;                                    // 0x7B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19ED[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoFireReticleWeaponDistanceScale;                // 0x7F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportNextPieceAssist;                           // 0x7F4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19EE[0x203];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       LongInteractAudioComponent;                        // 0x9F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19EF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortInteractContextInfo*              PossibleInteractContextInfo;                       // 0xA18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortInteractContextInfo*              InteractResponse;                                  // 0xA20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MobileUpdateCachedInteractActorsCooldown;          // 0xA30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MobileUpdateCachedInteractActorsCooldownLength;    // 0xA34(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWantsToSprint;                                    // 0xA38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingSprint;                                    // 0xA39(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintToggleable;                                 // 0xA3A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintCancelsReload;                              // 0xA3B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoRunOn;                                        // 0xA3C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTapInteractEnabled;                               // 0xA3D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetingToggleable;                              // 0xA3E(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMovementDisabledDueToCancellableAction;           // 0xA3F(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayerActivelyMoving;                           // 0xA40(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InMovementCancellableAction;                       // 0xA44(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldingUse;                                       // 0xA48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRetryUse;                                         // 0xA49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowRetryUse;                                    // 0xA4A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsClientTimingOut;                                // 0xA4B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClientTimeoutBlockInputTime;                       // 0xA4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastMoveInputTime;                                 // 0xA50(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastPressGamepadSprintTime;                        // 0xA54(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAtNameBaseScreen;                                 // 0xA58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInventoryToggledByAlt;                            // 0xA59(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSetFirstPersonCamera;                            // 0xA60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCinematicCamera>      CinematicCameraClassOverride;                      // 0xA78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnPressExecuteJetpack;                            // 0xA80(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19F7[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortInteractContextInfo*              AutoDoorInteractResponse;                          // 0xAA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnUiChoiceCompleted;                               // 0xAA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRegainedFocus;                                   // 0xAB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19F9[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsInQuickToggleCursorMode;                        // 0xC00(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19FA[0x4F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bGamepadAbilityPending;                            // 0xC50(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceAllowCursorMode;                             // 0xC51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bForceAllowCameraMode;                             // 0xC52(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDragDropPending;                                  // 0xC53(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSuppressEventNotifications;                       // 0xC54(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19FB[0x57];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastSpotTime;                                      // 0xCAC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortMarkActor>> CurrentMarks;                                      // 0xCB0(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FC[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortGameplayAbility*                  PreviewAbility;                                    // 0xD10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIDirectorDebugInfo                  IntensityGraphInfo;                                // 0xD18(0x28)(Net, RepNotify, NativeAccessSpecifierPublic)
	struct FAIDirectorDebugInfo                  PIDValuesGraphInfo;                                // 0xD40(0x28)(Net, RepNotify, NativeAccessSpecifierPublic)
	struct FAIDirectorDebugInfo                  PIDContributionsGraphInfo;                         // 0xD68(0x28)(Net, RepNotify, NativeAccessSpecifierPublic)
	class AFortCombatManager*                    CombatManager;                                     // 0xD90(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIDirectorDataManager*            AIDirectorDataManager;                             // 0xD98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMusicManager*                     MusicManager;                                      // 0xDA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FD[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       BuildPreviewModeInputComponent;                    // 0xE70(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingPlayerPrimitivePreview*       BuildPreviewMarker;                                // 0xE78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FE[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowBuildingPreviewAutoRotation;                 // 0xEB0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_19FF[0xA7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingActor*                        TargetedBuilding;                                  // 0xF58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingSMActor>          ContextualConversionClass;                         // 0xF60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             StartRepairSound;                                  // 0xF68(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             StartUpgradeSound;                                 // 0xF90(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                HighlightedPrimaryBuildings;                       // 0xFB8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingActor*>                HighlightedInteractionBuildings;                   // 0xFC8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABuildingActor>         HighlightedPrimaryBuilding;                        // 0xFD8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     BuildPreviewMarkerParentMaterial;                  // 0xFE0(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      BuildPreviewMarkerMIDs;                            // 0x1008(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        BuildPreviewRotationIterations;                    // 0x1018(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A01[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bBuildPreviewMirrored : 1;                         // Mask: 0x1, PropSize: 0x10x101C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBuildFree : 1;                                    // Mask: 0x2, PropSize: 0x10x101C(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCraftFree : 1;                                    // Mask: 0x4, PropSize: 0x10x101C(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_199 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1A02[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCostInfoTypes                CurrentCostInfoType;                               // 0x1020(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A03[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ABuildingSMActor>          CurrentBuildableClass;                             // 0x1028(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingSMActor>          PreviousBuildableClass;                            // 0x1030(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortResourceLevel                CurrentResourceLevel;                              // 0x1038(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortResourceType                 CurrentResourceType;                               // 0x1039(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A04[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLastBuildableState                   LastBuildableStateData[0xC];                       // 0x1040(0xC0)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A05[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortDamageNumberInfo>         QueuedDamageNumbers;                               // 0x1110(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AFortDamageNumbersActor*               DamageNumbersActor;                                // 0x1120(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       EditModeInputComponent;                            // 0x1128(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingSMActor*                      EditBuildingActor;                                 // 0x1130(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeDistance;                                  // 0x1138(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastBuildPreviewGridSnapLoc;                       // 0x113C(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LastBuildPreviewGridSnapRot;                       // 0x1148(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               LastBuildPreviewGridSnapCentroid;                  // 0x1154(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       PickerInputComponent;                              // 0x1160(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                       TrapPickerDecoHelper;                              // 0x1168(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHitResult>                    TouchEditResults;                                  // 0x1170(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AFortQuickBars*                        QuickBars;                                         // 0x1180(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A08[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PinnedSchematics;                                  // 0x11B8(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A09[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAutoEquipBetterItems : 1;                         // Mask: 0x1, PropSize: 0x10x1258(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_19A : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1A0A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortInventory*                        WorldInventory;                                    // 0x1260(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortInventory*                        OutpostInventory;                                  // 0x1268(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A0B[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasInitializedWorldInventory;                     // 0x12BC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasInitializedHeroInventory;                      // 0x12BD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAccountInventoryWasUpdated;                       // 0x12BE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSavingGadgetLoadout;                            // 0x12BF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A0E[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortClientPilot_Base*                 BotPilot;                                          // 0x1320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A0F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortClientBotManager*                 BotManager;                                        // 0x1340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A11[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortClientBotManager>     ClientBotManagerClass;                             // 0x1350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCustomizationAssetLoader*         LocalPawnCustomizationAssetLoader;                 // 0x1358(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A12[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDropWeaponsDuringAllMissionStates;                // 0x1378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A13[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRewardReport                     LatestRewardReport;                                // 0x1398(0x70)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UFortRegisteredPlayerInfo*             MyPlayerInfo;                                      // 0x1408(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortUpdatedObjectiveStat>     UpdatedObjectiveStats;                             // 0x1410(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasUnsavedPrimaryMissionProgress;                 // 0x1420(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A14[0x47];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStatManager*                          StatManager;                                       // 0x1468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHeartbeatManager*                     HeartbeatManager;                                  // 0x1470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortStatEventManager*                 StatEventManager;                                  // 0x1478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPersistentGameplayStatContainer  CachedPersistentGameplayStats;                     // 0x1480(0x10)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A15[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UFortMontageItemDefinitionBase*, int32> EmoteUsageCounts;                                  // 0x14A0(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UMcpProfileGroup*                      McpProfileGroup;                                   // 0x14F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCommonPublic*           CommonPublicMcpProfile;                            // 0x14F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCommonCore*             CommonCoreMcpProfile;                              // 0x1500(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileCampaign*               MainMcpProfile;                                    // 0x1508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileAthena*                 AthenaProfile;                                     // 0x1510(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMcpProfileMetadata*               MetadataProfile;                                   // 0x1518(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTutorialCompleted : 1;                            // Mask: 0x1, PropSize: 0x10x1520(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_19C : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1A18[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldReceiveCriticalMatchBonus;                  // 0x1524(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A19[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnServerPlayerChangedBuildMode;                    // 0x1528(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAutoRunEnabled;                                  // 0x1538(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A1A[0xE0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocationUnderReticle;                              // 0x1628(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableVoiceChatPTT : 1;                           // Mask: 0x1, PropSize: 0x10x1634(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteAmmo : 1;                                 // Mask: 0x2, PropSize: 0x10x1634(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNoCoolDown : 1;                                   // Mask: 0x4, PropSize: 0x10x1634(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteDurability : 1;                           // Mask: 0x8, PropSize: 0x10x1634(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsePickers : 1;                                   // Mask: 0x10, PropSize: 0x10x1634(0x1)(Transient, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPickerOpen : 1;                                   // Mask: 0x20, PropSize: 0x10x1634(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCheatGhost : 1;                                   // Mask: 0x40, PropSize: 0x10x1634(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCheatFly : 1;                                     // Mask: 0x80, PropSize: 0x10x1634(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_19D : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bEnableShotLogging : 1;                            // Mask: 0x2, PropSize: 0x10x1635(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsNearActiveEncounters : 1;                       // Mask: 0x4, PropSize: 0x10x1635(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_19E : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1A1C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverriddenBackpackSize;                            // 0x1638(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       AimHelpMode;                                       // 0x163C(0x4)(Net, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortJumpStaminaCost              JumpStaminaCost;                                   // 0x1640(0x1)(Net, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A1D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CameraPrototypeName;                               // 0x1648(0x8)(Net, ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A1E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShowDamageNumbersOnFatalHit;                      // 0x1660(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideHudEnglishText;                               // 0x1661(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTurboBuild;                                       // 0x1662(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A1F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurboBuildFirstInterval;                           // 0x1664(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurboBuildInterval;                                // 0x1668(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoChangeMaterial;                               // 0x166C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A20[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EmoteOffCooldownTime;                              // 0x1670(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprayOffCooldownTime;                              // 0x1674(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortSprayDecalInstance*>       ActiveSprayInstances;                              // 0x1678(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ActiveToyInstances;                                // 0x1688(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A21[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingSMActor*                      PendingEnterModeActor;                             // 0x17A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RandomCharacterIndex;                              // 0x17B0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AntiAddictionPlayTimeMultiplier;                   // 0x17B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A24[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLockOnInfo                           LockOnInfo;                                        // 0x17E4(0x38)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A25[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortIndicatorManager*                 IndicatorManager;                                  // 0x1820(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A26[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerController* GetDefaultObj();

	void UnMutePlayer(struct FUniqueNetIdRepl& UniqueNetId);
	void TogglePersonalVehicle(bool bOn);
	void ToggleInventory();
	void ToggleFullScreenMap();
	void ToggleClientBot();
	void SwapQuickBarFocus(enum class EFortQuickBars InQuickBar);
	void SuppressEventNotifications(bool bSuppress);
	void Suicide();
	bool StartReadyCheck(class FText QueryText, class FText YesText, class FText NoText, float PercentageToPass);
	void SetRotatePawnToCamera(bool bNewRotatePawnToCamera);
	void SetLockOnTargetStickCoords(struct FVector2D& Coords);
	void SetInputYawScale(float InInputYawScale);
	void SetInputPitchScale(float InInputPitchScale);
	void SetFullscreenMapVisible(bool Visible);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void SetCinematicOverrideClass(TSubclassOf<class UFortCinematicCamera> OverrideCameraClass);
	void SetCinematicModeWithWeapon(bool bInCinematicMode, bool bHidePlayer, bool bHideWeapon, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
	void SetAutoFireFromReticleMode(bool bAutoFireOn);
	void SetAtNameHomeBaseScreen(bool AtScreen);
	void ServerUpgradeBuildingActor(class ABuildingActor* BuildingActorToUpgrade, int32 NewUpgradeLevel);
	void ServerUIChoiceCompleted(int32 ChosenItem, int32 MenuIdentifier);
	void ServerTriggerGenericObjectiveEvent(class AFortObjectiveBase* Objective);
	void ServerTriggerCombatEventBatch(TArray<struct FFortCombatManagerEvent>& Payload);
	void ServerTriggerCombatEvent(enum class EFortCombatEvents TriggeredEvent, float HeatMultiplier);
	void ServerTouchActiveTime();
	void ServerTeleportToReticle(const struct FVector& TeleportLocation);
	void ServerTeamChatRoomReady(const class FString& ChatRoomId);
	void ServerSuicide();
	void ServerStartPIDValueGraphing();
	void ServerStartPIDContributionsGraphing();
	void ServerStartIntensityGraphing();
	void ServerSpotActor(class AActor* NewlySpottedActor);
	void ServerSpawnMark(class AActor* ActorToAttachTo, const struct FVector& AttachOffset, class FText& PreapprovedText);
	void ServerSetReadyToContinue(bool bReady, enum class EFortGameplayState RequestedState, bool bTryStartTimer);
	void ServerSetPartyOwner(struct FUniqueNetIdRepl& PartyOwnerUniqueId);
	void ServerSetMarkText(class AFortMarkActor* MarkActor, const class FString& MarkText);
	void ServerSetInventoryStateValue(const struct FGuid& ItemGuid, const struct FFortItemEntryStateValue& StateValue);
	void ServerSetHero(const class FString& NewHeroID);
	void ServerSetClientHasFinishedLoading(bool bInHasFinishedLoading);
	void ServerSetAutoEquipBetterItems(bool bAutoEquip);
	void ServerSetAntiAddictionPlayTimeMultiplier(float NewPlayTimeRewardRate);
	void ServerSendClientProgressUpdate(int32 ClientProgressState, TArray<uint64>& ClientProgressUpdate);
	void ServerReturnToMainMenu();
	void ServerRequestGameplayAction(enum class EFortRequestedGameplayAction RequestedAction);
	void ServerRequestAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent);
	void ServerRequestAIDebug();
	void ServerReportClientFPS(float ClientAvgFPS, uint8 ClientAvgFrameScore, uint8 ClientMaxFrameScore);
	void ServerReplyToReadyCheck(bool bReady);
	void ServerRepairBuildingActor(class ABuildingSMActor* BuildingActorToRepair);
	void ServerRemoveInventoryStateValue(const struct FGuid& ItemGuid, enum class EFortItemEntryState StateValueType);
	void ServerRemoveInventoryItem(const struct FGuid& ItemGuid, int32 Count, bool bForceRemoveFromQuickBars, bool bForceRemoval);
	void ServerRemoveDefender(class ABuildingTrapDefender* DefenderTrap);
	void ServerReleaseInventoryItemKey(enum class EFortQuickBars InQuickBar, int32 Slot);
	void ServerReadyToStartMatch();
	void ServerPlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void ServerPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor, enum class EFortTeam RequiredTeam);
	void ServerModifyStat(class FName StatName, int32 Amount, enum class EStatMod ModType, bool bForceStatSave);
	void ServerModDurability(const struct FGuid& ItemGuid, float DurabilityMod, bool bForceSet);
	void ServerLoadingScreenDropped();
	void ServerKillAllAIPawnsAroundPlayer();
	void ServerKickPlayer(struct FUniqueNetIdRepl& PlayerToKick, class FText& Reason);
	void ServerItemWillBeDestroyed(const struct FGuid& DestroyedItemGuid, int32 Count);
	void ServerHandleMissionEvent_ToggledEditMode(class AFortPlayerController* PlayerThatToggledEditMode, class ABuildingSMActor* EditableActor, bool bOpened);
	void ServerHandleMissionEvent_ToggledCursorMode(class AFortPlayerController* PlayerThatToggledCursorMode, bool bOpened);
	void ServerHandleMissionEvent_StartLeavingZone();
	void ServerGiftInventoryItemToOtherPlayer(const struct FGuid& ItemGuid, const struct FUniqueNetIdRepl& PlayerID, int32 Quantity);
	void ServerExecutePresetTeamChat(class FText& ChatText, const struct FUniqueNetIdRepl& SenderID);
	void ServerExecuteInventoryItem(const struct FGuid& ItemGuid);
	void ServerEndEditingBuildingActor(class ABuildingSMActor* BuildingActorToStopEditing);
	void ServerEmote(class FName& AssetName);
	void ServerEditBuildingActor(class ABuildingSMActor* BuildingActorToEdit, TSubclassOf<class ABuildingSMActor> NewBuildingClass, int32 RotationIterations, bool bMirrored);
	void ServerDropCarriedObject();
	void ServerDropAllItems(class UFortItemDefinition* IgnoreItemDef);
	void ServerDisassembleInventoryItems(TArray<struct FGuid>& ItemGuids, TArray<int32>& ItemCounts);
	void ServerDeployDefender(class ABuildingTrapDefender* DefenderTrap, const class FString& SelectedItemInstanceId, class FName& DefenderSquadId, const struct FGuid& WeaponToGiveGuid, int32 AmmoQuantity);
	void ServerCreateCombatManager();
	void ServerCreateBuildingActor(const struct FBuildingClassData& BuildingClassData, const struct FVector_NetQuantize10& BuildLoc, const struct FRotator& BuildRot, bool bMirrored, float SyncKey);
	void ServerCreateAIDirectorDataManager();
	void ServerCraftSchematic(const class FString& ItemId, int32 PostCraftSlot, bool bIsQuickCrafted);
	void ServerClientPawnLoaded(bool bIsPawnLoaded);
	void ServerCheatAll(const class FString& Msg);
	void ServerCheat(const class FString& Msg);
	void ServerBroadcastUIFeedbackEvent(class FName EventName);
	void ServerBeginEditingBuildingActor(class ABuildingSMActor* BuildingActorToEdit);
	void ServerAttemptUnpinSchematic(const class FString& ItemId, bool bSave);
	void ServerAttemptPinSchematic(const class FString& ItemId, bool bSave);
	void ServerAttemptInventoryDrop(const struct FGuid& ItemGuid, int32 Count);
	void ServerAttemptInteract(class AActor* ReceivingActor, class UPrimitiveComponent* InteractComponent, enum class ETInteractionType InteractType, class UObject* OptionalObjectData);
	void ServerAnnouncementStoppedOnClient(const struct FGuid& AnnouncementID);
	void ServerAddPawnMovementInput(class AFortPawn* InChar, const struct FVector& WorldDirection, float ScaleValue, bool bForce);
	void SendMessage(class FText& MESSAGE);
	void ReturnToMainMenu();
	void ResetInputRotationScale();
	void RemoveItemFromQuickBars(class UFortItemDefinition* ItemDefinition);
	void PrintEventInfo();
	void PrintDebugInfo();
	void PostHeroStatSkillPointsEarned(int32 NumSkillPoints);
	void PostHeroStatMissionCompleted(int32 DifficultyRating);
	void PostHeroStatCollectionBookProgressMade(int32 LevelReached);
	void PlaySpatialSound(class USoundBase* Sound, const struct FVector& Location);
	void PlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void OpenChoiceUI(const struct FChoiceData& ChoiceData);
	void OnRep_UpdatedUnsavedPrimaryMissionProgress();
	void OnRep_UpdatedObjectiveStats();
	void OnRep_QuickBar();
	void OnRep_PinnedSchematics();
	void OnRep_PIDValuesGraphInfo();
	void OnRep_PIDContributionsGraphInfo();
	void OnRep_LatestRewardReport();
	void OnRep_IntensityGraphInfo();
	void OnRep_CombatManager();
	void OnRep_CheatMovement();
	void OnRep_bHasServerFinishedLoading();
	void OnDisplayHitMarker(struct FGameplayTagContainer& HitTags, enum class EFortDamageZone Zone);
	void MutePlayer(struct FUniqueNetIdRepl& UniqueNetId);
	void ModifyStat(class FName StatName, int32 Amount, enum class EStatMod ModType, bool bForceStatSave);
	void LocalStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, class FName Tag);
	void LocalPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, class FName Tag);
	void LocalOnUiChoiceCompleted(int32 ChosenItem, int32 MenuIdentifier);
	void LocalOnBlueprintEdit(class ABuildingSMActor* EditedActor);
	class UFortItem* K2_GetInventoryItemWithGuid(const struct FGuid& ItemGuid);
	class UFortInteractContextInfo* K2_GetInteractResponse();
	class UFortItem* K2_FindExistingItemForDefinition(class UFortItemDefinition* ItemDefinition, bool bInStorageVault);
	bool IsUsingTouch();
	bool IsUsingGamepad();
	bool IsUsingFirstPersonCamera();
	bool IsRequirementsMet(struct FFortRequirementsInfo& InRequirements);
	bool IsPlayingEmote();
	bool IsPersonalVehicleAvailable();
	bool IsPersonalVehicleActive();
	bool IsNearActiveEncounters();
	bool IsInRespawnCountdown();
	bool IsInBuildMode();
	bool IsClientTimingOut();
	bool IsClientBot();
	bool IsAutoFireFromReticleModeEnabled();
	bool IsActionInputIgnored();
	void HideFullScreenMap();
	bool HasLockOnTarget();
	void HandleWorldInventoryLocalUpdate();
	void HandleOutpostInventoryLocalUpdate();
	void GivePlayerAmmo(int32 AmmoCount);
	struct FVehicleTrickInfo GetVehicleTrickInfo();
	float GetTimeRemainingForRespawnBP();
	bool GetRotatePawnToCamera();
	class UFortRegisteredPlayerInfo* GetRegisteredPlayerInfo();
	class UAthenaCharacterItemDefinition* GetRandomDefaultAthenaCharacterDefinition(class UFortMcpProfileAthena* McpAthenaProfile);
	class UFortQuestManager* GetQuestManager(enum class ESubGame SubGame);
	class AFortPlayerPawn* GetPlayerPawn();
	enum class ELockOnState GetLockOnState();
	struct FUniqueNetIdRepl GetGameAccountId();
	bool GetForceAllowCameraMode();
	class UFortCollectionBookManager* GetCollectionBookManager();
	class UFortAwardManager* GetAwardManager(enum class ESubGame SubGame);
	bool GetAtNameHomeBaseScreen();
	class AFortAIDirectorDataManager* GetAIDirectorDataManager();
	class AActor* GetActorUnderReticle();
	int32 GetAccountLevel();
	class UFortAccountItem* GetAccountItem(const class FString& ID);
	void FortClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void FortClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	void ForceUpdateQuickbar(enum class EFortQuickBars QuickbarToRefresh);
	void ForceCancelBuildingTool();
	void FixupInteractionWidgetsOnUnzoom();
	void Emote(class FName& AssetName);
	void DumpHomebaseRatingInfo();
	void DropAllItems(class UFortItemDefinition* IgnoreItemDef);
	void DeployDefender(class ABuildingTrapDefender* DefenderTrap, class UFortDefenderItem* DefenderItem, class FName& DefenderSquadId, class UFortItem* WeaponItem, int32 AmmoQuantity);
	void ClientUpdateRichPresence(enum class ERichPresenceStateChange RichPresenceChange, bool bImportant);
	void ClientUpdatePlayerList();
	void ClientTriggerUIFeedbackEvent(class FName EventName);
	void ClientStopUIFeedbackEvent(class FName EventName);
	void ClientStayWithParty(bool bStayWithParty);
	void ClientSpawnWeakSpotOnBuildingActor(const struct FBuildingWeakSpotData& ReplicatedWeakSpotData);
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void ClientSetInviteFlags(struct FJoinabilitySettings& Settings);
	void ClientSetActionMappingEnabled(class FName ActionName, bool bEnabled);
	void ClientSendMessage(class FText& MESSAGE);
	void ClientSendConfirmationMessage(class FText& ConfirmationMessage, bool bClientQuitAfterMessage);
	void ClientResendLoadoutConfig(bool bPrepareLoadoutConfig, bool bRequestPlayerList);
	void ClientRequestReadyCheck(class FText& QueryText, class FText& YesText, class FText& NoText);
	void ClientReportDamagedResourceBuilding(class ABuildingSMActor* BuildingSMActor, enum class EFortResourceType PotentialResourceType, int32 PotentialResourceCount, bool bDestroyed, bool bJustHitWeakspot);
	void ClientRegisterWithParty();
	void ClientRefreshPlayerList();
	void ClientReceivePresetTeamChat(class FText& ChatText, const struct FUniqueNetIdRepl& SenderID);
	void ClientReceivedAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent, TArray<struct FAttributeModifierInfo>& Sources);
	void ClientReadyCheckComplete(bool bPassed);
	void ClientPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor);
	void ClientOpenChoiceUI(const struct FChoiceData& ChoiceItems);
	void ClientOnGenericPlayerInitialization();
	void ClientJoinConsoleSession(const class FString& ConsoleSession);
	void ClientGivePlayerLocalAccountItem(class UFortAccountItemDefinition* ItemDefinition, int32 Count);
	void ClientForceProfileQuery();
	void ClientForceCancelBuildingTool();
	void ClientFinishedInteractionInZone();
	void ClientExecuteInventoryItem(const struct FGuid& ItemGuid, float Delay, bool bForceExecute, bool bActivateSlotAfterSettingFocused);
	void ClientCreateOrJoinChatRoom(const class FString& ChatRoomId);
	void ClientCancelCrafting();
	void ClientAddScoreNumber(int32 Score, enum class EStatCategory ScoreCategory, struct FVector_NetQuantize& ScoreLocation, bool bDisplayScoreOnPlayer);
	void ClientAddHeroSpecialization(class UFortHeroSpecialization* NewSpecialization);
	void CheatAll(const class FString& Msg);
	void Cheat(const class FString& Msg);
	void AddItemToQuickBars(class UFortItemDefinition* ItemDefinition, enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	void ActivateSlot(enum class EFortQuickBars InQuickBar, int32 Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot);
};

// 0x50 (0xC8 - 0x78)
// Class FortniteGame.FortCheatManager
class UFortCheatManager : public UCheatManager
{
public:
	uint8                                        Pad_1B20[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bDebugInteractTrace : 1;                           // Mask: 0x1, PropSize: 0x10x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugPickupSpline : 1;                            // Mask: 0x2, PropSize: 0x10x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugFloorsOnMiniMap : 1;                         // Mask: 0x4, PropSize: 0x10x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableScoreboard : 1;                             // Mask: 0x8, PropSize: 0x10x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugBounceCurve : 1;                             // Mask: 0x10, PropSize: 0x10x88(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugBeautyMode : 1;                              // Mask: 0x20, PropSize: 0x10x88(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisplayWindDebugging : 1;                         // Mask: 0x40, PropSize: 0x10x88(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugStructuralSupportSystem : 1;                 // Mask: 0x80, PropSize: 0x10x88(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInfiniteStamina : 1;                              // Mask: 0x1, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowGameDifficultyHUD : 1;                        // Mask: 0x2, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowIntensityHUD : 1;                             // Mask: 0x4, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowSpawnPointsHUD : 1;                           // Mask: 0x8, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowMaxAIHUD : 1;                                 // Mask: 0x10, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowItemIDsOnCards : 1;                           // Mask: 0x20, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableContextMenus : 1;                           // Mask: 0x40, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnlimitedHealth : 1;                              // Mask: 0x80, PropSize: 0x10x89(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnlimitedAIHealth : 1;                            // Mask: 0x1, PropSize: 0x10x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPickersUseLeftThumbstick : 1;                     // Mask: 0x2, PropSize: 0x10x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFreezeAILOD : 1;                                  // Mask: 0x4, PropSize: 0x10x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceAILOD : 1;                                   // Mask: 0x8, PropSize: 0x10x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUnlockAllDefenders : 1;                           // Mask: 0x10, PropSize: 0x10x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseNewFrontEndCameraManagement : 1;               // Mask: 0x20, PropSize: 0x10x8A(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1B4 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1B22[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAILODLevel                   ForcedAILODValue;                                  // 0x8C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B23[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UBuildingTextureData>   TransparentTextureData;                            // 0x90(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B24[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCheatManager* GetDefaultObj();

	void WriteLootReport();
	void WannaGun();
	void ViewStuck();
	void UnlockAllZones();
	void UnlockAllDefenders(bool InUnlockAllDefenders);
	void UnforceAILODs();
	void TutorialRemoveHighlight(class FName Highlight);
	void TutorialRemoveHidden(class FName Hidden);
	void TutorialListHighlights();
	void TutorialListHidden();
	void TutorialListAll();
	void TutorialAddHighlight(class FName Highlight);
	void TutorialAddHidden(class FName Hidden);
	void TriggerOutOfStaminaFeedback();
	void ToggleWindDebugVolumeDisplay();
	void ToggleWindDebugDisplay(float NewRefreshRate);
	void ToggleWindDebugDeltaBoundsDisplay();
	void ToggleWalkOnWalls();
	void ToggleVoiceDebug();
	void ToggleUtilitiesGraph();
	void ToggleUseNewItemCards();
	void ToggleUnlimitedHealth();
	void ToggleUnlimitedAIHealth();
	void ToggleTreeVisibility();
	void ToggleSpawnPointsHUD();
	void ToggleShotLogging();
	void ToggleSecondaryMissionHeaders();
	void TogglePlayerNames();
	void TogglePIDValuesGraph();
	void TogglePIDContributionsGraph();
	void TogglePickupSpline();
	void TogglePickers();
	void ToggleNoCoolDown();
	void ToggleNewFrontEndCameraManagement();
	void ToggleMustUseJetpackToggle();
	void ToggleMaxAIHUD();
	void ToggleLogCharacterCustomization();
	void ToggleItemIdsOnCards();
	void ToggleInWorldScoreNumbers();
	void ToggleInvincibleCornerstones();
	void ToggleInteractTrace();
	void ToggleIntensityHUD();
	void ToggleIntensityGraph();
	void ToggleInfiniteStamina();
	void ToggleInfiniteDurability();
	void ToggleInfiniteAmmo();
	void ToggleIndestructibleKeep();
	void ToggleHeroVisibility();
	void ToggleGameDifficultyHUD();
	void ToggleFreezeAILOD();
	void ToggleForceUsingGamepad();
	void ToggleFloorsOnMiniMap();
	void ToggleFactorGraph();
	void ToggleExplorationLogging();
	void ToggleExplorationBadgeView();
	void ToggleEncounterModifierTags();
	void ToggleEncounterEQSDebug();
	void ToggleDrawTurnTransitionDebug();
	void ToggleDrawTargetSelectionDebugByClass(TSubclassOf<class AActor> TargetSelectionDebugSourceClass);
	void ToggleDrawTargetSelectionDebug();
	void ToggleDrawRunVariationDebug();
	void ToggleDebugHUDObjectiveHeight();
	void ToggleContextMenus();
	void ToggleCombatGraph();
	void ToggleCharacterHeadAccessories();
	void ToggleCharacterBackpack();
	void ToggleBuildingHighlights();
	void ToggleBuildingActorsTransparency();
	void ToggleAutoSlotting();
	void ToggleAISpawning();
	void ToggleAISpawnCap();
	void ToggleAIDirectorLogging();
	void ToggleAIDespawning();
	void ToggleAIAnim();
	void TestUpgradeOutpostItem(const class FString& ItemTemplateId);
	void TestStun(float StunStime);
	void TestSetOutpostDefenseActive(bool bActive);
	void TestSafeZoneLocations(int32 NumPasses, int32 PhaseToDraw);
	void TestRegenId();
	void TestOutpostUI();
	void TestLeaveGame();
	void TestKnockback(float KnockbackMagnitude, float KnockbackZAngle);
	void TestJoin();
	void TestEncryptAPI(const class FString& InUserId, const class FString& InSessionId);
	void TestDisconnect();
	void TestCloseClientConfirmationMessage();
	void TestCheckBansAtMatchStart();
	void TestChangePartySize(int32 NewSize);
	void TestChangePartyPrivacy(bool bPrivate, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void TestCancelLobby();
	void TestBehaviorScore();
	void TestBanhammer(const class FString& InUserId, int32 BanhammerCause, int32 BanhammerAction, int32 BanhammerActivation, int32 BanhammerTiming, int32 BanhammerMessageType, const class FString& BanhammerCustomMessage, const class FString& BanhammerDetails);
	void TeleportToMissionActor();
	void TeleportToLocation(float X, float Y, float Z);
	void TeleportToActor(const class FString& ClassOrInstanceName);
	void SwitchTeam();
	void SwapPickerThumbstick();
	void StopHighlights();
	void StopDummyDebugEncounter();
	void StartLiveStreamingWindow(float Seconds);
	void SpawnScriptedPawnsInFormation(const class FString& ProfileName, int32 RowWidth, int32 ColumnDepth, float Spacing);
	class AFortPlayerPawn* SpawnScriptedPawn(const class FString& ProfileName);
	void SpawnPickup(const class FString& ItemName, int32 NumItems, float SpawnDistance, float SpawnRotation);
	class AFortPawn* SpawnPawn(const class FString& PawnType);
	class AFortPlayerPawn* SpawnEnemyPlayer(float MaxHealth, float MaxShield);
	void SpawnContainer(const class FString& ContainerClassName);
	void SpawnAIGroupWithUpgrade(const class FString& SpawnGroupName, const class FString& UpgradeName);
	void SpawnAIGroupFromExternalSpawner(const class FString& SpawnGroupName);
	void SpawnAIGroup(const class FString& SpawnGroupName);
	void SkipSafeZones();
	void SkipAircraft();
	void SimulateLootDrops();
	void SimulateLoot(class FName TierGroup, int32 LootTier, int32 LootLevel);
	void ShowHUDElement(const struct FGameplayTag& HUDElementTag);
	void ShowHighlightSummary();
	void ShowGameplayCaptureUI();
	void ShowAllMinimapIcons();
	void ShowActiveGameplayModifiers();
	void SetWorldLevel(float Level);
	void SetWorldDaysElapsed(float Days);
	void SetSafeZoneRadius(float NewRadius);
	void SetSafeZoneLocationToPlayer();
	void SetRespawnTimerOverride(float TimeUntilRespawn);
	void SetReplStat(enum class EFortReplicatedStat Stat, int32 Amount);
	void SetRandomAircraftFlightPath();
	void SetPvPStalemateTime(int32 NumSeconds);
	void SetPvPRoundTime(int32 NumSeconds, int32 CriticalThreshold);
	void SetMaxClouds(int32 MaxClouds);
	void SetLFG(bool bLFG);
	void SetJumpStaminaCost(class FName ModeName);
	void SetInteractionDistances(float InteractionDistance, float InteractionHighlightDistance);
	void SetInteractExtent(float Extent);
	void SetInputPresetName(const class FString& PresetName);
	void SetHordePlotExpansionSize(int32 XSize, int32 YSize, int32 ZSize);
	void SetHeroLevel(int32 Level);
	void SetHeroClass(const class FString& NewHeroName, int32 Level);
	void SetHealthPercent(float Percent);
	void SetHasSeenStWMovieTrailer(bool bInHasSeen);
	void SetHasSeenBRMovieTrailer(bool bInHasSeen);
	void SetGlobalWind(float Magnitude, float HeadingDegrees);
	void SetGameStat(const class FString& StatName, int32 Amount);
	void SetGameDifficultyOverride(float GameDifficultyOverrideValue);
	void SetFrameSyncMode(int32 Mode);
	void SetEventCalendarTime(const class FString& TimeString);
	void SetEncounterTopUtilityPercentages(const class FString& UtilitiesAndPercentages);
	void SetEncounterSpawnPointsCurve(const class FString& CurveName);
	void SetEncounterSpawnPointsCap(int32 SpawnPointsCap);
	void SetEncounterSimulatedNumberOfPlayers(int32 NumPlayers);
	void SetEncounterGraphsHistoryLength(int32 Seconds);
	void SetEncounterDirections(const TArray<enum class EFortEncounterDirection>& Directions);
	void SetDifficultyIncreaseRewardTier(int32 RewardTier);
	void SetCurrentEncounterToDebug(int32 EncounterIndex);
	void SetCullValues(float MinCullObjectSize, float MinCullDistance, float MaxCullObjectSize, float MaxCullDistance);
	void SetCrossplayPreference(int32 NewPreference);
	void SetConsole60FPSMode(bool bEnabled);
	void SetCombatGraphHistoryLength(int32 Seconds);
	void SetCloudAltitude(float CloudAltitude);
	void SetCapturePercentage(float NewCapturePercentage);
	void SetCameraPrototype(class FName ProtoName);
	void SetCameraFOVMultiplier(float Multiplier);
	void SetCameraDistanceMultiplier(float XMultiplier, float YMultiplier, float ZMultiplier);
	void SetAutoFire(bool bEnable);
	void SetAthenaHero(const class FString& NewHeroName);
	void SetAircraftFlightPath(float StartDegrees, float OffsetFactor);
	void SetAimMode(uint32 Mode);
	void SetActionMappingEnabled(class FName Action, bool bEnabled);
	void SendTwitchToastNotification(const class FString& Title, const class FString& Description);
	void SendQuestEvent(class FName Type, class FName TargetTag, class FName SourceTag, class FName ContextTag);
	void SendMissionEvent(const class FString& MissionEventName);
	void RunPerfMemCheatScript(bool bStartStatFiles);
	void RunPawnScriptLocally(const class FString& ProfileName);
	void RunMonteCarlo(int32 X, int32 Y, const class FString& TileGroup, int32 NumIterations);
	void ReviveFromDBNO();
	void RespawnPlayerServer();
	void RespawnPlayer();
	void ResetMaxAITracking();
	void ResetLastSeenAthenaStoreRefreshTime();
	void ResetForcedAthenaCosmeticItems();
	void ResetEncounterWave();
	void ReRandomizeTiles();
	void ReplayLastPerfTest(const class FString& Params);
	void RemoveGameplayModifier(const class FString& ModifierName);
	void RemoveDebugSpawnAIGroupTag(class FName Tag);
	void RemoveDebugEncounterTag(class FName Tag);
	void ReloadUMG();
	void ReloadUI();
	void ReInitHUD();
	void RegenerateZoneMissionsWithDifficultyLevel(float DifficultyLevelOverride);
	void RegenerateZoneMissions();
	void RefreshTheaters();
	void RefreshAllCalendars();
	void RedoHuskSpecialEventModifiers(float TargetRate);
	void QueryHighlightCount();
	void PrintTileWorld();
	void PrintShotReport();
	void PrintScriptedActionManagerState();
	void PerfMemStatMonitor(const class FString& ToggleState);
	void Pain(float Amount);
	void ModItemDurability(float InValue);
	void MMS(const class FString& Command);
	void MissionForceSuccess(const class FString& MissionName, float FractionCompleted);
	void MissionForcePrimarySuccess(float FractionCompleted);
	void MissionForceFailure(const class FString& MissionName);
	void McpUpgradeItem(const class FString& ItemToUpgrade);
	void McpTestVerifyProfileToken();
	void McpTestFriendCodes_OnQueryUnredeemedFriendCodes(bool bSuccess, TArray<struct FFriendCode>& FriendCodes);
	void McpTestFriendCodes(const class FString& TokenId);
	void McpStorageTransfer(TArray<class FString>& ItemIdsToMoveToOutpost, TArray<class FString>& ItemIdsToMoveToTheater);
	void McpSlotItem(const class FString& ItemToSlot);
	void McpResetPersistence();
	void McpRefreshProfile();
	void McpRefreshCatalog();
	void McpRedeemPurchases();
	void McpRecycleItem(const class FString& ItemToRecycle);
	void McpPrintPartyInviteToken(bool OnlyPrintIfJoinable);
	void McpPrintFriendInviteToken(const class FString& FriendName, bool OnlyPrintIfJoinable);
	void McpOpenCardPack(const class FString& CardPackItemId, int32 SelectionIdx);
	void McpLogout();
	void McpJoinFromPartyInviteToken(const class FString& Token, bool bIsFromInvite);
	void McpIssueCodeToken(const class FString& TokenId);
	void McpHostGetPlayers();
	void McpHostGetAllPlayerCachedPersistence();
	void McpGetVersion();
	void McpGetUnredeemedCodes();
	void McpGetSchematicXP();
	void McpGetPrivacySettings();
	void McpGetPersonnelXP();
	void McpGetHexMission();
	void McpGetCurrencyAmount();
	void McpGetCachedPersistence();
	void McpForceHttpFailRate(float Factor);
	void McpEquipCharCosmetic(const class FString& CharacterId, const class FString& CosmeticId, int32 CosmeticType);
	void McpEarnScore(int32 ScoreAmount);
	void McpConvertItem(const class FString& ItemToConvert, int32 ConversionIdx);
	void McpCompleteHexMission();
	void McpCompleteCurrentPrimaryMission(int32 NumMissionPoints, int32 DifficultyIncreaseRewardTier);
	void McpClaimAllResourceCollectors(bool bDebugPrint);
	void McpClaimAllAvailableCollectionBookRewards();
	void McpCheat();
	void McpApplyStash(const class FString& StashName);
	void McpApplyAlteration(const class FString& Schematic, const class FString& Alteration);
	void MassSuicide();
	void MakeGods(TSubclassOf<class AFortPawn> AClass);
	void MakeBuildingActorsGod();
	void MakeAIsGod();
	void LoadMissionGenerator(const class FString& GeneratorName);
	void LoadMission(const class FString& MissionName);
	void LiveStreamingSelectedViewers(const TArray<class FString>& Names);
	void ListWeapons();
	void ListTraps();
	void ListSpawnGroups();
	void ListPlayerIDs();
	void ListMissions();
	void ListMissionGenerators();
	void ListGadgets();
	void ListEmotes();
	void ListConsumables();
	void ListCheats();
	void ListAthenaEmotes();
	void ListAmmo();
	void ListAIUtilities();
	void ListActiveEncounters();
	void KillPawns(TSubclassOf<class AFortPawn> AClass);
	bool IsUsingNewFrontEndCameraManagement();
	bool IsAutoSlottingEnabled();
	void HideHUDElement(const struct FGameplayTag& HUDElementTag);
	void HideGameplayCaptureUI();
	void GrantHeroTacticalAbility(const class FString& SupportHeroName, int32 Level);
	void GrantHeroSupportAbility(const class FString& SupportHeroName, int32 Level);
	void GoFast(float NewSpeed);
	void God();
	void GiveWood(int32 Amount);
	void GiveWeapons(class FName Tag);
	void GiveWeapon(const class FString& WeaponName, int32 RequestedLevel, int32 Count);
	void GiveUsefulThings(int32 NumOfUsefulThings);
	void GiveTrap(const class FString& TrapName, int32 RequestedLevel, int32 NumTrapsToGive);
	void GiveStone(int32 Amount);
	void GiveSpecificItem(const class FString& ItemPath, int32 ItemAmount, int32 ItemLevel);
	void GiveSBA(const class FString& StrategicBuildingName);
	void GiveResources(int32 Amount);
	void GivePickaxe(const class FString& PickName);
	void GiveMetal(int32 Amount);
	void GiveHeroSpecialization(const class FString& SpecializationName);
	void GiveGoodWeapons();
	void GiveGadgets(const class FString& GadgetName, int32 Quantity, int32 ItemLevel);
	void GiveGadget(const class FString& GadgetName, int32 ItemLevel);
	void GiveDeployablePlotAllIngredients(int32 NumIngredients);
	void GiveConsumable(const class FString& ConsumableName, int32 RequestedLevel, int32 Count);
	void GiveCheatInventory();
	void GiveBluGlo(int32 Amount);
	void GiveAthenaWeapons();
	void GiveAthenaTraps();
	void GiveAthenaFullKit();
	void GiveAthenaConsumables();
	void GiveAthenaAmmo();
	void GiveAmmo(const class FString& AmmoNameAndAmmount);
	void GiveAllWeapons();
	void GiveAllTraps(int32 NumItems);
	void GiveAllShotguns();
	void GiveAllRifles();
	void GiveAllPistols();
	void GiveAllMelee();
	void GiveAllIngredients(int32 NumIngredients);
	void GiveAllConsumables(int32 NumItems);
	void GetWTFRotations();
	void GetWorldLevel();
	void GetWorldDifficulty();
	void GetReplStat(enum class EFortReplicatedStat Stat);
	void GetPoiVolumeData();
	void GetPoiInfoForPlayer();
	void GetGameStat(const class FString& StatName);
	void GetAllReplStats();
	void GenerateTravelLogEntries(int32 Count);
	void GeneratePolysInPathingRange(float MaxDistance, float MinDistance);
	void GenerateMockMatchReport();
	void FortniteForceCharLOD(int32 LOD);
	void ForceUnlockHordeTiers(int32 MaxTierNumber);
	void ForceSetHeroRemoteCharacter(int32 PartyMemberIndex, bool bEnabled);
	void ForceServerShutdown(int32 ExitCode);
	void ForceSaveMissionStateAndWorld(const class FString& SaveFileName);
	void ForceHeroType(const class FString& HeroPersistentName);
	void ForceExternalRichPresenceUpdate();
	void ForceAthenaCosmeticItemInSlot(const class FString& TemplateId, enum class EAthenaCustomizationCategory Slot, int32 SlotIndex);
	void ForceAthenaCosmeticItem(const class FString& TemplateId);
	void ForceAILODs(enum class EFortAILODLevel InForcedAILODValue);
	void FakeKillHighlight();
	void FakeDownHighlight();
	void ExtAuthReset(bool bWipeDeviceAccountInfo);
	void ExecuteNewMissionGeneration(float DifficultyLevel, const class FString& GeneratorName);
	void EvolveHero();
	void EndLiveStreamingWindow();
	void EncounterTopUtilityPercentages();
	void EncounterSpawnProbabilities();
	void EncounterSetDifficultyLevel(float NewDifficulty);
	void EncounterInitialUtilities();
	void EncounterCurrentUtilities();
	void EnableSubtitles(bool bEnable);
	void EnableNewCustomizationPanel(bool bEnable);
	void EnableFixedTimeStep(int32 AsIfItWasFPS);
	void DumpGameStats(const class FString& FilterName);
	void DumpAppliedHomebaseEffectsWithCoreAttributes();
	void DumpAllActorsWithAssetTags();
	void DumpAllActiveMissions();
	void DumpActorsWithAssetTags(const class FString& TagList);
	void DumpActiveGameplayEffects();
	void DiscardAILogging();
	void DisableAI();
	void DevSkipTutorial();
	void DestroyAllScriptedPawns();
	void DebugUseDedicatedServer(bool bUse);
	void DebugThisAI();
	void DebugStructuralSupport();
	void DebugLoadingScreen(const class FString& MissionGen, bool bShowBullets);
	void DebugKickPlayerDueToInactivity();
	void DebugHotSpots();
	void DebugHideLoadingScreen();
	void DebugForceEnsure();
	void DebugBuildingGroups();
	void DebugBuildingDetection();
	void DebugAttributeModifiers();
	void DebugAttributeClear();
	void DebugAttribute(class FString* Attribute);
	void DebugAbilityTags();
	void DBNO();
	void CycleTheaterDisplayed();
	void CycleEncounterEQSQueryToDebug();
	void CycleCurrentEncounterToDebug();
	void CraftFree();
	void CountPlayerBuiltBuildingActors();
	void ConstructTileWorld(int32 MaxTiles, int32 X, int32 Y);
	void ClearRespawnTimer();
	void ClearMapFog();
	void ClearKeepSave();
	void ClearEncounterSpawnPointsCurve();
	void ClearEncounterSpawnPointsCap();
	void ClearEncounterSimulatedNumberOfPlayers();
	void ClearDebugSpawnAIGroupTags();
	void ClearDebugEncounterTags();
	void ChangeHeroClass(int32 Index);
	void BuildWith(const class FString& ResourceTypeAndOrLevel);
	void BuildFree();
	void BounceContainer();
	void BotStopDogpile();
	void BotStartDogpile();
	void BeautyMode();
	void Badass();
	void BackpackSetSize(int32 Size);
	void AutoSlotSurvivors();
	void AthenaGiveScoreTo(int32 PlayerStateIdx, int32 Score);
	void AthenaForceVictory(bool bVictory);
	void AthenaEndlessGame();
	void AthenaEmote(const class FString& EmoteName);
	bool AreContextMenusEnabled(class APlayerController* PC);
	void ApplyWeaponAlteration(const class FString& AlterationName);
	void ApplyGameplayModifier(const class FString& ModifierName);
	void AllowRespawn();
	void AddUtilityScore(int32 Amount);
	void AddKillFeedMessage();
	void AddDebugSpawnAIGroupTag(class FName Tag);
	void AddDebugEncounterTag(class FName Tag);
	void AddCombatScore(int32 Amount);
	void AddBuildingScore(int32 Amount);
	void AddAllScores(int32 Amount);
};

// 0xF8 (0x120 - 0x28)
// Class FortniteGame.FortChunkDownloadManager
class UFortChunkDownloadManager : public UObject
{
public:
	uint8                                        Pad_1B5F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PakChunk0Name;                                     // 0x30(0x10)(ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint32>                               RequiredChunkIds;                                  // 0x40(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	float                                        DownloadTimeoutSeconds;                            // 0x50(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B63[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAssumeAllDataPresent;                             // 0x58(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B64[0xC7];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortChunkDownloadManager* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class FortniteGame.FortCinematicCamera
class UFortCinematicCamera : public UFortCameraMode
{
public:
	uint8                                        Pad_1B68[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCinematicCamera* GetDefaultObj();

};

// 0x70 (0x398 - 0x328)
// Class FortniteGame.FortClientAnnouncement
class AFortClientAnnouncement : public AActor
{
public:
	uint8                                        Pad_1B70[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 AnnouncementID;                                    // 0x330(0x10)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               DisplayWidget;                                     // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToLive;                                        // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRetrigger;                                        // 0x34C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnAllClientsStopped;                       // 0x34D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAnnouncementChannel          Channel;                                           // 0x34E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B73[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Priority;                                          // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B74[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAnnouncementDelivery         ClientDeliveryStatus;                              // 0x355(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B75[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClientDeliveryTime;                                // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B76[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnUpdateAnnouncementData;                          // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAnnouncementStopped;                             // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerController*>         RecipientControllers;                              // 0x380(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B78[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortClientAnnouncement* GetDefaultObj();

	void StopClientAnnouncement();
	void OnClientAnnouncementStop();
	void OnClientAnnouncementStart();
	int32 GetPriority();
	void CancelClientAnnouncement();
};

// 0xE8 (0x480 - 0x398)
// Class FortniteGame.FortClientAnnouncement_Basic
class AFortClientAnnouncement_Basic : public AFortClientAnnouncement
{
public:
	struct FFortClientAnnouncementData_Basic     BasicData;                                         // 0x398(0xE8)(Edit, BlueprintVisible, Net, RepNotify, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortClientAnnouncement_Basic* GetDefaultObj();

	void SetTitleText(class FText TitleText);
	void SetIcon(struct FSlateBrush* Icon);
	void SetDisplayTime(float DisplayTime);
	void SetDetailText(class FText DetailText);
	void OnRep_BasicData(struct FFortClientAnnouncementData_Basic& PreviousBasicData);
};

// 0x0 (0x398 - 0x398)
// Class FortniteGame.FortClientAnnouncement_Cinematic
class AFortClientAnnouncement_Cinematic : public AFortClientAnnouncement
{
public:

	static class UClass* StaticClass();
	static class AFortClientAnnouncement_Cinematic* GetDefaultObj();

	void OnPlayerSkippedCutscene();
};

// 0x50 (0x3E8 - 0x398)
// Class FortniteGame.FortClientAnnouncement_Conversation
class AFortClientAnnouncement_Conversation : public AFortClientAnnouncement
{
public:
	uint8                                        Pad_1B89[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_Conversation ConversationData;                                  // 0x3A8(0x10)(Edit, BlueprintVisible, Net, NoDestructor, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class UAudioComponent*                       SpeechComponent;                                   // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoPlayConversation;                             // 0x3C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCurrentlyPlaying;                                 // 0x3C1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSentenceIndex;                              // 0x3C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortClientAnnouncement_Conversation* GetDefaultObj();

	void CurrentSentenceAudioFinished();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientAnnouncement_ConversationCodeInterface
class IFortClientAnnouncement_ConversationCodeInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortClientAnnouncement_ConversationCodeInterface* GetDefaultObj();

	void StopConversation();
	bool PlayConversationFromSentenceIndex(int32 StartingSentenceIndex);
	bool PlayConversationFromSentence(struct FFortConversationSentence& StartingSentence);
	bool PlayConversation();
	bool IsPlayingSentenceIndex(int32 SentenceIndex);
	bool IsPlayingSentence(struct FFortConversationSentence& Sentence);
	bool IsPlayingConversation(bool bCheckAudioComponent);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientAnnouncement_ConversationInterface
class IFortClientAnnouncement_ConversationInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortClientAnnouncement_ConversationInterface* GetDefaultObj();

	bool ShouldPlaySentence(struct FFortConversationSentence& NewSentence);
	void OnSentenceStarted(struct FFortConversationSentence& Sentence, int32 SentenceIndex);
	void OnSentenceFinished(struct FFortConversationSentence& Sentence, int32 SentenceIndex);
	void OnConversationStarted(const struct FFortConversationSentence& StartingSentence, int32 StartingSentenceIndex);
	void OnConversationFinished(const struct FFortConversationSentence& FinishingSentence, int32 FinishingSentenceSentenceIndex);
};

// 0x160 (0x4F8 - 0x398)
// Class FortniteGame.FortClientAnnouncement_Tutorial
class AFortClientAnnouncement_Tutorial : public AFortClientAnnouncement
{
public:
	uint8                                        Pad_1BCF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_Tutorial  TutorialData;                                      // 0x3A0(0x138)(Edit, BlueprintVisible, Net, RepNotify, ExposeOnSpawn, NativeAccessSpecifierPublic)
	float                                        AutoContinueDelay;                                 // 0x4D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BD0[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortClientAnnouncement_Tutorial* GetDefaultObj();

	void OnRep_TutorialData(struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData);
};

// 0x160 (0x548 - 0x3E8)
// Class FortniteGame.FortClientAnnouncement_TutorialConversation
class AFortClientAnnouncement_TutorialConversation : public AFortClientAnnouncement_Conversation
{
public:
	uint8                                        Pad_1BD3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_Tutorial  TutorialData;                                      // 0x3F0(0x138)(Edit, BlueprintVisible, Net, ExposeOnSpawn, NativeAccessSpecifierPublic)
	float                                        AutoContinueDelay;                                 // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BD4[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortClientAnnouncement_TutorialConversation* GetDefaultObj();

	void OnRep_TutorialData(struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientAnnouncement_TutorialInterface
class IFortClientAnnouncement_TutorialInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortClientAnnouncement_TutorialInterface* GetDefaultObj();

	void WaitForContinue(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void SetVAlign(enum class EVerticalAlignment VAlign);
	void SetTitleText(class FText NameText);
	void SetSystemText(class FText SystemText);
	void SetPadding(const struct FMargin& Padding);
	void SetNameText(class FText NameText);
	void SetLightboxEnabled(bool bLightboxEnabled);
	void SetLightboxDisableInputOnly(bool bLightboxDisableInputOnly);
	void SetHAlign(enum class EHorizontalAlignment HAlign);
	void SetDetailText(class FText NameText);
	void SetButtonEnabled(bool bButtonEnabled);
	void HideTutorialWidget();
};

// 0x18 (0x3B0 - 0x398)
// Class FortniteGame.FortClientAnnouncement_ZoneModifiers
class AFortClientAnnouncement_ZoneModifiers : public AFortClientAnnouncement
{
public:
	float                                        DisplayTime;                                       // 0x398(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientAnnouncementData_ZoneModifiers ModifiersData;                                     // 0x3A0(0x10)(Edit, BlueprintVisible, Net, ExposeOnSpawn, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortClientAnnouncement_ZoneModifiers* GetDefaultObj();

};

// 0x128 (0x450 - 0x328)
// Class FortniteGame.FortClientAnnouncementManager
class AFortClientAnnouncementManager : public AActor
{
public:
	uint8                                        Pad_1BF5[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortClientAnnouncement*>       ClientAnnouncements;                               // 0x350(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortClientAnnouncement*>       LocalClientAnnouncements;                          // 0x360(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGuid>                         CancelledAnnouncements;                            // 0x370(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortClientAnnouncementQueue          Channels[0x3];                                     // 0x380(0x30)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BF7[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortClientAnnouncementManager* GetDefaultObj();

	void OnRep_ClientAnnouncements(TArray<class AFortClientAnnouncement*>* PreviousClientAnnouncements);
	void OnRep_CancelledAnnouncements();
};

// 0x260 (0x288 - 0x28)
// Class FortniteGame.FortClientBotManager
class UFortClientBotManager : public UObject
{
public:
	uint8                                        Pad_1BF9[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          MissionEndTimerHandle;                             // 0x68(0x8)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFB[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasAttemptedAbandon;                              // 0x94(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMatchmaking;                                    // 0x95(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldPickRandomMap;                              // 0x96(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldRecordFPSCharts;                            // 0x97(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldRecordMemoryReports;                        // 0x98(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFPSRecordingStarted;                              // 0x9A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWatchingForCallStack;                             // 0x9B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ISelectedTheater;                                  // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ISelectedTile;                                     // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SelectedTileList;                                  // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMinimum;                       // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMaximum;                       // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumSkillPurchasesAttempted;                        // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSkillPurchaseAttempts;                          // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWorkerSlotsAttempted;                           // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorkerSlotAttempts;                             // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LobbyActionTimer;                                  // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenLobbyActions;                           // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWaitingForSkillTreePurchase;                      // 0xD8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWaitingForWorkerSlot;                             // 0xD9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C04[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LoopsSpentWaitingForFrontend;                      // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenStartButtonClicks;                      // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C05[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeSinceFriendInvitesSent;                        // 0xE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastMatchmakeTime;                                 // 0xEC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLoginCycleTime;                                // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MatchmakingStartTime;                              // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastChangedStateTime;                              // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastRandomTurnTime;                                // 0xFC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickLootTime;                                  // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickEnemyTime;                                 // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastEnemyKilledTime;                               // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBuildingKilledTime;                            // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastGoodInteraction;                               // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastCheckGoodTarget;                               // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C0C[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPawn*                             EnemyTarget;                                       // 0x168(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                           PickupTarget;                                      // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        BuildingTarget;                                    // 0x178(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        MissionTarget;                                     // 0x180(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        PrimaryMissionTarget;                              // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                AllMissionTargets;                                 // 0x190(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                ActiveMissionTargets;                              // 0x1A0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C0E[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ViewLocation;                                      // 0x250(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       MyPawn;                                            // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                ItemsToCheckForMaxStackSize;                       // 0x268(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C10[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientBotManager* GetDefaultObj();

};

// 0x28 (0x2B0 - 0x288)
// Class FortniteGame.FortClientBotManager_Smoke
class UFortClientBotManager_Smoke : public UFortClientBotManager
{
public:
	uint8                                        Pad_1C11[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientBotManager_Smoke* GetDefaultObj();

};

// 0x80 (0x308 - 0x288)
// Class FortniteGame.FortClientBotManagerAthena
class UFortClientBotManagerAthena : public UFortClientBotManager
{
public:
	uint8                                        Pad_1C12[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientBotManagerAthena* GetDefaultObj();

};

// 0x78 (0x380 - 0x308)
// Class FortniteGame.FortClientBotManagerAthena_Smoke
class UFortClientBotManagerAthena_Smoke : public UFortClientBotManagerAthena
{
public:
	uint8                                        Pad_1C16[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientBotManagerAthena_Smoke* GetDefaultObj();

};

// 0x8 (0x388 - 0x380)
// Class FortniteGame.FortClientBotManagerAthena_SanityCheck
class UFortClientBotManagerAthena_SanityCheck : public UFortClientBotManagerAthena_Smoke
{
public:
	uint8                                        Pad_1C18[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientBotManagerAthena_SanityCheck* GetDefaultObj();

};

// 0x68 (0x370 - 0x308)
// Class FortniteGame.FortClientBotManagerAthena_Teleporter
class UFortClientBotManagerAthena_Teleporter : public UFortClientBotManagerAthena
{
public:
	uint8                                        Pad_1C1A[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientBotManagerAthena_Teleporter* GetDefaultObj();

};

// 0x0 (0x288 - 0x288)
// Class FortniteGame.FortClientBotManagerMemoryReport
class UFortClientBotManagerMemoryReport : public UFortClientBotManager
{
public:

	static class UClass* StaticClass();
	static class UFortClientBotManagerMemoryReport* GetDefaultObj();

};

// 0x78 (0x658 - 0x5E0)
// Class FortniteGame.FortDynamicBuilder
class AFortDynamicBuilder : public ABuildingActor
{
public:
	class UFortBuildingInstructions*             BuildingInstructions;                              // 0x5E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSelectiveDestruction;                             // 0x5E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoCollisionFail;                                  // 0x5E9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreMissionActors;                              // 0x5EA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShrinkAndDestroyEffect;                           // 0x5EB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugDrawBounds;                                  // 0x5EC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePlayerBuildAnimations;                         // 0x5ED(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C20[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BuildingConstructionTime;                          // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFDynamicBuildOrder               BuildOrder;                                        // 0x5F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseBuild;                                     // 0x5F5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C21[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideOwnerPersistentId;                         // 0x5F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C22[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentIndex;                                      // 0x640(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C24[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingActor*>                AllBuiltActors;                                    // 0x648(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortDynamicBuilder* GetDefaultObj();

};

// 0x0 (0x658 - 0x658)
// Class FortniteGame.FortClientDynamicBuilder
class AFortClientDynamicBuilder : public AFortDynamicBuilder
{
public:

	static class UClass* StaticClass();
	static class AFortClientDynamicBuilder* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortClientEventData
class UFortClientEventData : public UDataAsset
{
public:
	TArray<struct FFortClientEventName>          ClientEventNames;                                  // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortClientEventData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortClientEventInterface
class IFortClientEventInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortClientEventInterface* GetDefaultObj();

	void BlueprintCustomHandleClientEvent(class UObject* EventSource, class UObject* EventFocus, struct FFortClientEvent& ClientEvent);
};

// 0xA8 (0xD0 - 0x28)
// Class FortniteGame.FortClientPilot_Base
class UFortClientPilot_Base : public UClientPilotComponent
{
public:
	uint8                                        Pad_1C31[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPawn*                             EnemyTarget;                                       // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPickup*                           PickupTarget;                                      // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        BuildingTarget;                                    // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortClientPilot_Base* GetDefaultObj();

};

// 0x120 (0x1F0 - 0xD0)
// Class FortniteGame.FortClientPilot_GameplayBase
class UFortClientPilot_GameplayBase : public UFortClientPilot_Base
{
public:
	uint8                                        Pad_1C35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastRandomTurnTime;                                // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickLootTime;                                  // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastPickEnemyTime;                                 // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastEnemyKilledTime;                               // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastBuildingKilledTime;                            // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastGoodInteraction;                               // 0xE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastCheckGoodTarget;                               // 0xEC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C37[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ViewLocation;                                      // 0x1A8(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       MyPawn;                                            // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                ItemsToCheckForMaxStackSize;                       // 0x1C0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C3A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          MissionEndTimerHandle;                             // 0x1E8(0x8)(NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortClientPilot_GameplayBase* GetDefaultObj();

};

// 0x60 (0x250 - 0x1F0)
// Class FortniteGame.FortClientPilot_GameplayAthena
class UFortClientPilot_GameplayAthena : public UFortClientPilot_GameplayBase
{
public:
	uint8                                        Pad_1C3C[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilot_GameplayAthena* GetDefaultObj();

};

// 0x78 (0x2C8 - 0x250)
// Class FortniteGame.FortClientPilot_BaseSmokeAthena
class UFortClientPilot_BaseSmokeAthena : public UFortClientPilot_GameplayAthena
{
public:
	uint8                                        Pad_1C3D[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilot_BaseSmokeAthena* GetDefaultObj();

};

// 0x40 (0x110 - 0xD0)
// Class FortniteGame.FortClientPilot_FrontendBase
class UFortClientPilot_FrontendBase : public UFortClientPilot_Base
{
public:
	bool                                         bWaitingForSkillTreePurchase;                      // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWaitingForWorkerSlot;                             // 0xD1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C3E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSkillPurchasesAttempted;                        // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSkillPurchaseAttempts;                          // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumWorkerSlotsAttempted;                           // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxWorkerSlotAttempts;                             // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LoopsSpentWaitingForFrontend;                      // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C3F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LobbyActionTimer;                                  // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenLobbyActions;                           // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasAttemptedAbandon;                              // 0xFC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C41[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastMatchmakeTime;                                 // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastLoginCycleTime;                                // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C43[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilot_FrontendBase* GetDefaultObj();

};

// 0x30 (0x140 - 0x110)
// Class FortniteGame.FortClientPilot_FrontendAthena
class UFortClientPilot_FrontendAthena : public UFortClientPilot_FrontendBase
{
public:
	uint8                                        Pad_1C46[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilot_FrontendAthena* GetDefaultObj();

};

// 0x28 (0x138 - 0x110)
// Class FortniteGame.FortClientPilot_FrontendCampaign
class UFortClientPilot_FrontendCampaign : public UFortClientPilot_FrontendBase
{
public:
	bool                                         bShouldPickRandomMap;                              // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C48[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ISelectedTheater;                                  // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ISelectedTile;                                     // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C49[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SelectedTileList;                                  // 0x120(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMinimum;                       // 0x130(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomZoneDifficultyMaximum;                       // 0x134(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortClientPilot_FrontendCampaign* GetDefaultObj();

};

// 0x40 (0x230 - 0x1F0)
// Class FortniteGame.FortClientPilot_GameplayCampaign
class UFortClientPilot_GameplayCampaign : public UFortClientPilot_GameplayBase
{
public:
	uint8                                        Pad_1C4C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABuildingActor*                        MissionTarget;                                     // 0x200(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        PrimaryMissionTarget;                              // 0x208(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                AllMissionTargets;                                 // 0x210(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ABuildingActor*>                ActiveMissionTargets;                              // 0x220(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortClientPilot_GameplayCampaign* GetDefaultObj();

};

// 0x0 (0x2C8 - 0x2C8)
// Class FortniteGame.FortClientPilot_LongSmokeAthena
class UFortClientPilot_LongSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	static class UClass* StaticClass();
	static class UFortClientPilot_LongSmokeAthena* GetDefaultObj();

};

// 0x8 (0x2D0 - 0x2C8)
// Class FortniteGame.FortClientPilot_QuickSmokeAthena
class UFortClientPilot_QuickSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:
	uint8                                        Pad_1C4D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilot_QuickSmokeAthena* GetDefaultObj();

};

// 0x68 (0x2B8 - 0x250)
// Class FortniteGame.FortClientPilot_TeleporterAthena
class UFortClientPilot_TeleporterAthena : public UFortClientPilot_GameplayAthena
{
public:
	uint8                                        Pad_1C50[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilot_TeleporterAthena* GetDefaultObj();

};

// 0xB8 (0x130 - 0x78)
// Class FortniteGame.FortClientPilotBlackboard
class UFortClientPilotBlackboard : public UClientPilotBlackboard
{
public:
	uint8                                        Pad_1C51[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientPilotBlackboard* GetDefaultObj();

};

// 0x1D8 (0x3A0 - 0x1C8)
// Class FortniteGame.FortLocalPlayer
class UFortLocalPlayer : public ULocalPlayer
{
public:
	uint8                                        Pad_1C52[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortOnlineAccount*                    FortOnlineAccount;                                 // 0x1F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C54[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortRewardReport                     CachedRewardReport;                                // 0x210(0x70)(NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerScoreReport>        CachedScoreReports;                                // 0x280(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortClientSettingsRecord*             ClientSettingsRecord;                              // 0x290(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C55[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bControllerAttached;                               // 0x29A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C56[0xDD];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      PlatformUID;                                       // 0x378(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortLocalPlayer* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class FortniteGame.FortGenericRecord
class UFortGenericRecord : public UObject
{
public:
	uint8                                        Pad_1C58[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGenericRecord* GetDefaultObj();

};

// 0x448 (0x518 - 0xD0)
// Class FortniteGame.FortClientSettingsRecord
class UFortClientSettingsRecord : public UFortGenericRecord
{
public:
	uint8                                        Pad_1C5C[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HUDScale;                                          // 0x160(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadLookSensitivity;                            // 0x164(0x8)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetingSlow;                                     // 0x16C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScopedSlow;                                        // 0x170(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadTargetingSlow;                              // 0x174(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadScopedSlow;                                 // 0x178(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivity;                                  // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivityX;                                 // 0x180(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseSensitivityY;                                 // 0x184(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchLookSensitivitySetting;                       // 0x188(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchTargetingSlow;                                // 0x18C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchScopedSlow;                                   // 0x190(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TouchVerticalMultiplier;                           // 0x194(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ControllerPlatform;                                // 0x198(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputKBMPresetNameForCampaign;                     // 0x1A8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputKBMPresetNameForAthena;                       // 0x1B8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputPresetNameForCampaign;                        // 0x1C8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputPresetNameForAthena;                          // 0x1D8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputTemplatePresetNameForCampaign;                // 0x1E8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InputTemplatePresetNameForAthena;                  // 0x1F8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        XboxSafeZone;                                      // 0x208(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C61[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PendingCulture;                                    // 0x210(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertAcceptAndBack;                              // 0x220(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C62[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortActionKeyMapping>         UserActionBindings;                                // 0x228(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ESubGame, struct FUserActionBindings> UserBindingsPerSubGame;                            // 0x238(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortActionKeyMapping>         DisabledActionBindings;                            // 0x288(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortActionKeyMapping>         CustomGamepadActionBindings;                       // 0x298(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bInvertedLook;                                     // 0x2A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInvertedLookMobile;                               // 0x2A9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bToggleSprint;                                     // 0x2AA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSprintCancelsReload;                              // 0x2AB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTapInteractEnabled;                               // 0x2AC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetingToggleable;                              // 0x2AD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoEquipBetterItems;                             // 0x2AE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAimAssistEnabled;                                 // 0x2AF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTouchAimAssistEnabled;                            // 0x2B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceFeedbackEnabled;                             // 0x2B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseFirstPersonCamera;                             // 0x2B2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGamepadAimAssist;                              // 0x2B3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGamepadEditModeAimAssist;                      // 0x2B4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseGamepadAutoRun;                                // 0x2B5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFocusOnFirstBuildingPieceWhenQuickbarSwapped;     // 0x2B6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNewFocusOnFirstBuildingPieceWhenQuickbarSwapped;  // 0x2B7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena; // 0x2B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNewFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena; // 0x2B9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurboBuild;                                       // 0x2BA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTurboBuildMobile;                                 // 0x2BB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoChangeMaterial;                               // 0x2BC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoChangeMaterialMobile;                         // 0x2BD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseTapToShoot;                                    // 0x2BE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoOpenDoors;                                    // 0x2BF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoOpenDoorsNonMobile;                           // 0x2C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoPickupWeapons;                                // 0x2C1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoPickupWeaponsConsolePC;                       // 0x2C2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUnlockConsoleFPS;                                 // 0x2C3(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bConsoleFPS60;                                     // 0x2C4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C68[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, bool>              UserHUDVisibiltyMappings;                          // 0x2C8(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, bool>              UserHUDDefaultMappings;                            // 0x318(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EPartyType                        LastPartyType;                                     // 0x368(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLastLeaderInvitesOnly;                            // 0x369(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLastLeaderFriendsOnly;                            // 0x36A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAudioVolumesInitialized;                          // 0x36B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MusicVolume;                                       // 0x36C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoundFXVolume;                                     // 0x370(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DialogVolume;                                      // 0x374(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChatVolume;                                        // 0x378(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CinematicsVolume;                                  // 0x37C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableSubtitles;                                  // 0x380(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChat;                                  // 0x381(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChatIOS;                               // 0x382(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChat3D;                                // 0x383(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVoiceChatPTT;                               // 0x384(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnablePeripheralLighting;                         // 0x385(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowViewerCount;                                  // 0x386(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStreamerMode;                                     // 0x387(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplayRecordingEnabled;                           // 0x388(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLargeTeamReplayRecordingEnabled;                  // 0x389(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShadowPlayHighlightsEnabled;                      // 0x38A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowHeroHeadAccessories;                          // 0x38B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowHeroBackpack;                                 // 0x38C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowGlobalChatEnabled;                            // 0x38D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C6A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialGammaValue;                                 // 0x390(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialUseTapToShoot;                             // 0x394(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoOpenDoors;                             // 0x395(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoPickupWeapons;                         // 0x396(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialAutoPickupWeaponsConsolePC;                // 0x397(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStWQuickbarUpdated;                               // 0x398(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EColorBlindMode                   ColorBlindMode;                                    // 0x399(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C6B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ColorBlindStrength;                                // 0x39C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHearingImpairedMode;                              // 0x3A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EColorBlindMode                   InitialColorBlindMode;                             // 0x3A1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C6D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialColorBlindStrength;                         // 0x3A4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreGamepadInput;                               // 0x3A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitialIgnoreGamepadInput;                        // 0x3A9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C6E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SelectedRegionId;                                  // 0x3B0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PrevSavedRegion;                                   // 0x3C0(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                LastKnownBestRegionId;                             // 0x3D0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CrossplayPreference;                               // 0x3E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C70[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<enum class EFortInventoryCustomFilter>  CustomInventoryFilterSet;                          // 0x3E8(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasSeenBRTrailerMovie;                            // 0x438(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasSeenStWTrailerMovie;                           // 0x439(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowAudioInBackground;                           // 0x43A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsePowerSavingMode;                               // 0x43B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHidePerkRecombobulatorHelp;                       // 0x43C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDirty;                                            // 0x43D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C72[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bSaveToCloud : 1;                                  // Mask: 0x1, PropSize: 0x10x440(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1BA : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1C73[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECloudFileState                   CloudFileState;                                    // 0x444(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C74[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       bDisableCloudSave;                                 // 0x448(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastRequestSaveCount;                              // 0x44C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LastAttemptedSaveCount;                            // 0x450(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C76[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       LastSaveAttemptTime;                               // 0x458(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                       LastSuccessSaveTime;                               // 0x460(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	double                                       NextCloudSaveTime;                                 // 0x468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C77[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortClientSettingsRecord* GetDefaultObj();

};

// 0x38 (0xB0 - 0x78)
// Class FortniteGame.FortMetadataItem
class UFortMetadataItem : public UFortItem
{
public:
	int32                                        Level;                                             // 0x78(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C7A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InstanceId;                                        // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TemplateId;                                        // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Quantity;                                          // 0xA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMetadataItemDefinition*           ItemDefinition;                                    // 0xA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortMetadataItem* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class FortniteGame.FortCloudSaveItem
class UFortCloudSaveItem : public UFortMetadataItem
{
public:
	struct FFortCloudSaveInfo                    Cloud_save_info;                                   // 0xB0(0x18)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCloudSaveItem* GetDefaultObj();

};

// 0x0 (0x2C0 - 0x2C0)
// Class FortniteGame.FortMetadataItemDefinition
class UFortMetadataItemDefinition : public UFortItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortMetadataItemDefinition* GetDefaultObj();

};

// 0x8 (0x2C8 - 0x2C0)
// Class FortniteGame.FortCloudSaveItemDefinition
class UFortCloudSaveItemDefinition : public UFortMetadataItemDefinition
{
public:
	int32                                        ContentVersion;                                    // 0x2C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C80[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCloudSaveItemDefinition* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortCodeTokenItem
class UFortCodeTokenItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortCodeTokenItem* GetDefaultObj();

};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortCodeTokenItemDefinition
class UFortCodeTokenItemDefinition : public UFortAccountItemDefinition
{
public:
	class FString                                RedemptionCodeRule;                                // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RedemptionCodeGroup;                               // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ECodeTokenPlatform>        AllowedPlatforms;                                  // 0x350(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EItemProfileType                  ProfileType;                                       // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C82[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCodeTokenItemDefinition* GetDefaultObj();

};

// 0x20 (0x100 - 0xE0)
// Class FortniteGame.FortCollectedResourceItem
class UFortCollectedResourceItem : public UFortAccountItem
{
public:
	double                                       Stored_value;                                      // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Last_updated;                                      // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   PayoutResource;                                    // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortCollectedResourceItem* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortCollectedResourceItemDefinition
class UFortCollectedResourceItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortCollectedResourceItemDefinition* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortCollectionBookCategory
class UFortCollectionBookCategory : public UObject
{
public:
	class FName                                  CategoryDataRowName;                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SortPriority;                                      // 0x30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C85[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ChildrenPageIds;                                   // 0x38(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCollectionBookCategory* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortCollectionBookData
class UFortCollectionBookData : public UDataAsset
{
public:
	class UDataTable*                            PageCategoryData;                                  // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            PageData;                                          // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SectionData;                                       // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SlotData;                                          // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SlotSourceData;                                    // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            XPWeightData;                                      // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           SlotRarityFactorData;                              // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BookXPData;                                        // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortItemQuantityPair>         UnslotCost;                                        // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 UnslotCatalysts;                                   // 0x80(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCollectionBookData* GetDefaultObj();

	void GetPageIdsFromCategoryId(class FName CategoryId, TArray<class FName>* PageIds);
};

// 0x210 (0x238 - 0x28)
// Class FortniteGame.FortCollectionBookManager
class UFortCollectionBookManager : public UObject
{
public:
	UMulticastDelegateProperty_                  OnSlottedItemOperationComplete;                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSlotItemComplete;                                // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRewardClaimed;                                   // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUnslotItemComplete;                              // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResearchItemComplete;                            // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CB2[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPendingSlottedItemOperation> PendingSlottedItems;                               // 0x168(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortPendingSlottedItemOperation> PendingUpdatedItems;                               // 0x178(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CB4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UFortMcpProfileCollectionBook*> ProfileTable;                                      // 0x190(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSet<class FName>                            ActivePages;                                       // 0x1E0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CB5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCollectionBookManager* GetDefaultObj();

	bool UnSlotItem(class UFortAccountItem* Item);
	bool SlotItem(class UFortAccountItem* Item, class FName SlotId);
	bool PurchaseItem(class UFortAccountItem* Item);
	void PopulateCollectionBookRewards(TArray<struct FFortCollectionBookRewards>* OutAvailableRewards);
	class UFortItem* GetItemInSlot(class FName SlotId);
	float GetBookXPPercentToNextLevel(int32 CurrentLevel, int32 NewXP);
	int32 GetBookTotalXPToNextLevel(int32 CurrentLevel);
	void ClaimReward(struct FFortCollectionBookRewards& RewardToClaim, int32 RewardIndex);
	bool CanSlotItem(class UFortAccountItem* AccountItem, bool bOnlyAllowIfSlotEmpty, class FName& OutSlotId);
	int32 CalculatePageXp(class FName PageId);
	int32 CalculateBookXp();
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortCollectionBookPage
class UFortCollectionBookPage : public UObject
{
public:
	uint8                                        Pad_1CBF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TemplateId;                                        // 0x30(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                InstanceId;                                        // 0x40(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PageRowName;                                       // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCollectionBookState          State;                                             // 0x58(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CC0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortCollectionBookSectionState> SectionStates;                                     // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortCollectionBookPage* GetDefaultObj();

	enum class EFortCollectionBookState GetSectionState(class FName SectionId);
	enum class EFortCollectionBookState GetPageState();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortCollectionBookSection
class UFortCollectionBookSection : public UObject
{
public:
	class FName                                  SectionDataRowName;                                // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCollectionBookPage*               OwningPage;                                        // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCollectionBookSection* GetDefaultObj();

};

// 0x20 (0x110 - 0xF0)
// Class FortniteGame.FortCollisionAudioComponent
class UFortCollisionAudioComponent : public UActorComponent
{
public:
	TArray<struct FFortCollisionAudioTriggerData> CollisionSounds;                                   // 0xF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CheckCollisionLeashInterval;                       // 0x100(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CC5[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCollisionAudioComponent* GetDefaultObj();

	void OnCollision(struct FVector& HitLocation, struct FVector& HitNormalImpulse, bool* OutResult, float* OutMagnitude);
};

// 0x878 (0xBA0 - 0x328)
// Class FortniteGame.FortCombatManager
class AFortCombatManager : public AActor
{
public:
	uint8                                        Pad_1CD3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReplicatedCombatEventHeat[0x16];                   // 0x330(0x58)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CombatEventHeat[0x16];                             // 0x388(0x58)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CombatFactors[0xC];                                // 0x3E0(0x30)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTotalHeat;                                  // 0x410(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaximumTotalHeat;                                  // 0x414(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxHeatEver;                                       // 0x418(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CD7[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCombatEventData                      Events[0x16];                                      // 0x438(0x420)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FCombatFactorData                     Factors[0xC];                                      // 0x858(0x2A0)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CD8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCombatThresholdData                  Thresholds[0x4];                                   // 0xB00(0xA0)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortCombatManager* GetDefaultObj();

	void OnThresholdChange(enum class EFortCombatThresholds OldThreshold, enum class EFortCombatThresholds NewThreshold);
	void OnRep_CombatEventHeat();
	float GetEventHeatPercentTotal(enum class EFortCombatEvents CombatEvent);
	float GetEventHeatPercent(enum class EFortCombatEvents CombatEvent);
};

// 0x0 (0x130 - 0x130)
// Class FortniteGame.FortConsole
class UFortConsole : public UConsole
{
public:

	static class UClass* StaticClass();
	static class UFortConsole* GetDefaultObj();

};

// 0x1A0 (0x1D0 - 0x30)
// Class FortniteGame.FortConstructionSet
class UFortConstructionSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            BuildSpeed;                                        // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RepairSpeed;                                       // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BuildCost;                                         // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RepairCost;                                        // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxBuildLevel;                                     // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BuildingSkill;                                     // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapArmSpeed;                                      // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapReloadSpeed;                                   // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapBaseDamage;                                    // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapMaxDurability;                                 // 0x150(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapDiceCritChance;                                // 0x170(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapDiceCritMultiplier;                            // 0x190(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TrapHealingSource;                                 // 0x1B0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortConstructionSet* GetDefaultObj();

	void OnRep_TrapReloadSpeed();
	void OnRep_TrapMaxDurability();
	void OnRep_TrapHealingSource();
	void OnRep_TrapDiceCritMultiplier();
	void OnRep_TrapDiceCritChance();
	void OnRep_TrapBaseDamage();
	void OnRep_TrapArmSpeed();
	void OnRep_RepairSpeed();
	void OnRep_RepairCost();
	void OnRep_MaxBuildLevel();
	void OnRep_BuildSpeed();
	void OnRep_BuildingSkill();
	void OnRep_BuildCost();
};

// 0x370 (0xF20 - 0xBB0)
// Class FortniteGame.FortConstructorBASE
class AFortConstructorBASE : public ABuildingProp
{
public:
	uint8                                        Pad_1D07[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBASEGameplayEffect>           BASEBuildingApplicationEffects;                    // 0xBB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>           BASEFriendlyApplicationEffects;                    // 0xBC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>           BASEFriendlyApplicationTrapEffects;                // 0xBD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FBASEGameplayEffect>           BASEEnemyApplicationEffects;                       // 0xBE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InBASETag;                                         // 0xBF8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NodesToAffect;                                     // 0xC00(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseLevel;                                         // 0xC04(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPatternBASEEffect>            BASEEffectPatterns;                                // 0xC08(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortBaseWeaponStats                  DamageStats;                                       // 0xC18(0x138)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortDamageSet*                        DamageAttributeSet;                                // 0xD50(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D0D[0x1C8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortConstructorBASE* GetDefaultObj();

	void StopBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void StartBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void OnPlaced(class UAbilitySystemComponent* InstigatorAbilitySystemComponent);
	void OnPawnRemovedFromBase(class AFortPawn* Pawn);
	void OnPawnAddedToBase(class AFortPawn* Pawn);
	void OnBasePawnDied(class AFortPawn* Pawn);
	void OnBasePawnDestroyed(class AFortPawn* Pawn);
	void OnBaseCollisionUnTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBaseCollisionTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void GetResourceAmountsBasedOnUpgradeTier(int32 TierOneUpgradeAmount, int32 TierTwoUpgradeAmount, int32 TierThreeUpgradeAmount, int32* WoodResult, int32* StoneResult, int32* MetalResult);
	TArray<class ABuildingSMActor*> GetBuildingActorsInBase();
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortConsumableAccountItem
class UFortConsumableAccountItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortConsumableAccountItem* GetDefaultObj();

	bool CanActivateOnSelf();
	bool CanActivateOnOthers();
};

// 0x48 (0x770 - 0x728)
// Class FortniteGame.FortConsumableItemDefinition
class UFortConsumableItemDefinition : public UFortWorldItemDefinition
{
public:
	TArray<struct FConsumeEffectData>            ConsumeEffects;                                    // 0x728(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimMontage>           UseAnimation;                                      // 0x738(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UseTime;                                           // 0x760(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequiresMissingHealth;                            // 0x764(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1D21[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortConsumableItemDefinition* GetDefaultObj();

	class UAnimMontage* GetUseAnimation();
	float GetHealthRestored(int32 ItemLevel);
	float GetAnimPlayRate();
	void ConsumeItem(struct FGameplayEventData& EventData);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortConsumableItemDefinitionTooltip
class UFortConsumableItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortConsumableItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWorldItemTooltip
class UFortWorldItemTooltip : public UFortItemTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWorldItemTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortConsumableItemTooltip
class UFortConsumableItemTooltip : public UFortWorldItemTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortConsumableItemTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x88 (0xA80 - 0x9F8)
// Class FortniteGame.FortDecoItemDefinition
class UFortDecoItemDefinition : public UFortWeaponItemDefinition
{
public:
	TSoftClassPtr<class ABuildingActor>          BlueprintClass;                                    // 0x9F8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortDecoPreview>        PlacementPreviewClass;                             // 0xA20(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridSnapSizeOverride;                              // 0xA48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationAngleIncrement;                            // 0xA4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlacementType                    PlacementTypeOverride;                             // 0xA50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bForceIgnoreOverlapTest : 1;                       // Mask: 0x1, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceIgnoreBuildingOverlaps : 1;                  // Mask: 0x2, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithCriticalActors : 1;            // Mask: 0x4, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithStructuralGridActors : 1;      // Mask: 0x8, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIgnoreCollisionWithFortStaticMeshActors : 1;      // Mask: 0x10, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableLocationLerpWhilePlacing : 1;              // Mask: 0x20, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableRotationLerpWhilePlacing : 1;              // Mask: 0x40, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDisableScaleLerpWhilePlacing : 1;                 // Mask: 0x80, PropSize: 0x10xA54(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAttachWhenPlacing : 1;                            // Mask: 0x1, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowPlacementOnWorldGeometry : 1;                // Mask: 0x2, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowPlacementOnBuildings : 1;                    // Mask: 0x4, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroySmallObjectsWhenPlaced : 1;                // Mask: 0x8, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bConsumeWhenPlaced : 1;                            // Mask: 0x10, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCancelToolWhenPlaced : 1;                         // Mask: 0x20, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCancelAbilityOnUnequip : 1;                       // Mask: 0x40, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequiresPlayerPlaceableAttachmentActors : 1;      // Mask: 0x80, PropSize: 0x10xA55(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseRelativeCameraRotation : 1;                    // Mask: 0x1, PropSize: 0x10xA56(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowStairsWhenAttachingToFloors : 1;             // Mask: 0x2, PropSize: 0x10xA56(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSnapYawToHorizontalAxes : 1;                      // Mask: 0x4, PropSize: 0x10xA56(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllowAnyFloorPlacement : 1;                       // Mask: 0x8, PropSize: 0x10xA56(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRequiresPermissionToEditWorld : 1;                // Mask: 0x10, PropSize: 0x10xA56(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1D6 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1DDC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UBuildingEditModeMetadata>> AllowedShapes;                                     // 0xA58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UBuildingEditModeMetadata>> AllowedPlayerBuiltShapes;                          // 0xA68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	int32                                        MaxPlacementDistance;                              // 0xA78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DDF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDecoItemDefinition* GetDefaultObj();

	bool ShouldUseRelativeCameraRotation();
	bool ShouldSnapYawToHorizontalAxes();
	bool ShouldIgnoreCollisionWithStructuralGridActors();
	bool ShouldIgnoreCollisionWithFortStaticMeshActors();
	bool ShouldIgnoreCollisionWithCriticalActors();
	bool ShouldForceIgnoreOverlapTest();
	bool ShouldForceIgnoreBuildingOverlaps();
	bool ShouldDisableScaleLerpWhilePlacing();
	bool ShouldDisableRotationLerpWhilePlacing();
	bool ShouldDisableLocationLerpWhilePlacing();
	bool ShouldDestroySmallObjectsWhenPlaced();
	bool ShouldConsumeWhenPlaced();
	bool ShouldCancelToolWhenPlaced();
	bool ShouldCancelAbilityOnUnequip();
	bool ShouldAttachWhenPlacing();
	bool ShouldAllowStairsWhenAttachingToFloors();
	bool ShouldAllowPlacementOnWorldGeometry();
	bool ShouldAllowPlacementOnBuildings();
	bool ShouldAllowAnyFloorPlacement();
	bool RequiresPlayerPlaceableAttachmentActors();
	bool RequiresPermissionToEditWorld();
	float GetRotationAngleIncrement();
	enum class EPlacementType GetPlacementTypeOverride();
	TSubclassOf<class AFortDecoPreview> GetPlacementPreviewClass();
	int32 GetMaxPlacementDistance();
	float GetGridSnapSizeOverride();
	TSubclassOf<class ABuildingActor> GetBlueprintClass();
};

// 0x10 (0xA90 - 0xA80)
// Class FortniteGame.FortTrapItemDefinition
class UFortTrapItemDefinition : public UFortDecoItemDefinition
{
public:
	struct FRotator                              KnockbackDirOverride;                              // 0xA80(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bKnockBackUsingPawnDir;                            // 0xA8C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DE8[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTrapItemDefinition* GetDefaultObj();

};

// 0x20 (0xAB0 - 0xA90)
// Class FortniteGame.FortContextTrapItemDefinition
class UFortContextTrapItemDefinition : public UFortTrapItemDefinition
{
public:
	class UFortTrapItemDefinition*               FloorTrap;                                         // 0xA90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*               CeilingTrap;                                       // 0xA98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTrapItemDefinition*               WallTrap;                                          // 0xAA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DEA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortContextTrapItemDefinition* GetDefaultObj();

};

// 0x178 (0x1A8 - 0x30)
// Class FortniteGame.FortControlResistanceSet
class UFortControlResistanceSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_1DF1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            ControlResistance;                                 // 0x38(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxControlResistance;                              // 0x58(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControlResistanceRegenRate;                        // 0x78(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControlResistanceRegenDelay;                       // 0x98(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControlResistanceRegenThreshold;                   // 0xB8(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            KnockbackThreshold;                                // 0xD8(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            KnockbackMultiplier;                               // 0xF8(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpactDamageResistance;                            // 0x118(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpactDamageMultiplier;                            // 0x138(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ImpactDamage;                                      // 0x158(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DF6[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortControlResistanceSet* GetDefaultObj();

	void OnRep_MaxControlResistance();
	void OnRep_ControlResistance();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortConversation
class UFortConversation : public UDataAsset
{
public:
	TArray<struct FFortConversationSentence>     Sentences;                                         // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortConversation* GetDefaultObj();

};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortConversionControlItemDefinition
class UFortConversionControlItemDefinition : public UFortAccountItemDefinition
{
public:
	class FString                                LootTierGroup;                                     // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ConversionPointsToTierCosts;                       // 0x340(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bConsumedOnConversion;                             // 0x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E18[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RewardName;                                        // 0x358(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortConversionControlItemDefinition* GetDefaultObj();

	bool GetTierFromSacrificePoints(int32 SacrificePoints, enum class EFortRarity* CalculatedTier);
	class FText GetRewardName();
	int32 GetRequiredItemQuantity(int32 SacrificePoints);
	class UFortAccountItemDefinition* GetRequiredItemDefinition();
	struct FGameplayTagContainer GetRequiredCatalysts();
	int32 GetPointsForTier(enum class EFortRarity InTier);
	enum class EFortRarity GetMaxConversionTier();
	enum class EFortRarity GetFirstConversionTier();
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortCosmeticVariant
class UFortCosmeticVariant : public UObject
{
public:
	struct FGameplayTag                          VariantChannelTag;                                 // 0x28(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  VariantChannelName;                                // 0x30(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ActiveVariantTag;                                  // 0x48(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCosmeticVariant* GetDefaultObj();

	struct FGameplayTagContainer GetAllVariantTags();
};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortCosmeticCharacterPartVariant
class UFortCosmeticCharacterPartVariant : public UFortCosmeticVariant
{
public:
	TArray<struct FPartVariantDef>               PartOptions;                                       // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCosmeticCharacterPartVariant* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortCosmeticItemMarkupTable
class UFortCosmeticItemMarkupTable : public UDataAsset
{
public:
	TArray<class UDataTable*>                    SetDescriptions;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UDataTable*>                    MarkupTagDescriptions;                             // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCosmeticItemMarkupTable* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class FortniteGame.FortCosmeticMaterialVariant
class UFortCosmeticMaterialVariant : public UFortCosmeticVariant
{
public:
	TArray<struct FMaterialVariantDef>           MaterialOptions;                                   // 0x50(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCosmeticMaterialVariant* GetDefaultObj();

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortCosmeticNumericalVariant
class UFortCosmeticNumericalVariant : public UFortCosmeticVariant
{
public:
	int32                                        DefaultStartingNumeric;                            // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinNumericalValue;                                 // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumbericalValue;                                // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E25[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ZerosDigitParamName;                               // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TensDigitParamName;                                // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UMaterialInterface>> MaterialsToAlter;                                  // 0x70(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortCosmeticNumericalVariant* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class FortniteGame.FortCrowdManager
class UFortCrowdManager : public UCrowdManager
{
public:
	uint8                                        Pad_1E2A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCrowdManager* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortCurrencyItem
class UFortCurrencyItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortCurrencyItem* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortCurrencyItemDefinition
class UFortCurrencyItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortCurrencyItemDefinition* GetDefaultObj();

};

// 0x8 (0xB80 - 0xB78)
// Class FortniteGame.FortCustomizableAbilityDecoTool
class AFortCustomizableAbilityDecoTool : public AFortAbilityDecoTool
{
public:
	bool                                         bExecuteToolAbilityOnPress;                        // 0xB78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E44[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortCustomizableAbilityDecoTool* GetDefaultObj();

	void ServerReleaseTrigger();
	void ServerReleaseSecondaryFire();
	void ServerPressTrigger();
	void ServerPressSecondaryFire();
	void ExecuteDecoAbility();
	void BPServerReleaseSecondaryFire();
	void BPServerPressSecondaryFire();
	void BPReleaseTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPReleaseSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPPressTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPPressSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPOnUnEquip();
	void BPOnSetDecoObjectPreview(class AFortDecoHelper* FortDecoHelper);
	void BPOnEquip(class AFortWeapon* OldWeapon);
};

// 0x70 (0x98 - 0x28)
// Class FortniteGame.FortCustomizationAssetLoader
class UFortCustomizationAssetLoader : public UObject
{
public:
	struct FFortCustomizationAssetsToLoad        CurrentAssetsToLoad;                               // 0x28(0x20)(Transient, NativeAccessSpecifierPrivate)
	struct FFortCustomizationAssetsToLoad        PendingAssetsToLoad;                               // 0x48(0x20)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E4A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       AllLoadedAssets;                                   // 0x80(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E4B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortCustomizationAssetLoader* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortDailyRewardScheduleDefinitions
class UFortDailyRewardScheduleDefinitions : public UDataAsset
{
public:
	TArray<struct FFortDailyRewardScheduleDefinition> Schedules;                                         // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortDailyRewardScheduleDefinitions* GetDefaultObj();

};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortTokenType
class UFortTokenType : public UFortAccountItemDefinition
{
public:
	TSoftClassPtr<class AFortScriptedAction>     ScriptedAction;                                    // 0x330(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           NodeTintColour;                                    // 0x358(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bPercentageRepresentation;                         // 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemProfileType                  ProfileType;                                       // 0x381(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E4C[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTokenType* GetDefaultObj();

};

// 0x0 (0x390 - 0x390)
// Class FortniteGame.FortDailyRewardScheduleTokenDefinition
class UFortDailyRewardScheduleTokenDefinition : public UFortTokenType
{
public:

	static class UClass* StaticClass();
	static class UFortDailyRewardScheduleTokenDefinition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDamageableActorInterface
class IFortDamageableActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortDamageableActorInterface* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class FortniteGame.FortDamageFormulaExecutionCalculation
class UFortDamageFormulaExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:
	uint8                                        Pad_1E56[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDamageFormulaExecutionCalculation* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortIndicator
class UFortIndicator : public UObject
{
public:
	struct FVector                               RelativeLocation;                                  // 0x28(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistance;                                       // 0x34(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMoveWithPawnState;                                // 0x38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E5D[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortIndicator* GetDefaultObj();

	void OnParentActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
};

// 0xB8 (0x108 - 0x50)
// Class FortniteGame.FortMiniMapIndicator
class UFortMiniMapIndicator : public UFortIndicator
{
public:
	uint8                                        Pad_1E60[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMiniMapIndicator* GetDefaultObj();

};

// 0x80 (0x188 - 0x108)
// Class FortniteGame.FortMiniMapPingIndicator
class UFortMiniMapPingIndicator : public UFortMiniMapIndicator
{
public:
	uint8                                        Pad_1E63[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMiniMapPingIndicator* GetDefaultObj();

};

// 0x0 (0x188 - 0x188)
// Class FortniteGame.FortDamageMiniMapIndicator
class UFortDamageMiniMapIndicator : public UFortMiniMapPingIndicator
{
public:

	static class UClass* StaticClass();
	static class UFortDamageMiniMapIndicator* GetDefaultObj();

};

// 0x1E8 (0x518 - 0x330)
// Class FortniteGame.FortDamageNumbersActor
class AFortDamageNumbersActor : public AFortClientOnlyActor
{
public:
	float                                        ComponentLifespan;                                 // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E72[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           MeshesByElement[0x5];                              // 0x338(0x28)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           CritBuildingImpactMesh;                            // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           MeshesByScoreCategory[0x3];                        // 0x368(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PlayerMaterialParameterName;                       // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PlayerMaterialParameterValue;                      // 0x388(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitPlayerColor;                            // 0x38C(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          StandardHitPlayerColor;                            // 0x39C(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitBuildingColor;                          // 0x3AC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitEnemyColor;                             // 0x3BC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          StandardHitColor;                                  // 0x3CC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CriticalHitShieldColor;                            // 0x3DC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ShieldHitColor;                                    // 0x3EC(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E74[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ColorParameterName;                                // 0x400(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AnimationLifespanParameterName;                    // 0x408(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  IsCriticalHitParameterName;                        // 0x410(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpacingPercentageForOnes;                          // 0x418(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E76[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PositionParameterNames;                            // 0x420(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceFromCameraBeforeDoublingSize;              // 0x430(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CriticalHitSizeMultiplier;                         // 0x434(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FontXSize;                                         // 0x438(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FontYSize;                                         // 0x43C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NumberOfNumberRotations;                           // 0x440(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ScaleRotationAngleParameterNames;                  // 0x448(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          DurationParameterNames;                            // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MaxScoreNumberDistance;                            // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPooledDamageNumberComponents         PooledComponentsByElement[0x5];                    // 0x470(0x50)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FPooledDamageNumberComponents         PooledComponentsCritBuildingImpact;                // 0x4C0(0x10)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FPooledDamageNumberComponents         PooledComponentsByScoreCategory[0x3];              // 0x4D0(0x30)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLiveDamageNumberComponent>    LiveComponents;                                    // 0x500(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E7D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortDamageNumbersActor* GetDefaultObj();

	void SetMaterialParameters(struct FFortDamageNumberInfo& NewDamageNumberInfo, struct FTransform& CameraTransform, struct FVector& NumberLocation);
	void OnNewDamageNumber(struct FFortDamageNumberInfo& NewDamageNumberInfo);
};

// 0x200 (0x230 - 0x30)
// Class FortniteGame.FortDamageSet
class UFortDamageSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            OutgoingBaseDamage;                                // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingBaseEnvironmentalDamage;                   // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingBaseImpactDamage;                          // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingAbilityDamage;                             // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            OutgoingBaseAbilityDamageMultiplier;               // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            ZoneCritMultiplier;                                // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            DiceCritChance;                                    // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            DiceCritMultiplier;                                // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            KnockbackMagnitude;                                // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            KnockbackZAngle;                                   // 0x150(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            StunTime;                                          // 0x170(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            WeaponSkill;                                       // 0x190(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            CritRating;                                        // 0x1B0(0x20)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            MaxMeleeComboLevel;                                // 0x1D0(0x20)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            ShieldDamageScale;                                 // 0x1F0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortGameplayAttributeData            HealthDamageScale;                                 // 0x210(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDamageSet* GetDefaultObj();

	void OnRep_ZoneCritMultiplier();
	void OnRep_WeaponSkill();
	void OnRep_StunTime();
	void OnRep_ShieldDamageScale();
	void OnRep_OutgoingBaseImpactDamage();
	void OnRep_OutgoingBaseEnvironmentalDamage();
	void OnRep_OutgoingBaseDamage();
	void OnRep_OutgoingBaseAbilityDamageMultiplier();
	void OnRep_OutgoingAbilityDamage();
	void OnRep_KnockbackZAngle();
	void OnRep_KnockbackMagnitude();
	void OnRep_HealthDamageScale();
	void OnRep_DiceCritMultiplier();
	void OnRep_DiceCritChance();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDamageSourceInterface
class IFortDamageSourceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortDamageSourceInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDateTimeLibrary
class UFortDateTimeLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortDateTimeLibrary* GetDefaultObj();

	class FText GetTimespanAsText(struct FTimespan& Timespan, bool bShowSeconds, enum class ETimespanAsTextFormat FormatType);
	struct FDateTime GetMcpRelativeUtcNow(class AFortPlayerController* FortPC);
};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortDeathCameraMode
class UFortDeathCameraMode : public UFortCameraMode
{
public:
	float                                        FOV;                                               // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeToTrackTarget;                                 // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TrackToTargetSpeed;                                // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EB1[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDeathCameraMode* GetDefaultObj();

};

// 0x168 (0x490 - 0x328)
// Class FortniteGame.FortDecoHelper
class AFortDecoHelper : public AActor
{
public:
	class AFortDecoPreview*                      DecoPreview;                                       // 0x328(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingActor>            PlacementActorClass;                               // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortDecoTool>          DecoTool;                                          // 0x338(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecoToolReach;                                     // 0x340(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBuildingAttachmentType           CurrentAttachmentType;                             // 0x344(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlacementType                    CurrentPlacementType;                              // 0x345(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1EB6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDecoItemDefinition*               DecoItemDefinition;                                // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LocationData[0x2];                                 // 0x350(0x18)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              RelativeRotationData[0x2];                         // 0x368(0x18)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              AbsoluteRotationData[0x2];                         // 0x380(0x18)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ScaleData[0x2];                                    // 0x398(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDecoPlacementState                   PlacementInfo;                                     // 0x3A0(0x80)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bInFallbackPosition;                               // 0x420(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallbackTinyScale;                                 // 0x424(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDecoPlacementQueryResults    CanPlaceState;                                     // 0x428(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EB9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  CustomPlacementText;                               // 0x430(0x18)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        DesiredRelativeRotation;                           // 0x448(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DirectionChange;                                   // 0x44C(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridSnapSize;                                      // 0x458(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              FreeFloorPlacementRelativeRotationOffset;          // 0x45C(0xC)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EBD[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortDecoHelper* GetDefaultObj();

};

// 0x168 (0x490 - 0x328)
// Class FortniteGame.FortDecoPreview
class AFortDecoPreview : public AActor
{
public:
	enum class EBuildingAttachmentType           FallbackAttachmentType;                            // 0x328(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlacementType                    FallbackPlacementType;                             // 0x329(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EE1[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     PreviewPlacementMaterial;                          // 0x330(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            MotionBounceCurve;                                 // 0x358(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CanBePlacedMaterialScalarParam;                    // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ValidPlacementScalarParam;                         // 0x388(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InvalidPlacementScalarParam;                       // 0x38C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InverseMovementVectorMaterialParam;                // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementEffectScale;                               // 0x398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EE4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  InverseOuterScaleVectorParam;                      // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InverseInnerScaleVectorParam;                      // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WorldSpacePivotVectorParam;                        // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DiffuseTextureParam;                               // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FreePlacementOffset;                               // 0x3C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimeline                             BounceTimeline;                                    // 0x3C8(0x98)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      PreviewMIDs;                                       // 0x460(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               DirectionChange;                                   // 0x470(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               WorldSpacePivot;                                   // 0x47C(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortDecoHelper*                       ParentDecoHelper;                                  // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortDecoPreview* GetDefaultObj();

	void SetVectorParameterValueOnAllPreviewMIDs(class FName ParamName, struct FLinearColor& ParamValue);
	void SetScalarParameterValueOnAllPreviewMIDs(class FName ParamName, float ParamValue);
	void OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace);
	void OnUpdateScale(float Scale, struct FVector& InWorldSpacePivot);
	void OnInitializeDecoPreview(class ABuildingActor* NewBuildingActor, class UFortDecoItemDefinition* NewDecoItemDefinition);
	void OnBounceMotionUpdate(float VectorScale);
	class UTexture* GetTextureParameterValueFromMeshComponent(class UMeshComponent* MeshComp, int32 ElementIdx, class FName ParamName);
	class UMaterialInstanceDynamic* CreatePreviewMID(class UMaterialInterface* OverrideParentMaterial);
};

// 0x0 (0x490 - 0x490)
// Class FortniteGame.FortDecoPreview_ComponentHarvester
class AFortDecoPreview_ComponentHarvester : public AFortDecoPreview
{
public:

	static class UClass* StaticClass();
	static class AFortDecoPreview_ComponentHarvester* GetDefaultObj();

};

// 0x8 (0x498 - 0x490)
// Class FortniteGame.FortDecoPreview_GenericBuildingSMActor
class AFortDecoPreview_GenericBuildingSMActor : public AFortDecoPreview
{
public:
	class UStaticMeshComponent*                  PrimaryMeshComponent;                              // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortDecoPreview_GenericBuildingSMActor* GetDefaultObj();

};

// 0x8 (0x4A0 - 0x498)
// Class FortniteGame.FortDecoPreview_GenericTrap
class AFortDecoPreview_GenericTrap : public AFortDecoPreview_GenericBuildingSMActor
{
public:
	class UStaticMeshComponent*                  TrapRangeMeshComponent;                            // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortDecoPreview_GenericTrap* GetDefaultObj();

};

// 0x0 (0x490 - 0x490)
// Class FortniteGame.FortDecoPreview_MeshHarvester
class AFortDecoPreview_MeshHarvester : public AFortDecoPreview_ComponentHarvester
{
public:

	static class UClass* StaticClass();
	static class AFortDecoPreview_MeshHarvester* GetDefaultObj();

};

// 0x0 (0xB50 - 0xB50)
// Class FortniteGame.FortTrapTool
class AFortTrapTool : public AFortDecoTool
{
public:

	static class UClass* StaticClass();
	static class AFortTrapTool* GetDefaultObj();

};

// 0x8 (0xB58 - 0xB50)
// Class FortniteGame.FortDecoTool_ContextTrap
class AFortDecoTool_ContextTrap : public AFortTrapTool
{
public:
	class UFortContextTrapItemDefinition*        ContextTrapItemDefinition;                         // 0xB50(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortDecoTool_ContextTrap* GetDefaultObj();

};

// 0x18 (0x420 - 0x408)
// Class FortniteGame.FortDefenderAnimInstance
class UFortDefenderAnimInstance : public UFortAIAnimInstance
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x408(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EEE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bShouldWalkRightFootForward : 1;                   // Mask: 0x1, PropSize: 0x10x40C(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1E8 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1EEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedAdjustedPlayRate;                             // 0x410(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuthoredJogSpeed;                                  // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuthoredWalkSpeed;                                 // 0x418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EF0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDefenderAnimInstance* GetDefaultObj();

};

// 0x28 (0x120 - 0xF8)
// Class FortniteGame.FortDefenderItem
class UFortDefenderItem : public UFortCharacter
{
public:
	TArray<class FString>                        Alterations;                                       // 0xF8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortAlterationItemDefinition*> AlterationInstances;                               // 0x108(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1EF8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDefenderItem* GetDefaultObj();

	enum class EFortDefenderSubtype GetDefenderSubtype();
};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortDefenderItemDefinition
class UFortDefenderItemDefinition : public UFortCharacterType
{
public:
	TArray<struct FGameplayEffectApplicationInfo> CombinedStatGEs;                                   // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  AppearanceOverrideName;                            // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortAIPawn>             PawnClass;                                         // 0x358(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDefenderItemDefinition* GetDefaultObj();

	struct FGameplayTag GetDefenderSubtypeTag();
	enum class EFortDefenderSubtype GetDefenderSubtype();
};

// 0x10 (0xD8 - 0xC8)
// Class FortniteGame.FortDeployableBaseCloudSaveItem
class UFortDeployableBaseCloudSaveItem : public UFortCloudSaveItem
{
public:
	struct FFortTierProgression                  Tier_progression;                                  // 0xC8(0x10)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDeployableBaseCloudSaveItem* GetDefaultObj();

};

// 0x18 (0x2E0 - 0x2C8)
// Class FortniteGame.FortDeployableBaseCloudSaveItemDefinition
class UFortDeployableBaseCloudSaveItemDefinition : public UFortCloudSaveItemDefinition
{
public:
	struct FGuid                                 SaveFilenameGUID;                                  // 0x2C8(0x10)(Edit, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F02[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDeployableBaseCloudSaveItemDefinition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortDeployableBaseLibrary
class UFortDeployableBaseLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortDeployableBaseLibrary* GetDefaultObj();

	void UpdateDeployableBaseTierProgressionForPlayers(class UObject* WorldContextObject, class UFortTieredCollectionLayout* CollectionLayout, int32 TierDefeated);
	void SetupDeployableBaseCombatZoneInventoriesOnPlayers(class UObject* WorldContextObject, TArray<class FName>& TierGroups, TArray<class AFortPlayerController*>& PlayerControllers);
	void SetDeployableBaseMatchJoinability(class UObject* WorldContextObject, bool bMatchJoinable);
	void ResetDeployableBaseHordePlayerInventories(class UObject* WorldContextObject);
	void OnPreHordeTierStart(class UObject* WorldContextObject, int32 Tier, int32 ModifierRRVSeed);
	bool IsWorldItemDefValidToPersistForDeployableBasePlayerInventory(class UFortWorldItemDefinition* ItemDefinition);
	void GrantPlayersCompletedWaveRewards(class UObject* WorldContextObject, int32 Tier, int32 Wave, int32 NumberOfPlayers, TArray<class ADeployableBaseCore*>& TargetCores, TArray<class ADeployableBaseCore*>& AllCores, struct FFortTierCollectionLayoutOutput& CollectionData, TArray<class FName>& TierGroups);
	void GetTieredModifierSet(class FName TieredModifierSetName, TArray<struct FTieredModifierSetData>* OutModifierSetData);
	class AFortMission* GetPrimaryHordeMission(class UObject* WorldContextObject);
	enum class EHordeTierStartStatus GetHordeTierStartStatus(class UObject* WorldContextObject);
	struct FGameDifficultyInfo GetGameDifficultyInfo(class FName& RowName);
	void ForceRestartDeployableBasePlayers(class UObject* WorldContextObject, bool bRestartInvulnerable);
	void ForceDeployableBaseHordePlayersToResetAndRespawn(class UObject* WorldContextObject);
	void ForceClearAllDefenders(class UObject* WorldContextObject);
	void BroadcastHordeTierComplete(class UObject* WorldContextObject, enum class EFortCompletionResult Result);
	void ApplyTieredModifierSet(class UObject* WorldContextObject, TArray<struct FTieredModifierSetData>& ModifierSetData, int32 Tier, int32 WaveNum, TArray<struct FActiveGameplayModifierHandle>* OutAppliedModifiers);
};

// 0x2C8 (0x5F0 - 0x328)
// Class FortniteGame.FortDeployableBaseManager
class AFortDeployableBaseManager : public AInfo
{
public:
	uint8                                        bRestrictedBuildingActive : 1;                     // Mask: 0x1, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBusyWithPlotActions : 1;                          // Mask: 0x2, PropSize: 0x10x328(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyAllBuildingPiecesOnReload : 1;             // Mask: 0x4, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1EB : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1F21[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumPiecesDestroyedOnZoneCleanupPerUpdate;          // 0x32C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumEnvPiecesRestoredPerUpdate;                     // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDeployableBasesReadOnly;                          // 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDeployableBaseUseType            DeployableBaseUseType;                             // 0x335(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F22[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActiveTieredCollectionLayoutArray    ActiveTieredCollectionLayouts;                     // 0x338(0xC8)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBasePlotsSpawned;                      // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLocalPlayerEntersDeployablePlotEvent;            // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLocalPlayerLeavesDeployablePlotEvent;            // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnLocalDeployablePlotInventoryChangedEvent;        // 0x430(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FDeployableBaseArray                  DeployableBaseArray;                               // 0x440(0xC0)(Net, Transient, NativeAccessSpecifierPrivate)
	class UFortDeployableBaseCloudSaveItemDefinition* DeployableBaseItemDefinition;                      // 0x500(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class ADeployableBasePlot>       DeployableBasePlotClass;                           // 0x508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDeployableBaseSkillTreeUnlocks*   SupportedSkillTreeBasedUnlocks;                    // 0x510(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NumExpectedPlots;                                  // 0x518(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F23[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPendingDeployableBaseUser>    PendingUsers;                                      // 0x520(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPendingDeployableManagerAction> PendingDeployableManagerActions;                   // 0x530(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FEnvironmentBuildingRestorationRecord> EnvironmentActorsRequiringRestoration;             // 0x540(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        bCaptureEnvironmentActorsForRestoration : 1;       // Mask: 0x1, PropSize: 0x10x550(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bWorldInitialized : 1;                             // Mask: 0x2, PropSize: 0x10x550(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bKeepBasesOnLogout : 1;                            // Mask: 0x4, PropSize: 0x10x550(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1EC : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1F24[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FUniqueNetIdRepl>              PlayersPendingPlotReset;                           // 0x558(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F25[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortDeployableBaseManager* GetDefaultObj();

	void SetKeepDeployableBasesOnLogout(bool bInKeepBasesOnLogout);
	void ReloadAllPlots();
	bool GetTierOutputForSelectedTier(int32 Tier, class UFortTieredCollectionLayout* Layout, struct FFortTierCollectionLayoutOutput* Output);
	int32 GetHighestDefeatedTierForPlayerAndLayout(const struct FUniqueNetIdRepl& PlayerID, class UFortTieredCollectionLayout* Layout);
	enum class EDeployableBaseUseType GetDeployableBaseUseType();
	class ADeployableBasePlot* GetDeployableBasePlotFromLocation(struct FVector& Location);
	class AFortDeployableBaseManager* GetCurrent(class UObject* WorldContextObject);
	void GetAvailableTiers(TArray<struct FAvailableTierLayout>* OutAvailableTiers);
	void GetAllDeployableBasePlots(TArray<class ADeployableBasePlot*>* OutDeployableBasePlots);
	void BroadcastHordeWaveStinger(enum class EHordeWaveStingerType StingerType);
};

// 0x278 (0x5A0 - 0x328)
// Class FortniteGame.FortPickup
class AFortPickup : public AActor
{
public:
	uint8                                        Pad_1F2B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUsePickupWidget;                                  // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponsCanBeAutoPickups;                          // 0x331(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoUpgradeWeapons;                               // 0x332(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F2C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPickup;                                          // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPickupAttempted;                                 // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bRandomRotation;                                   // 0x358(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F2D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortItemEntry                        PrimaryPickupItemEntry;                            // 0x360(0xD0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortItemEntry>                MultiItemPickupEntries;                            // 0x430(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortPickupLocationData               PickupLocationData;                                // 0x440(0x60)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint32                                       PickupSourceTypeFlags;                             // 0x4A0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OptionalOwnerID;                                   // 0x4A4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 OptionalMissionGuid;                               // 0x4A8(0x10)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItem*                             PrimaryPickupDummyItem;                            // 0x4B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPickupEffect>      PickupEffectBlueprint;                             // 0x4C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     TouchCapsule;                                      // 0x4C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          MovementComponent;                                 // 0x4D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPickedUp;                                         // 0x4D8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSplitOnPickup;                                    // 0x4D9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTossedFromContainer;                              // 0x4DA(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCombinePickupsWhenTossCompletes;                  // 0x4DB(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bServerStoppedSimulation;                          // 0x4DC(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientUseInterpolationOnly;                       // 0x4DD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ServerImpactSoundFlash;                            // 0x4DE(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F2E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastLandedSoundPlayTime;                           // 0x4E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F2F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       DroppedLoopingSoundComp;                           // 0x4E8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPawn*                             PawnWhoDroppedPickup;                              // 0x4F0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CachedSpecialActorIdx;                             // 0x4F8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F30[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialActorID;                                    // 0x500(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSimpleMiniMapIndicator*           MiniMapIndicator;                                  // 0x508(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortSlateHUDIndicator*                HUDLabel;                                          // 0x510(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F32[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPickup* GetDefaultObj();

	void TossPickup(const struct FVector& FinalLocation, class AFortPawn* ItemOwner, int32 OverrideMaxStackCount, bool bToss);
	bool PickedUp();
	void OnServerStopCallback(struct FHitResult& Hit);
	void OnRep_TossedFromContainer();
	void OnRep_ServerStoppedSimulation();
	void OnRep_ServerImpactSoundFlash();
	void OnRep_PrimaryPickupItemEntry();
	void OnRep_PickupOwnerData();
	void OnRep_PickupLocationData();
	void OnRep_bPickedUp();
	bool GetInteractText(class FText* InteractText);
	bool GetInteractErrorText(class FText* InteractErrorText);
	class FText GetDisplayName();
};

// 0x28 (0x5C8 - 0x5A0)
// Class FortniteGame.FortDeployableBasePickup
class AFortDeployableBasePickup : public AFortPickup
{
public:
	struct FUniqueNetIdRepl                      AssociatedPlotOccupant;                            // 0x5A0(0x28)(Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortDeployableBasePickup* GetDefaultObj();

};

// 0x18 (0xE8 - 0xD0)
// Class FortniteGame.FortDeployableBaseRecord
class UFortDeployableBaseRecord : public UFortGenericRecord
{
public:
	TArray<struct FFortActorRecord>              Actors;                                            // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        bNeedsFullActorSave : 1;                           // Mask: 0x1, PropSize: 0x10xE0(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F33[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDeployableBaseRecord* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class FortniteGame.FortDeployableBaseSkillTreeUnlocks
class UFortDeployableBaseSkillTreeUnlocks : public UDataAsset
{
public:
	TArray<struct FFortTaggedDeployableBasePlotExpansionUnlock> PlotSizeUnlocks;                                   // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> NeighborhoodLootGrantUnlocks;                      // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> CombatZoneStartLootGrantUnlocks;                   // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> CombatZoneWaveCompleteLootGrantUnlocks;            // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDeployableBaseSkillTreeUnlocks* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortDeveloperSettings
class UFortDeveloperSettings : public UDeveloperSettings
{
public:

	static class UClass* StaticClass();
	static class UFortDeveloperSettings* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortNotificationHandler
class UFortNotificationHandler : public UObject
{
public:
	UMulticastDelegateProperty_                  OnNotificationCleared;                             // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bNotificationCleared;                              // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F37[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNotificationHandler* GetDefaultObj();

	void NotificationShown();
	class UUserWidget* CreateWidget(class APlayerController* OwningPlayer);
	void ClearNotification();
};

// 0x160 (0x1A0 - 0x40)
// Class FortniteGame.FortDialogNotificationHandler
class UFortDialogNotificationHandler : public UFortNotificationHandler
{
public:
	UMulticastDelegateProperty_                  OnAccepted;                                        // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDeclined;                                        // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTimedOut;                                        // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FFortDialogDescription                DialogDescription;                                 // 0x70(0x130)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDialogNotificationHandler* GetDefaultObj();

	void Timeout();
	void SetDialogDescription(const struct FFortDialogDescription& InDialogDescription);
	void OnActionComplete__DelegateSignature();
	void Decline();
	void Accept();
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortDifficultyOption
class UFortDifficultyOption : public UObject
{
public:
	uint8                                        Pad_1F3A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   CostAndAvailability;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOption* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortDifficultyOptionCategory
class UFortDifficultyOptionCategory : public UDataAsset
{
public:
	bool                                         bIsRequired;                                       // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsStatic;                                         // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasValueRange;                                    // 0x32(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F3C[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategory* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter
class UFortDifficultyOptionCategoryEncounter : public UFortDifficultyOptionCategory
{
public:

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Breathers
class UFortDifficultyOptionCategoryEncounter_Breathers : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_Breathers>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_Breathers* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionChange
class UFortDifficultyOptionCategoryEncounter_DirectionChange : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_DirectionChange>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_DirectionChange* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionNumber
class UFortDifficultyOptionCategoryEncounter_DirectionNumber : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_DirectionNumber>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_DirectionNumber* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Distance
class UFortDifficultyOptionCategoryEncounter_Distance : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_Distance>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_Distance* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_IntensityCurveSequence
class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_IntensityCurveSequence>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_ModifierTags
class UFortDifficultyOptionCategoryEncounter_ModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_ModifierTags>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_ModifierTags* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_PawnNumberCap
class UFortDifficultyOptionCategoryEncounter_PawnNumberCap : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_PawnNumberCap>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_PawnNumberCap* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnGroupProgression
class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression : public UFortDifficultyOptionCategoryEncounter
{
public:
	TSubclassOf<class UFortDifficultyOptionEncounter_SpawnGroupProgression> SpawnGroupProgression;                             // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPawns
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnLimitPawns>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPoints
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnLimitPoints>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsBurst
class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnPointsBurst>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsCurve
class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnPointsCurve>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier
class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnPointsMultiplier>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnTiming
class UFortDifficultyOptionCategoryEncounter_SpawnTiming : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_SpawnTiming>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_SpawnTiming* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Time
class UFortDifficultyOptionCategoryEncounter_Time : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_Time>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_Time* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_TimedModifierTags
class UFortDifficultyOptionCategoryEncounter_TimedModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_TimedModifierTags>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_TimedModifierTags* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment
class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_UtilitiesAdjustment>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesFree
class UFortDifficultyOptionCategoryEncounter_UtilitiesFree : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_UtilitiesFree>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_UtilitiesFree* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesLocked
class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<TSubclassOf<class UFortDifficultyOptionEncounter_UtilitiesLocked>> Options;                                           // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class FortniteGame.FortDifficultyOptionCategoryMission
class UFortDifficultyOptionCategoryMission : public UFortDifficultyOptionCategory
{
public:

	static class UClass* StaticClass();
	static class UFortDifficultyOptionCategoryMission* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class FortniteGame.FortDifficultyOptionEncounter
class UFortDifficultyOptionEncounter : public UFortDifficultyOption
{
public:
	uint8                                        Pad_1F45[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter* GetDefaultObj();

};

// 0x38 (0x80 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_Breathers
class UFortDifficultyOptionEncounter_Breathers : public UFortDifficultyOptionEncounter
{
public:
	bool                                         bUseBreathers;                                     // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F46[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  LowPlayerPerformanceBreatherTimeSecondsCurve;      // 0x50(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  NormalPlayerPerformanceBreatherTimeSecondsCurve;   // 0x60(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  HighPlayerPerformanceBreatherTimeSecondsCurve;     // 0x70(0x10)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_Breathers* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_DirectionChange
class UFortDifficultyOptionEncounter_DirectionChange : public UFortDifficultyOptionEncounter
{
public:
	bool                                         bChangeDirectionsOnRest;                           // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F48[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_DirectionChange* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_DirectionNumber
class UFortDifficultyOptionEncounter_DirectionNumber : public UFortDifficultyOptionEncounter
{
public:
	int32                                        NumberOfDirections;                                // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F49[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_DirectionNumber* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_Distance
class UFortDifficultyOptionEncounter_Distance : public UFortDifficultyOptionEncounter
{
public:
	float                                        MinSpawnDistance;                                  // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpawnDistance;                                  // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_Distance* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_IntensityCurveSequence
class UFortDifficultyOptionEncounter_IntensityCurveSequence : public UFortDifficultyOptionEncounter
{
public:
	class UFortIntensityCurveSequence*           CurveSequence;                                     // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_IntensityCurveSequence* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_ModifierTags
class UFortDifficultyOptionEncounter_ModifierTags : public UFortDifficultyOptionEncounter
{
public:
	struct FGameplayTagContainer                 ModifierTags;                                      // 0x48(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_ModifierTags* GetDefaultObj();

};

// 0x18 (0x60 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_PawnNumberCap
class UFortDifficultyOptionEncounter_PawnNumberCap : public UFortDifficultyOptionEncounter
{
public:
	struct FFortEncounterPawnNumberCaps          PawnCapsPerPlayerCount;                            // 0x48(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_PawnNumberCap* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnGroupProgression
class UFortDifficultyOptionEncounter_SpawnGroupProgression : public UFortDifficultyOptionEncounter
{
public:
	class UFortAISpawnGroupProgressionInfo*      SpawnGroupProgression;                             // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnGroupProgression* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPawns
class UFortDifficultyOptionEncounter_SpawnLimitPawns : public UFortDifficultyOptionEncounter
{
public:
	int32                                        PawnNumberLimit;                                   // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F4C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnLimitPawns* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPoints
class UFortDifficultyOptionEncounter_SpawnLimitPoints : public UFortDifficultyOptionEncounter
{
public:
	float                                        SpawnPointsPercentageLimit;                        // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F4E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnLimitPoints* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsBurst
class UFortDifficultyOptionEncounter_SpawnPointsBurst : public UFortDifficultyOptionEncounter
{
public:
	float                                        BurstSpawnPointsPercentage;                        // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F50[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnPointsBurst* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsCurve
class UFortDifficultyOptionEncounter_SpawnPointsCurve : public UFortDifficultyOptionEncounter
{
public:
	class UFortSpawnPointsPercentageCurveSequence* CurveSequence;                                     // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnPointsCurve* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsMultiplier
class UFortDifficultyOptionEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionEncounter
{
public:
	struct FFloatInterval                        MultiplierRange;                                   // 0x48(0x8)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnPointsMultiplier* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_SpawnTiming
class UFortDifficultyOptionEncounter_SpawnTiming : public UFortDifficultyOptionEncounter
{
public:
	float                                        SpawnIntervalSeconds;                              // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F54[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_SpawnTiming* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_Time
class UFortDifficultyOptionEncounter_Time : public UFortDifficultyOptionEncounter
{
public:
	float                                        EncounterTimeSeconds;                              // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F55[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_Time* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_TimedModifierTags
class UFortDifficultyOptionEncounter_TimedModifierTags : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortAIEncounterTimedModifierTags> TimedModifierTags;                                 // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_TimedModifierTags* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesAdjustment
class UFortDifficultyOptionEncounter_UtilitiesAdjustment : public UFortDifficultyOptionEncounter
{
public:
	float                                        UtilitiesAdjustmentIntervalSeconds;                // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F56[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_UtilitiesAdjustment* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesFree
class UFortDifficultyOptionEncounter_UtilitiesFree : public UFortDifficultyOptionEncounter
{
public:
	int32                                        NumFreeUtilitySlots;                               // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F57[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_UtilitiesFree* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesLocked
class UFortDifficultyOptionEncounter_UtilitiesLocked : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortEncounterLockedUtility>   LockedUtilities;                                   // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionEncounter_UtilitiesLocked* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortDifficultyOptionMission
class UFortDifficultyOptionMission : public UFortDifficultyOption
{
public:

	static class UClass* StaticClass();
	static class UFortDifficultyOptionMission* GetDefaultObj();

};

// 0xB8 (0xE8 - 0x30)
// Class FortniteGame.FortDifficultyOptionSetEncounter
class UFortDifficultyOptionSetEncounter : public UDataAsset
{
public:
	enum class EFortEncounterPacingMode          PacingMode;                                        // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F58[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence* IntensityCurveSequenceCategory;                    // 0x38(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve* SpawnPointsPercentageCurveSequenceCategory;        // 0x40(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst* SpawnPointsBurstCategory;                          // 0x48(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Breathers* BreathersCategory;                                 // 0x50(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier* SpawnPointsMultiplierCategory;                     // 0x58(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_PawnNumberCap* PawnNumberCapCategory;                             // 0x60(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnTiming* OptionalSpawnTimingCategory;                       // 0x68(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterSpawnLimitType      SpawnLimitMode;                                    // 0x70(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F59[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints* SpawnPointsLimitCategory;                          // 0x78(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns* PawnLimitCategory;                                 // 0x80(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterUtilitiesMode       UtilitiesMode;                                     // 0x88(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked* LockedUtilitiesCategory;                           // 0x90(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesFree* FreeUtilitiesCategory;                             // 0x98(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment* UtilitiesAdjustmentCategory;                       // 0xA0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortEncounterSpawnLocationPlacementMode SpawnLocationPlacementMode;                        // 0xA8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F5D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortDifficultyOptionCategoryEncounter_DirectionNumber* DirectionNumberCategory;                           // 0xB0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_DirectionChange* DirectionChangeCategory;                           // 0xB8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Distance* DistanceCategory;                                  // 0xC0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression* SpawnGroupProgressionCategory;                     // 0xC8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_Time* TimeCategory;                                      // 0xD0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_ModifierTags* OptionalModifierTagsCategory;                      // 0xD8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDifficultyOptionCategoryEncounter_TimedModifierTags* OptionalMiniBossStartTimedTagsCategory;            // 0xE0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionSetEncounter* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortDifficultyOptionSetMission
class UFortDifficultyOptionSetMission : public UDataAsset
{
public:
	TArray<class UFortDifficultyOptionCategoryMission*> MissionOptionsCategories;                          // 0x30(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortDifficultyOptionSetMission* GetDefaultObj();

};

// 0x0 (0x1C8 - 0x1C8)
// Class FortniteGame.FortDoorLinkComponent
class UFortDoorLinkComponent : public UNavLinkCustomComponent
{
public:

	static class UClass* StaticClass();
	static class UFortDoorLinkComponent* GetDefaultObj();

};

// 0x50 (0x378 - 0x328)
// Class FortniteGame.FortDynamicBuildingDeconstructor
class AFortDynamicBuildingDeconstructor : public AActor
{
public:
	struct FBoxSphereBounds                      Bounds;                                            // 0x328(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDebugDrawBounds;                                  // 0x344(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSelectiveDestruction;                             // 0x345(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreMissionActors;                              // 0x346(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShrinkAndDestroyEffect;                           // 0x347(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumOfPiecesToDestroyAtOnce;                        // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenChunks;                                 // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ABuildingSMActor>> SortedBuildingActors;                              // 0x350(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	int32                                        CurrentIndex;                                      // 0x360(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F5E[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortDynamicBuildingDeconstructor* GetDefaultObj();

};

// 0x8 (0xA00 - 0x9F8)
// Class FortniteGame.FortEditToolItemDefinition
class UFortEditToolItemDefinition : public UFortWeaponItemDefinition
{
public:
	uint8                                        Pad_1F5F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortEditToolItemDefinition* GetDefaultObj();

};

// 0x28 (0x408 - 0x3E0)
// Class FortniteGame.FortEmitterCameraLensEffectDirectional
class AFortEmitterCameraLensEffectDirectional : public AEmitterCameraLensEffectBase
{
public:
	class AFortPawn*                             DamageInstigator;                                  // 0x3E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DamageInstigatorLocation;                          // 0x3E8(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F60[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RotationParameterName;                             // 0x3F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRotateActor : 1;                                  // Mask: 0x1, PropSize: 0x10x400(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1ED : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1F61[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Strength;                                          // 0x404(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortEmitterCameraLensEffectDirectional* GetDefaultObj();

	void SetTint(const struct FLinearColor& Color);
	void SetStrength(float InStrength);
};

// 0x10 (0x100 - 0xF0)
// Class FortniteGame.FortEmojiPreviewComponent
class UFortEmojiPreviewComponent : public UActorComponent
{
public:
	uint8                                        Pad_1F62[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortEmojiPreviewComponent* GetDefaultObj();

	void PushPreviewEmoji(class UAthenaEmojiItemDefinition* EmojiItem);
};

// 0x18 (0x400 - 0x3E8)
// Class FortniteGame.FortEmoteItemDefinition
class UFortEmoteItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	class FText                                  CommandName;                                       // 0x3E8(0x18)(Edit, AssetRegistrySearchable, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortEmoteItemDefinition* GetDefaultObj();

	class FText GetCommandName();
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortEmotePreviewActor
class AFortEmotePreviewActor : public AActor
{
public:
	uint8                                        Pad_1F64[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortEmotePreviewActor* GetDefaultObj();

	void PreviewEmote(class UFortMontageItemDefinitionBase* Emote);
};

// 0x8 (0x5E8 - 0x5E0)
// Class FortniteGame.FortEnemySpawn
class AFortEnemySpawn : public ABuildingActor
{
public:
	float                                        ClusterRadius;                                     // 0x5E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F65[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortEnemySpawn* GetDefaultObj();

};

// 0x8 (0xC38 - 0xC30)
// Class FortniteGame.FortEngine
class UFortEngine : public UGameEngine
{
public:
	uint8                                        Pad_1F66[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortEngine* GetDefaultObj();

};

// 0x60 (0x140 - 0xE0)
// Class FortniteGame.FortEventPurchaseTrackerItem
class UFortEventPurchaseTrackerItem : public UFortAccountItem
{
public:
	class FString                                Event_instance_id;                                 // 0xE0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, int32>                   Event_purchases;                                   // 0xF0(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortEventPurchaseTrackerItem* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortEventPurchaseTrackerItemDefinition
class UFortEventPurchaseTrackerItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortEventPurchaseTrackerItemDefinition* GetDefaultObj();

};

// 0x40 (0x368 - 0x328)
// Class FortniteGame.FortExhibitActor
class AFortExhibitActor : public AActor
{
public:
	uint8                                        Pad_1F67[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CameraOffset;                                      // 0x330(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        CameraFOV;                                         // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F68[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortExhibitActor* GetDefaultObj();

};

// 0x60 (0x140 - 0xE0)
// Class FortniteGame.FortExpeditionItem
class UFortExpeditionItem : public UFortAccountItem
{
public:
	int32                                        Expedition_max_target_power;                       // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Expedition_min_target_power;                       // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_start_time;                             // 0xE8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_end_time;                               // 0xF0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_expiration_start_time;                  // 0xF8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             Expedition_expiration_end_time;                    // 0x100(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Expedition_squad_id;                               // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Expedition_slot_id;                                // 0x118(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Expedition_criteria;                               // 0x128(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Expedition_success_chance;                         // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortExpeditionItem* GetDefaultObj();

	bool IsExpeditionInProgress();
	bool IsExpeditionCompleted(const struct FDateTime& UtcNow);
	bool HasExpeditionExpired(const struct FDateTime& UtcNow);
	float GetTargetPowerLevel();
	struct FTimespan GetRemainingExpeditionExpirationDuration(const struct FDateTime& UtcNow);
	struct FTimespan GetRemainingExpeditionDuration(const struct FDateTime& UtcNow);
	float GetMinTargetPowerLevelToBegin();
	float GetExpeditionSuccessChance();
	class FName GetExpeditionSquadId();
	void GetBonusCriteriaTags(TArray<struct FGameplayTag>* OutBonusCriteria);
	void GetBonusCriteriaBP(TArray<struct FFortCriteriaRequirementData>* OutBonusCriteria);
};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortExpeditionItemDefinition
class UFortExpeditionItemDefinition : public UFortAccountItemDefinition
{
public:
	class FString                                CriteriaRequirementsLootTier;                      // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExpeditionDuration_Minutes;                        // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExpeditionExpirationDuration_Minutes;              // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BaseTargetPowerRating;                             // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TierFactor;                                        // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxTargetPowerClamp;                               // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F6C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   ExpeditionRules;                                   // 0x358(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F6D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortExpeditionItemDefinition* GetDefaultObj();

	struct FGameplayTagContainer GetRequiredTags();
	void GetExpeditionCosts(TArray<struct FItemAndCount>* OutExpeditionCosts);
	void GetAllRewards(TArray<class UFortCardPackItemDefinition*>* OutRewards);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortExpeditionManager
class UFortExpeditionManager : public UObject
{
public:
	uint8                                        Pad_1F6E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortExpeditionManager* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortFallbackCameraFrameTargetProxy
class UFortFallbackCameraFrameTargetProxy : public UObject
{
public:
	uint8                                        Pad_1F6F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           OnSettingsChangedDelegate;                         // 0x40(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortFallbackCameraFrameTargetProxy* GetDefaultObj();

	void SetItemToRepresent(class UFortItem* ItemToRepresent, class USceneComponent* ComponentToView);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortFastLoadConfig
class UFortFastLoadConfig : public UObject
{
public:
	uint8                                        bDisableStreamInBuildings : 1;                     // Mask: 0x1, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableStartupAIDirector : 1;                     // Mask: 0x2, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableUpgradePlayerBuildingClasses : 1;          // Mask: 0x4, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseMinimalPlayerBuildingClasses : 1;              // Mask: 0x8, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableStartingMissions : 1;                      // Mask: 0x10, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseFastLoadDefaultInventory : 1;                  // Mask: 0x20, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableNavAgentCostData : 1;                      // Mask: 0x40, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisableThreatVisualsManager : 1;                  // Mask: 0x80, PropSize: 0x10x28(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bDisablePreLoadAssets : 1;                         // Mask: 0x1, PropSize: 0x10x29(0x1)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F70[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortFastLoadConfig* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class FortniteGame.FortFeedbackBank
class UFortFeedbackBank : public UPrimaryDataAsset
{
public:
	TArray<struct FFortFeedbackActionBankDefined> BankDefinedFeedbackEvents;                         // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortFeedbackAction>           FeedbackEvents;                                    // 0x40(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F71[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortFeedbackBank* GetDefaultObj();

};

// 0x120 (0x448 - 0x328)
// Class FortniteGame.FortFeedbackManager
class AFortFeedbackManager : public AActor
{
public:
	TArray<struct FFortFeedbackEventData>        FeedbackEvents;                                    // 0x328(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn_FeedbackAnnouncer> AnnouncerPawnClass;                                // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPawn_FeedbackAnnouncer*           Announcer;                                         // 0x340(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AController>>    SuppressedControllers;                             // 0x348(0x10)(Net, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F72[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortFeedbackManager* GetDefaultObj();

	void SuppressProceduralFeedback(const TArray<class AController*>& ControllersToSuppress);
	class AFortFeedbackManager* GetFeedbackManager(class UObject* WorldContextObject);
	class AFortPawn_FeedbackAnnouncer* GetAnnouncerPawn(class UObject* WorldContextObject);
};

// 0x10 (0x4A0 - 0x490)
// Class FortniteGame.FortFlag
class AFortFlag : public AFortCarriedObject
{
public:
	class UStaticMeshComponent*                  FlagMeshComp;                                      // 0x490(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                     CollisionComp;                                     // 0x498(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortFlag* GetDefaultObj();

};

// 0x40 (0xAC0 - 0xA80)
// Class FortniteGame.FortFOBCoreDecoItemDefinition
class UFortFOBCoreDecoItemDefinition : public UFortDecoItemDefinition
{
public:
	class FText                                  ExtendedDescription;                               // 0xA80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  FlavorText;                                        // 0xA98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGuid                                 SaveFilenameGUID;                                  // 0xAB0(0x10)(Edit, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortFOBCoreDecoItemDefinition* GetDefaultObj();

	int32 GetMaximumHealth();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortFoliageSpawnerSet
class UFortFoliageSpawnerSet : public UDataAsset
{
public:
	TArray<class UProceduralFoliageSpawner*>     FoliageSpawners;                                   // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortFoliageSpawnerSet* GetDefaultObj();

};

// 0xA58 (0xA88 - 0x30)
// Class FortniteGame.FortFootstepAudioBank
class UFortFootstepAudioBank : public UPrimaryDataAsset
{
public:
	struct FFortFootstepAudioData                FootstepData1P[0x7];                               // 0x30(0x508)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortFootstepAudioData                FootstepData3P[0x7];                               // 0x538(0x508)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortFootstepSurfaceType          PhysicalSurfaceMappings[0x3F];                     // 0xA40(0x3F)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F76[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeammateVolumeMultiplier;                          // 0xA80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFootstepDistance;                               // 0xA84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortFootstepAudioBank* GetDefaultObj();

	class USoundBase* GetSoundAsset(bool bIsLocal, enum class EFortFootstepAudioType StepType, enum class EFortFootstepSurfaceType SurfaceType, enum class EFortFootstepPosition StepPosition);
	float GetFootstepVolumeMultiplier(bool bIsLocal, bool bApplyTeammateVolume, enum class EFortFootstepAudioType StepType);
	class USoundAttenuation* GetAttenuationAsset(bool bIsLocal, enum class EFortFootstepAudioType StepType, enum class EFortFootstepPosition StepPosition);
};

// 0x8 (0x330 - 0x328)
// Class FortniteGame.FortForcedLODZone
class AFortForcedLODZone : public AActor
{
public:
	enum class EFortAILODLevel                   ForcedLODLevel;                                    // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F77[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortForcedLODZone* GetDefaultObj();

};

// 0x610 (0x2C00 - 0x25F0)
// Class FortniteGame.FortPlayerCameraBase
class AFortPlayerCameraBase : public APlayerCameraManager
{
public:
	TArray<struct FActiveFortCamera>             CameraBlendStack;                                  // 0x25F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortCameraInstanceEntry>      CameraInstances;                                   // 0x2600(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortCameraMode>           CurrentAbilitySpecifiedCameraClass;                // 0x2610(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            AbilitySpecForCameraClassRequest;                  // 0x2618(0x4)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F78[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortCameraMode>           Base3PClass;                                       // 0x2620(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           Targeting3PClass;                                  // 0x2628(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           OverrideCameraClass;                               // 0x2630(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCinematicCamera>      CinematicCameraClass;                              // 0x2638(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           DBNOCameraClass;                                   // 0x2640(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           DeathCameraClass;                                  // 0x2648(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           SkydiveGlideCameraClass;                           // 0x2650(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           SkydiveDiveCameraClass;                            // 0x2658(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           SkydiveParachuteCameraClass;                       // 0x2660(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortCameraMode>           HoverboardCameraClass;                             // 0x2668(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortCameraPrototype>          CameraPrototypes;                                  // 0x2670(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class APostProcessVolume*                    ZoomPostProcessVolume;                             // 0x2680(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F79[0x578];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerCameraBase* GetDefaultObj();

};

// 0xF0 (0x2CF0 - 0x2C00)
// Class FortniteGame.FortFrontEndCameraManager
class AFortFrontEndCameraManager : public AFortPlayerCameraBase
{
public:
	enum class EFrontEndCamera                   CurrentCamera;                                     // 0x2C00(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F7A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFrontEndSettings*                     FrontEndSettings;                                  // 0x2C08(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F7B[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IFortUICameraFrameInterface> UICameraFrameInterface;                            // 0x2C60(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TScriptInterface<class IFortUICameraFrameTargetInterface> UICameraFrameTargetInterface;                      // 0x2C70(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F7C[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortFrontEndCameraManager* GetDefaultObj();

	void SetZoomLevel(float ZoomLevel);
	void SetFrameTarget(TScriptInterface<class IFortUICameraFrameTargetInterface>& FrameTarget);
	void SetCustomCameraRotationOffset(const struct FRotator& Offset);
	void SetCameraFrame(TScriptInterface<class IFortUICameraFrameInterface> NewFrame);
	void SetCamera(enum class EFrontEndCamera NewCamera);
	void HandleCameraFrameTargetSettingsChanged(TScriptInterface<class IFortUICameraFrameTargetInterface> FrameTarget);
	float GetZoomLevel();
	class AFortCameraBase* GetCameraActor();
	enum class EFrontEndCamera GetCamera();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortFrontendItemViewSettingsManager
class UFortFrontendItemViewSettingsManager : public UObject
{
public:

	static class UClass* StaticClass();
	static class UFortFrontendItemViewSettingsManager* GetDefaultObj();

	struct FFortItemViewSettings GetItemViewSettings(enum class EFrontEndCamera Camera, enum class ESubGame GameMode, class UFortItemDefinition* ItemDefinition);
};

// 0x148 (0x478 - 0x330)
// Class FortniteGame.FortFXManager
class AFortFXManager : public AFortClientOnlyActor
{
public:
	TArray<struct FFortSplineMeshAnimSet>        SplineAnimSets;                                    // 0x330(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FFortMIDAnimSet>               MIDAnimSets;                                       // 0x340(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortParticleAnimSet>          ParticleAnimSets;                                  // 0x350(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FFortLightAnimSet>             LightAnimSets;                                     // 0x360(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class AFortWeaponRanged*>             PendingWeaponFX;                                   // 0x370(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1F95[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortFXManager* GetDefaultObj();

	class AActor* SpawnPooledFXActor(class UObject* WorldContextObject, TSubclassOf<class AActor> FXActorClass, struct FTransform& SpawnTransform);
	void ReturnPickupStretchMIDToPool(class AFortPickupEffect* PickupObject, class UPrimitiveComponent* Component, int32 ElementIndex);
	void ReturnFXActorToPool(class UObject* WorldContextObject, class AActor* FXActor);
	void RemoveSplineMeshAnimations(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh);
	void RemoveParticleAnimations(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp);
	void RemoveMIDAnimations(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid);
	void RemoveLightAnimations(class UObject* WorldContextObject, class ULightComponent* LightComp);
	class UMaterialInstanceDynamic* GetPickupStretchMIDFromPool(class AFortPickupEffect* PickupObject, class UMaterialInterface* SourceMaterial, class UPrimitiveComponent* Component, int32 ElementIndex, bool* bNeedsToBeInitialized);
	class UMaterialInstanceDynamic* GetPickupRarityMID(class AFortPickupEffect* PickupObject, class UPrimitiveComponent* Component, int32 ElementIndex, int32 Rarity, bool* bNeedsToBeInitialized);
	void AddSplineMeshSnapAnimation(class UObject* WorldContextObject, TArray<class USplineMeshComponent*>& SplineMeshes, class USplineComponent* TargetSpline, class UCurveFloat* GrowthCurve, float Duration, bool bPlayGrowthReverse);
	void AddSplineMeshScaleAnimation(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh, float StartScaleStart, float StartScaleEnd, float EndScaleStart, float EndScaleEnd, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddParticleAnimationFloat(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp, class FName ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddMIDAnimationFloat(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddMIDAnimationColorCurve(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, class UCurveLinearColor* ColorCurve, float Duration, bool bPlayReverse);
	void AddMIDAnimationColor(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, struct FLinearColor& StartValue, struct FLinearColor& EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void AddLightAnimationIntensity(class UObject* WorldContextObject, class ULightComponent* LightComp, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortGadgetItemDefinitionTooltip
class UFortGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortGadgetItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortGadgetItemTooltip
class UFortGadgetItemTooltip : public UFortWorldItemTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortGadgetItemTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x2E30 (0x2E60 - 0x30)
// Class FortniteGame.FortGameData
class UFortGameData : public UPrimaryDataAsset
{
public:
	TSubclassOf<class UFortAIEncounterInfo>      TestEncounter;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortGameModeAthena>       GameModeAthenaClass;                               // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortPlaylistManager>      PlaylistManagerClass;                              // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortCombatManager>        CombatManager;                                     // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class APlayerCameraManager>      DefaultCameraManager;                              // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortInGameMapManager>     UIMapManager;                                      // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortMusicManager>         MusicManager;                                      // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMusicManagerBank*                 MusicManagerBank;                                  // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DefaultHeroName;                                   // 0x70(0x18)(Edit, NativeAccessSpecifierPublic)
	class UAthenaGliderItemDefinition*           DefaultGliderSkin;                                 // 0x88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAthenaPickaxeItemDefinition*          DefaultPickaxeSkin;                                // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>           RandomItemPickers;                                 // 0x98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortAnalyticsData*                    AnalyticsData;                                     // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAnalyticsItemExclusions*          StWAnalyticsItemExclusionData;                     // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAnalyticsItemExclusions*          BRAnalyticsItemExclusionData;                      // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortGameplayTagData*                  GameplayTagData;                                   // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTooltipMap*                       ObjClassToTooltipClassMap;                         // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortAIPawn>             DefaultDamageReceiverClass;                        // 0xD0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortPawn>               DefaultDamageReceiverClassAthena;                  // 0xF8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTokenToTextTable*                 TooltipTokenToTextTable;                           // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTokenToAttributeTable*            TooltipTokenToAttributeTable;                      // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupSplineOffsetRange[0x2];                      // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupSplineRandomMax;                             // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupSplineDropToGroundLength;                    // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupMaxCollectionTime;                           // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupMaxDelayPerItem;                             // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                          PickupSplineCurve;                                 // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            PickupLandedSound;                                 // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortTokenType>         AccountInventoryBonusToken;                        // 0x158(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortTokenType>         WorldInventoryBonusToken;                          // 0x180(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortTokenType>         FounderChatUnlockToken;                            // 0x1A8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortRarityData*                       RarityData;                                        // 0x1D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortScoreStylingData*                 ScoreStylingData;                                  // 0x1D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemCategory*                     ItemCategories;                                    // 0x1E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuickBarData                         QuickBarDefinitions[0x2];                          // 0x1E8(0x20)(Edit, NativeAccessSpecifierPublic)
	TArray<class FName>                          AutoEquipTags;                                     // 0x208(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 AutoEquipTagContainer;                             // 0x218(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                          BuildingFullHealthFlashColor;                      // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InvalidEditPatternColor;                           // 0x248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortHighlightColorsContainer         HighlightColors[0x4];                              // 0x258(0x180)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ScoreDisplayFactor;                                // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortReplicatedStatMapping>    StatMappings;                                      // 0x3E0(0x10)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDataTable*                            ScoreMultiplierDataTable;                          // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScoreDivisor;                                      // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XPMult;                                            // 0x3FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupScoreRates[0x5];                              // 0x400(0x14)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScoreToXPLinearRate;                               // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LinearEnd;                                         // 0x418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        XpPerAccountLevel;                                 // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalMatch_XpBonusPercent;                      // 0x420(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PersonalBoost_XpBonusPercent;                      // 0x424(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupBoost_XpBonusPercent;                         // 0x428(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GroupBoost_BuffMultiplier;                         // 0x42C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Rest_XpBonusPercent;                               // 0x430(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundMix*                             LoadingScreenSoundMix;                             // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundMix*                             BaseSoundMix;                                      // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortGlobalAbilityTargetingActor> AbilityTargetingActorBlueprintClass;               // 0x448(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortWeaponMeleeItemDefinition>> HarvestingTools;                                   // 0x450(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortWeaponMeleeItemDefinition>> AthenaHarvestingToolsToPreload;                    // 0x460(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FKeybindIcon>                  IconKeyList;                                       // 0x470(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeybindIcon>                  IconKeyListPS4;                                    // 0x480(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeybindIcon>                  IconKeyListXboxOne;                                // 0x490(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     MobileInteractionMaterial;                         // 0x4A0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UStaticMesh>            MobileInteractionMesh;                             // 0x4C8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MobileInteractionIconScale;                        // 0x4F0(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MobileRarityColor[0xA];                            // 0x4FC(0xA0)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            MobileInteractionIcons[0x4];                       // 0x5A0(0x20)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSubGameInfo                          SubGameInfo[0x2];                                  // 0x5C0(0x20)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 PlacementActorUsedTags;                            // 0x5E0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortPlayerSpawnPadPlacementData      DefaultPlayerSpawnPadPlacementData;                // 0x600(0x58)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCustomCharacterPart>   DefaultBackpackCharacterPart;                      // 0x658(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> DefaultCharacterParts;                             // 0x680(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FDefaultCharacterPartsForPawnClass> DefaultCharacterPartOverridesPerPawnClass;         // 0x690(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortAIGoalManager>        AIGoalManagerClass;                                // 0x6A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortSharedMissionLists> SharedMissionListsClass;                           // 0x6A8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        QueuedAnnouncementPauseTimes[0x3];                 // 0x6D0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  WeakSpotEnabledTimeoutHandle;                      // 0x6E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingStructuralCollapseDelay;                   // 0x6F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingStructuralCollapseDelayVariance;           // 0x6F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingStructuralCollapseCellDistAdditiveDelay;   // 0x6F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BuildingStructuralCollapseCellDistAdditiveDelayVariance; // 0x6FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeCancelDistance;                            // 0x700(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingExcessDamageRewardTimeoutHandle;           // 0x708(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingCostHandles[0x4];                          // 0x718(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingDeconCostMultHandles[0x4];                 // 0x758(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  PlayerBuildingDeconCostMultHandles[0x4];           // 0x798(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingInitialHealthPercentHandles[0x4];          // 0x7D8(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  AthenaBuildingInitialHealthPercentHandles[0x4];    // 0x818(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  AthenaBuildingDropPercentHandles[0x4];             // 0x858(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingRepairCostMultiplierHandles[0x4];          // 0x898(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FORTAttributeToPowerMultiplier;                    // 0x8D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  BuildingBreakAnimDurationHandles[0x4];             // 0x8E0(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingDestroyAnimDurationHandles[0x4];           // 0x920(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingPlacementAnimDurationHandles[0x4];         // 0x960(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingCritDamagePctHandles[0x4];                 // 0x9A0(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BuildingCritDestroyAnimScaleCapHandles[0x4];       // 0x9E0(0x40)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialParameterCollection> StencilDefinitionCollection;                       // 0xA20(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBuildingAudioBank*                BuildingAudioBank;                                 // 0xA48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ResourceNames[0x4];                                // 0xA50(0x60)(Protected, NativeAccessSpecifierProtected)
	class FText                                  BuildingTypeNames[0xC];                            // 0xAB0(0x120)(Protected, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*           StoneItemDefinition;                               // 0xBD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*           WoodItemDefinition;                                // 0xBD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*           MetalItemDefinition;                               // 0xBE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*               PistolAmmoItemDefinition;                          // 0xBE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortResourceItemDefinition*           PermaniteItemDefinition;                           // 0xBF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*               ShotgunAmmoItemDefinition;                         // 0xBF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*               RifleAmmoItemDefinition;                           // 0xC00(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*               AssaultAmmoItemDefinition;                         // 0xC08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortAmmoItemDefinition*               EnergyAmmoItemDefinition;                          // 0xC10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortNeverPersistItemDefinition*       BluGloItemDefinition;                              // 0xC18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                   CriticalMissionRewardItemDefinition;               // 0xC20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                   ScoreBonusMultiplerItemDefinition;                 // 0xC28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                   GenericCampaignEventCurrency;                      // 0xC30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortWorldItemDefinition> BackpackItemDefinition;                            // 0xC38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortWorldItemDefinition> MissionRewardPackItemDefinition;                   // 0xC60(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  OutpostRefundDialogTitle;                          // 0xC88(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  OutpostRefundDialogText;                           // 0xCA0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  OutpostRefundButtonText;                           // 0xCB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UFortInputData*                        FortInputData;                                     // 0xCD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsDefault;                            // 0xCD8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsPS4;                                // 0xD00(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsXboxOne;                            // 0xD28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsSwitch;                             // 0xD50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortTouchInputSettings> TouchInputSettings;                                // 0xD78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             AlterationMigrationMapping;                        // 0xDA0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationIntrinsicMapping;                        // 0xDC8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationNamedExclusions;                         // 0xDF0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationGroups;                                  // 0xE18(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationSlotDefinitions;                         // 0xE40(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             AlterationSlotsLoadouts;                           // 0xE68(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UDataTable>>     LootTierDataTables;                                // 0xE90(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UDataTable>>     LootPackageDataTables;                             // 0xEA0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             WaveSetCollectionData;                             // 0xEB0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             WaveSetData;                                       // 0xED8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             ModifierSetData;                                   // 0xF00(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             WaveSetCollectionLootData;                         // 0xF28(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             PlayerStatClampingData;                            // 0xF50(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 NonGameplayRelevantTags;                           // 0xF78(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveTable>            CraftingTimeTable;                                 // 0xF98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             DefaultCraftingSuccessSound;                       // 0xFC0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCurveTableRowHandle                  CritRatingTable;                                   // 0xFE8(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           TeamStatsGameplayEffect;                           // 0xFF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortDailyRewardScheduleDefinitions*   DailyRewardSchedules;                              // 0x1000(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             ExpeditionCriteriaRequirementsData;                // 0x1008(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DifficultyData;                                    // 0x1030(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowXpConningValue;                                 // 0x1038(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeryLowXpConningValue;                             // 0x103C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoXpConningValue;                                  // 0x1040(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FullXpConningMsg;                                  // 0x1048(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  LowXpConningMsg;                                   // 0x1060(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  VeryLowXpConningMsg;                               // 0x1078(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  NoXpConningMsg;                                    // 0x1090(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        MaxCraftQueueSize;                                 // 0x10A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            LootQuotaData;                                     // 0x10B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            LootLevelData;                                     // 0x10B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DefaultLootInstancingRange;                        // 0x10C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            SurfaceRatioBySurfaceCategoryData;                 // 0x10C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            SurfaceRatioByAffiliationData;                     // 0x10D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            QuestObjectiveStatData;                            // 0x10D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            XPAccountLevelsTable;                              // 0x10E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           XPAccountItemLevelsTable;                          // 0x10E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           XPAccountItemRewardsTable;                         // 0x10F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           XPConningTable;                                    // 0x10F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortTeamIdentification>   TeamIdentifications[0x68];                         // 0x1100(0x340)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortQuestPackInfo>            QuestPackInfos;                                    // 0x1440(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortQuestItemDefinition*              OnboardingQuestItemDefinition;                     // 0x1450(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   OnboardingCompleteZoneObjective;                   // 0x1458(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             QuestAchievementData;                              // 0x1468(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoadingScreenBackground_Generic;                   // 0x1490(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UFortTips*>                     LoadingScreenSharedTips;                           // 0x1518(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortSubGameLoadingScreen             LoadingScreens[0x2];                               // 0x1528(0x130)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoadingScreenEABackground;                         // 0x1658(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoadingScreenMissionBackground;                    // 0x16E0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           LoadingScreenTipBackground;                        // 0x1768(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FProgressBarStyle                     LoadingProgressBar;                                // 0x17F0(0x1A0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FConditionalFoundationQuota           ConditionalFoundationQuota;                        // 0x1990(0x10)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   SkillPointItemDef;                                 // 0x19A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                   ResearchPointItemDef;                              // 0x19A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            StatNamesToTrackTable;                             // 0x19B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortMissionGenerationData> MissionGenerationData;                             // 0x19B8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortWorldItemDefinition>> CheatInventoryItems;                               // 0x19E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortTheaterMapViewer>   TheaterMapViewerClass;                             // 0x19F0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             MissionAlertCategories;                            // 0x1A18(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMyTownData>            MyFortData;                                        // 0x1A40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortHomebaseManager>   HomebaseManager;                                   // 0x1A68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortCollectionBookData> CollectionBookData;                                // 0x1A90(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortSurvivorData>      SurvivorData;                                      // 0x1AB8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortOutpostData>       OutpostData;                                       // 0x1AE0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAttributeLookupTable> AttributeLookupTable;                              // 0x1B08(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAttributeCategory> AttributeCategories;                               // 0x1B30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortTagUIDataLookupTable> UITagDataTable;                                    // 0x1B58(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PowerPointToRatingConversion;                      // 0x1B80(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortQuestMapDataEntry                CampaignQuestMapData;                              // 0x1B90(0x10)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortQuestMapDataEntry                EventQuestMapData;                                 // 0x1BA0(0x10)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseSpecialEventsCamera;                           // 0x1BB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSettingsHUDVisibilityAndText> HUDVisibilityGameplayTags;                         // 0x1BB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortDamageNumbersActor> DamageNumbersActorClass;                           // 0x1BC8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ABuildingWeakSpot>       WeakSpotBlueprintClass;                            // 0x1BF0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     WeakSpotWoodPhysicalMaterial;                      // 0x1C18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     WeakSpotStonePhysicalMaterial;                     // 0x1C20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     WeakSpotMetalPhysicalMaterial;                     // 0x1C28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortPickupEffect>       PickupEffectBlueprintClass;                        // 0x1C30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   GameDifficultyRowPIE;                              // 0x1C58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class AFortAIDirector>> AIDirectors;                                       // 0x1C68(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        AIDirectorIndex;                                   // 0x1C78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AlternateBalanceAIDirectorIndex;                   // 0x1C7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortFeedbackManager>    FeedbackManagerClass;                              // 0x1C80(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortBluGloManager>      BluGloManagerClass;                                // 0x1CA8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortUIFeedbackBank>    UIFeedbackBank;                                    // 0x1CD0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayTagTableManager*              TagTableManager;                                   // 0x1CF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortStatEventManager>   StatEventManagerClass;                             // 0x1D00(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortHeroType>          DefaultHero;                                       // 0x1D28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortHeroType>          DefaultAthenaHero;                                 // 0x1D50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemDefinitionAndCount>       DefaultInventoryList;                              // 0x1D78(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemDefinitionAndCount>       FastLoadDefaultInventoryList;                      // 0x1D88(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortThreatVisualsManager> ThreatVisualsManager;                              // 0x1D98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortWindManager>        WindManager;                                       // 0x1DC0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortEditToolItemDefinition> EditToolItem;                                      // 0x1DE8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAbilitySet>        GenericPlayerAbilitySet;                           // 0x1E10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortAbilitySet>        GenericTrapAbilitySet;                             // 0x1E38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilityTagRelationship>   AbilityTagRelationships;                           // 0x1E60(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         EnvironmentDamageTemplateGE;                       // 0x1E70(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         FallingDamageTemplateGE;                           // 0x1E98(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         HealingTemplateGE;                                 // 0x1EC0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         FatalDamageTemplateGE;                             // 0x1EE8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         SquadMemberStatBonusGE;                            // 0x1F10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         TeamTrapBonusGE;                                   // 0x1F38(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  ExplorationActorClass;                             // 0x1F60(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SquadMemberStatBonusMultiplier;                    // 0x1F88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortConstructorBASE>    BASEClass;                                         // 0x1F90(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortGameplayAbility>    EmoteGameplayAbility;                              // 0x1FB8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortGameplayAbility>    SprayGameplayAbility;                              // 0x1FE0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortNotificationHandler> QuestNotificationHandlerClass;                     // 0x2008(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortUINotification>     BasicNotificationClass;                            // 0x2030(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortUINotification>     FriendNotificationClass;                           // 0x2058(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortUINotification>     TwitchNotificationClass;                           // 0x2080(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UFortUINotification>     MissionVoteNotificationClass;                      // 0x20A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUISoundFeedback                      FriendFeedbackSounds[0x3];                         // 0x20D0(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FUISoundFeedback                      FriendFeedbackSoundsAthena[0x3];                   // 0x20E8(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FUISoundFeedback                      PartyFeedbackSounds[0x2];                          // 0x2100(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FUISoundFeedback                      PartyFeedbackSoundsAthena[0x2];                    // 0x2110(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     HealthScreenDamagePostProcessMat;                  // 0x2120(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortClientAnnouncement_ZoneModifiers> ZoneModifiersAnnouncementClass;                    // 0x2148(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveTable>            SessionXPCurveTable;                               // 0x2170(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveTable>            TieredWavesDefenseReqTable;                        // 0x2198(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        FallbackDeathParticles;                            // 0x21C0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        WallFallbackDeathParticles;                        // 0x21E8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        FallbackConstructedEffect;                         // 0x2210(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RepairEffect;                                      // 0x2238(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundBase>             ConstructionCompleteSound;                         // 0x2260(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     DamageMaterial;                                    // 0x2288(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            BounceCurve;                                       // 0x22B0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     BlueprintParentMaterial;                           // 0x22D8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            EditCurve;                                         // 0x2300(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           BlueprintDamageCurve;                              // 0x2328(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            FullHealthAnimCurve;                               // 0x2350(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            RepairAnimCurve;                                   // 0x2378(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            DynamicLODEffectCurve;                             // 0x23A0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            InteractFullBounceCurve;                           // 0x23C8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            InteractFullBounceNormalCurve;                     // 0x23F0(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            InteractEmptyBounceCurve;                          // 0x2418(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            InteractEmptyBounceNormalCurve;                    // 0x2440(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ExpeditionUnlockedTag;                             // 0x2468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ExpeditionVehicleTags;                             // 0x2470(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             ExpeditionMasterWidgetClass;                       // 0x2490(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DailyMissionAlertQuota;                            // 0x24B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOnlineAccountTexts                   OnlineAccountTexts;                                // 0x24C0(0x960)(Edit, NativeAccessSpecifierPublic)
	TArray<class FName>                          ServerOnlyAssetTypes;                              // 0x2E20(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                            BannerIconData;                                    // 0x2E30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            BannerIconCategoryData;                            // 0x2E38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            BannerColorData;                                   // 0x2E40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            BannerColorCategoryData;                           // 0x2E48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHomebaseBannerColorMap*           BannerColorMap;                                    // 0x2E50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortHomebaseBannerIconItemDefinition* BannerIconItemDefinition;                          // 0x2E58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortGameData* GetDefaultObj();

	int32 GetXpPerAccountLevel();
	float GetTeamXpBoost();
	float GetPersonalXpBoost();
};

// 0x78 (0xA8 - 0x30)
// Class FortniteGame.FortGameDeathPenalty
class UFortGameDeathPenalty : public UDataAsset
{
public:
	float                                        PercentResourcesToDrop;                            // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentWeaponsToDrop;                              // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentCraftingIngredientsToDrop;                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentConsumablesToDrop;                          // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentAmmoToDrop;                                 // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentResourcesToRecover;                         // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentWeaponsToRecover;                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentCraftingIngredientsToRecover;               // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentConsumablesToRecover;                       // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentAmmoToRecover;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinResourcesToKeep;                                // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinWeaponsToKeep;                                  // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinCraftingIngredientsToKeep;                      // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinConsumablesToKeep;                              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinAmmoToKeep;                                     // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FBF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  RespawnDelays;                                     // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           RespawnDelayOverTime;                              // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRespawnDelay;                                   // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSelfResurrectDelay;                             // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseRegenHealthOnRespawn;                          // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PercentHealthOnRespawn;                            // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PercentStaminaOnRespawn;                           // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RespawnDurabilityPenalty;                          // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelfResurrectDurabilityPenalty;                    // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TeammateResurrectDurabilityPenalty;                // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortGameDeathPenalty* GetDefaultObj();

};

// 0x458 (0x4E8 - 0x90)
// Class FortniteGame.FortGameInstance
class UFortGameInstance : public UGameInstance
{
public:
	uint8                                        Pad_1FC3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class FName>                            EventFlagsForcedOnByHotfix;                        // 0x98(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TSet<class FName>                            EventFlagsForcedOffByHotfix;                       // 0xE8(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bBattleRoyaleMatchmakingEnabled;                   // 0x138(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlaylistOverrideData>         PlaylistOverrides;                                 // 0x140(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	class FString                                AthenaCodeOfConductURL;                            // 0x150(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAthenaDataTableSet                   AthenaDataTables;                                  // 0x160(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	TScriptInterface<class IFortUIManagerInterface> UIManagerInterface;                                // 0x190(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       UIManagerClassPath;                                // 0x1A0(0x18)(Edit, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMcpProfileManager*                    ProfileManager;                                    // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FC5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMatchmaking*                      Matchmaking;                                       // 0x1D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMatchmakingV2*                    MatchmakingV2;                                     // 0x1D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortRejoinCheck*                      RejoinCheck;                                       // 0x1E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortParty*                            Party;                                             // 0x1E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMatchAnalytics*                   MatchAnalytics;                                    // 0x1F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FC6[0x1C8];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 GlobalUnregistrationSaveGUID;                      // 0x3C0(0x10)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FC7[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortTooltipManager*                   TooltipManager;                                    // 0x3F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FC8[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortRegisteredPlayerInfo*>     RegisteredPlayers;                                 // 0x448(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FC9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortUpdateManager*                    UpdateManager;                                     // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FCA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortChat*                             Chatroom;                                          // 0x488(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UFortRegisteredPlayerInfo>> RegisteredPlayerInfosAwaitingRefresh;              // 0x490(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	class FString                                LastGameHighlightGroupId;                          // 0x4A0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FCB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSeasonalEventManager*             SeasonalEventManager;                              // 0x4C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPushNotificationManager*          MobilePushNotificationManager;                     // 0x4C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FCC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMissionGenerator*                 CurrentMissionGenerator;                           // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FCD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameInstance* GetDefaultObj();

};

// 0x0 (0x410 - 0x410)
// Class FortniteGame.FortGameModeBase
class AFortGameModeBase : public AGameMode
{
public:

	static class UClass* StaticClass();
	static class AFortGameModeBase* GetDefaultObj();

};

// 0x258 (0x668 - 0x410)
// Class FortniteGame.FortGameMode
class AFortGameMode : public AFortGameModeBase
{
public:
	uint8                                        bDisableCloudStorage : 1;                          // Mask: 0x1, PropSize: 0x10x410(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTravelInitiated : 1;                              // Mask: 0x2, PropSize: 0x10x410(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1EE : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1FD0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CurrentWUID;                                       // 0x418(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CurrentBucketId;                                   // 0x428(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentPlaylistId;                                 // 0x438(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentPlaylistName;                               // 0x440(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD3[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MatchmakingRegionId;                               // 0x468(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CurrentZoneInstanceId;                             // 0x478(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ZoneIndex;                                         // 0x48C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayersInvincible : 1;                            // Mask: 0x1, PropSize: 0x10x490(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1EF : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1FD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKickIdlers;                                       // 0x494(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxIdleTime;                                       // 0x498(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoScoreKickTime;                                   // 0x49C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNotifications;                              // 0x4A0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableReplicationGraph;                           // 0x4A1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortGameDeathPenalty>  DefaultDeathPenaltyData;                           // 0x4A8(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortGameDeathPenalty*                 DeathPenaltyData;                                  // 0x4D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortGameSession*                      FortGameSession;                                   // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GameModeSessionString;                             // 0x4E0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAutomatedTest : 1;                              // Mask: 0x1, PropSize: 0x10x4F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1F0 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1FD8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APawn>                   DefaultPawnClassStringRef;                         // 0x4F8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortMissionManager>       MissionManagerClass;                               // 0x520(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPlaylistManager*                  PlaylistManager;                                   // 0x528(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameModeGameplayTags;                              // 0x530(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bSpawnExplorationActorsAtWorldInitialization;      // 0x550(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDA[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverrideRotationOnRestartPlayer;                  // 0x568(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortGameplayState                PendingTimerState;                                 // 0x569(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDB[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWorldIsReady : 1;                                 // Mask: 0x1, PropSize: 0x10x570(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTheaterDataIsReady : 1;                           // Mask: 0x2, PropSize: 0x10x570(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1F1 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1FDD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TheaterSlot;                                       // 0x574(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GameplayServerHitchThreshold;                      // 0x578(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementTimeDiscrepancyHitchCooldown;              // 0x57C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AbilityRefireHitchCooldown;                        // 0x580(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckWeaponTracesForPlayerBuiltWalls;             // 0x584(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FDF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMatchHeartbeatManager*                MatchHeartbeatManager;                             // 0x588(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAwardItemDefinition*>      ActiveAwards;                                      // 0x590(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameContextTags;                                   // 0x5B0(0x20)(Transient, Protected, NativeAccessSpecifierProtected)
	class UFortSharedMissionLists*               SharedMissionLists;                                // 0x5D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortTeamInfo>             TeamInfoClass;                                     // 0x5E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortMissionGenerationManager*         MissionGenerationManager;                          // 0x608(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE4[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOverrideQuickBars;                                // 0x640(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuickBarData                         QuickBarDefinitions[0x2];                          // 0x648(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortGameMode* GetDefaultObj();

	void OnEndOfDay();
	void DumpReservations();
};

// 0x0 (0x410 - 0x410)
// Class FortniteGame.FortGameModeArtAutomation
class AFortGameModeArtAutomation : public AFortGameModeBase
{
public:

	static class UClass* StaticClass();
	static class AFortGameModeArtAutomation* GetDefaultObj();

};

// 0x130 (0x798 - 0x668)
// Class FortniteGame.FortGameModeZone
class AFortGameModeZone : public AFortGameMode
{
public:
	uint8                                        bSpawnAllStuff : 1;                                // Mask: 0x1, PropSize: 0x10x668(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisableAI : 1;                                    // Mask: 0x2, PropSize: 0x10x668(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInitBeaconAtInitGame : 1;                         // Mask: 0x4, PropSize: 0x10x668(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1F2 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1FE7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideAIDirectorIndex;                           // 0x66C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      ActiveSpawnPad;                                    // 0x670(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableVoiceChat;                                 // 0x678(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortAIDirector*                       AIDirector;                                        // 0x680(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAIGoalManager*                    AIGoalManager;                                     // 0x688(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        EndOfZoneRemainTime;                               // 0x690(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortTaggedActorsManager*              TaggedActorsManager;                               // 0x698(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABuildingConnectivityManager*          ConnectivityManager;                               // 0x6A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAllSocketsInSpawnPad;                          // 0x6A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FEC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortVisibilityManager>    VisibilityManagerClass;                            // 0x6B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCriticalMissionEligible;                          // 0x6B8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FED[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FItemAndCount>                 StartingItems;                                     // 0x6E0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnHandleZonePeriodicReport;                        // 0x6F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnHandleMatchHasStarted;                           // 0x700(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bTrustXboxPlatformId;                              // 0x710(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESubGame                          AssociatedSubGame;                                 // 0x711(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FEE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<double>                               FrameTimeOvershootHistogramBucketsMs;              // 0x718(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               SleepTimeOvershootHistogramBucketsMs;              // 0x728(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               FrameTimeWithoutSleepHistogramBucketsMs;           // 0x738(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FCumulativeFrameTimeWithoutSleepLimits> CumulativeFrameTimeWithoutSleepLimits;             // 0x748(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               GameNetDriverTickFlushTimeHistogramBucketsMs;      // 0x758(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               DemoNetDriverTickFlushTimeHistogramBucketsMs;      // 0x768(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<double>                               ActorsStarvedByClassTimeHistogramBuckets;          // 0x778(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        StarvedActorClassList;                             // 0x788(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameModeZone* GetDefaultObj();

	void ReplicateHealthAndShield();
	void OnMorningReached();
	void OnEveningReached();
};

// 0x68 (0x800 - 0x798)
// Class FortniteGame.FortGamePvPBase
class AFortGamePvPBase : public AFortGameModeZone
{
public:
	uint8                                        NumTeams;                                          // 0x798(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RoundTimeLimit;                                    // 0x79C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoundTimeRemainingCriticalThreshold;               // 0x7A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StalemateTimeLimit;                                // 0x7A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestartTimeLimit;                                  // 0x7A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FOBFinalizationLimit;                              // 0x7AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsingFOBs : 1;                                    // Mask: 0x1, PropSize: 0x10x7B0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFOBInitRequested : 1;                             // Mask: 0x2, PropSize: 0x10x7B0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bAllFOBConfigActorsInitialized : 1;                // Mask: 0x4, PropSize: 0x10x7B0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFinishedSpawningFOBConfigActors : 1;              // Mask: 0x8, PropSize: 0x10x7B0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1F3 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1FF0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumFOBConfigActorsPerTeam;                         // 0x7B4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FTeamFOBRequiredTags>          FOBRequiredTags;                                   // 0x7B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ABuildingFOBConfigActor>   FOBConfigActorClass;                               // 0x7C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCachedPlayerFOBInformation>   CachedFOBInfo;                                     // 0x7D0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingFOBConfigActor*>       SpawnedFOBConfigActors;                            // 0x7E0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ABuildingFOBConfigActor*>       SpawnedFOBConfigActorsToFinalize;                  // 0x7F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGamePvPBase* GetDefaultObj();

};

// 0x5F0 (0xDF0 - 0x800)
// Class FortniteGame.FortGameModeAthena
class AFortGameModeAthena : public AFortGamePvPBase
{
public:
	uint8                                        Pad_1FF6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSafeZoneUpdated;                                 // 0x808(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAlwaysDBNO;                                       // 0x818(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeverSpawnPickupsOnPawnDeath;                     // 0x819(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadTestCosmetics;                                // 0x81A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisable3DVoiceChat;                               // 0x81B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ExcludedDefaultSupplyDrops;                        // 0x820(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ExcludedLTMSupplyDrops;                            // 0x830(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<class FName>                          ExcludedLTMSpawnActors;                            // 0x840(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTimeOfDayOverride>            TimeOfDayOverrideList;                             // 0x850(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                         bDisableGCOnServerDuringMatch;                     // 0x860(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGCSettingsOverride>           GCSettingsOverrideList;                            // 0x868(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	bool                                         bPlaylistHotfixChangedGCDisabling;                 // 0x878(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FF9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlaylistHotfixOriginalGCFrequency;                 // 0x87C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverloadedInitialConnectTimeout;                   // 0x880(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FailedMatchAssignmentTimeout;                      // 0x884(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableRecentPlayersUpdates;                       // 0x890(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultWarmupEarlyRequiredPlayerPercent;           // 0x894(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFC[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxPlayerCount;                                    // 0x8F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerControllerAthena*>   AlivePlayers;                                      // 0x900(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        TeamAlivePlayers[0x64];                            // 0x910(0x190)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WarmupRequiredPlayerCount;                         // 0xAA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WarmupCountdownDuration;                           // 0xAA8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WarmupEarlyCountdownDuration;                      // 0xAB0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSafeZoneActive;                                   // 0xAB4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSafeZonePaused;                                   // 0xAB5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2000[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeRemainingWhenPhasePaused;                      // 0xAB8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2001[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           GE_OutsideSafeZone;                                // 0xAC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortSafeZoneIndicator>    SafeZoneIndicatorClass;                            // 0xAC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SafeZonePhase;                                     // 0xAD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2002[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSafeZoneIndicator*                SafeZoneIndicator;                                 // 0xAD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       SafeZoneLocations;                                 // 0xAE0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	float                                        EndGameKickPlayersDelay;                           // 0xAF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2003[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VoiceChatChannelPositional;                        // 0xAF8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowSpectateAfterDeath;                          // 0xB08(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseRandomTimeOfDay;                               // 0xB09(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2004[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaAISettings*                     AISettings;                                        // 0xB10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerControllerSpectating*> LiveSpectators;                                    // 0xB18(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortPlayerControllerSpectating> LiveSpectatorPlayerControllerClass;                // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortPlayerControllerSpectating> LiveBroadcastPlayerControllerClass;                // 0xB30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2006[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PlatformOSSNamesToUploadStats;                     // 0xB48(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2007[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableMatchmakingRatingUpdate;                    // 0xB74(0x1)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFlightPathInitialized;                            // 0xB75(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2008[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScorePerMinuteAlive;                               // 0xB7C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreMaxMinutesAliveCounted;                       // 0xB80(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScoreForGettingAtLeastOneKill;                     // 0xB84(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScorePerScaledTeamKill;                            // 0xB88(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2009[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScorePlacementTable                  ScorePlacementTables;                              // 0xB90(0x60)(Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ScoreMultiplier;                                   // 0xBF0(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxActiveAIActors;                                 // 0xBF4(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAthenaWeaponAlterationEvent*>  ActiveWeaponAlterationRules;                       // 0xBF8(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_200A[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllCosmeticsLoaded;                               // 0xC1C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> SkyDiveContrailCosmetics;                          // 0xC20(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        SkyDiveContrailLoadTestIndex;                      // 0xC30(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> GliderCosmetics;                                   // 0xC38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        GliderLoadTestIndex;                               // 0xC48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_200F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> PickaxeCosmetics;                                  // 0xC50(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        PickaxeLoadTestIndex;                              // 0xC60(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2010[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> CharacterCosmetics;                                // 0xC68(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        CharacterLoadTestIndex;                            // 0xC78(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2011[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> HatCosmetics;                                      // 0xC80(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        HatLoadTestIndex;                                  // 0xC90(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2012[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> BackpackCosmetics;                                 // 0xC98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        BackpackLoadTestIndex;                             // 0xCA8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2013[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> DanceCosmetics;                                    // 0xCB0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        DanceLoadTestIndex;                                // 0xCC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2014[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> VictoryPoseCosmetics;                              // 0xCC8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        VictoryPoseLoadTestIndex;                          // 0xCD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2015[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> MapMarkerCosmetics;                                // 0xCE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        MapMarkerLoadTestIndex;                            // 0xCF0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2016[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaCosmeticItemDefinition*> ConsumableEmoteCosmetics;                          // 0xCF8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAthenaCosmeticItemDefinition*> LoadingScreenCosmetics;                            // 0xD08(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAthenaCosmeticItemDefinition*> BattleBusCosmetics;                                // 0xD18(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FSupplyDropSpawnData>          SupplyDropSpawnDataList;                           // 0xD28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        LastSpawnedSupplyDropType;                         // 0xD38(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2017[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortSpawnActorData>           SpawnActorDataList;                                // 0xD40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2018[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameModeAthena* GetDefaultObj();

	void SafeZoneInsideChecks();
	void OnEndGameKickPlayers();
	void OnAircraftFlightEnded(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftExitedDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftEnteredDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void FireServerPerformanceEvent();
	void EndGamePhaseStarted();
};

// 0x50 (0x7E8 - 0x798)
// Class FortniteGame.FortGameModeDeployableBase
class AFortGameModeDeployableBase : public AFortGameModeZone
{
public:
	uint8                                        Pad_201A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameModeDeployableBase* GetDefaultObj();

};

// 0x8 (0x670 - 0x668)
// Class FortniteGame.FortGameModeEmptyDedicated
class AFortGameModeEmptyDedicated : public AFortGameMode
{
public:
	class AFortGameSessionDedicated*             FortGameSessionDedicated;                          // 0x668(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortGameModeEmptyDedicated* GetDefaultObj();

};

// 0x18 (0x7B0 - 0x798)
// Class FortniteGame.FortGameModeFOB
class AFortGameModeFOB : public AFortGameModeZone
{
public:
	class ABuildingFOBConfigActor*               ConfigurationActor;                                // 0x798(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnPlayerLoginToFOB;                                // 0x7A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameModeFOB* GetDefaultObj();

};

// 0x10 (0x678 - 0x668)
// Class FortniteGame.FortGameModeFrontEnd
class AFortGameModeFrontEnd : public AFortGameMode
{
public:
	class AFortTheaterMapViewer*                 TheaterMapViewer;                                  // 0x668(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameModeFrontEnd* GetDefaultObj();

};

// 0x0 (0x798 - 0x798)
// Class FortniteGame.FortGameModePvE
class AFortGameModePvE : public AFortGameModeZone
{
public:

	static class UClass* StaticClass();
	static class AFortGameModePvE* GetDefaultObj();

};

// 0x28 (0x7C0 - 0x798)
// Class FortniteGame.FortGameModeKeep
class AFortGameModeKeep : public AFortGameModePvE
{
public:
	uint8                                        Pad_201F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortKeepItemManager*                  KeepItemManager;                                   // 0x7B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortGameModeKeep* GetDefaultObj();

};

// 0x20 (0x7B8 - 0x798)
// Class FortniteGame.FortGameModeManor
class AFortGameModeManor : public AFortGameModePvE
{
public:
	uint8                                        Pad_2021[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameModeManor* GetDefaultObj();

};

// 0x30 (0x7C8 - 0x798)
// Class FortniteGame.FortGameModeOutpost
class AFortGameModeOutpost : public AFortGameModePvE
{
public:
	TArray<struct FFortItemEntry>                OwnerItemRefundCache;                              // 0x798(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortOutpostCoreInfo                  CurrentCoreInfo;                                   // 0x7A8(0x20)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameModeOutpost* GetDefaultObj();

};

// 0x0 (0x798 - 0x798)
// Class FortniteGame.FortGameModeSurvival
class AFortGameModeSurvival : public AFortGameModePvE
{
public:

	static class UClass* StaticClass();
	static class AFortGameModeSurvival* GetDefaultObj();

	void FireEvent_SurvivalVoteReport(TArray<class ABuildingActor*>& ActorsBeingDefended);
	void FireEvent_SurvivalPeriodicReport(enum class EFortReportDayPhase TimeOfReport, TArray<class ABuildingActor*>& ActorsBeingDefended);
};

// 0x3D8 (0x408 - 0x30)
// Class FortniteGame.FortGamepadSettings
class UFortGamepadSettings : public UDataAsset
{
public:
	class UCurveFloat*                           GamepadLookCurve;                                  // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GamepadLookYawCurve;                               // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GamepadLookPitchCurve;                             // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GamepadLookSensitivityCurve;                       // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           GamepadLookScaleForFOVCurve;                       // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadLookScale;                                  // 0x58(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleDownsights;                        // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleScope;                             // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleEditMode;                          // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GamepadLookScaleDownsightsDecayTime;               // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistStrength;                                 // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistStrengthDownsights;                       // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistStrengthDBNO;                             // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadLookAccelTime;                              // 0x7C(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadEditModeLookAccelTime;                      // 0x84(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             GamepadLookDecelTime;                              // 0x8C(0x8)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullStrength;                             // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullMaxRate;                              // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullRampUpTime;                           // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistPullDecayTime;                            // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistInitialDownsightStrength;                 // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimAssistInitialDownsightTime;                     // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMinDistance;                                   // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMinStrength;                                   // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMaxDistance;                                   // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowMaxStrength;                                   // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlowDecayTime;                                     // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullStrengthStationary;                    // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullStrengthMovingNewTile;                 // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullStrengthMovingWithinTile;              // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullMinDistance;                           // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullMaxDistance;                           // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullScaleFlat;                             // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModePullMaxRate;                               // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMinDistance;                           // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMinStrength;                           // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMaxDistance;                           // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EditModeSlowMaxStrength;                           // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2029[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAbilityTargetSelection           AimAssistTargetSelection;                          // 0xF0(0x100)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaGamepadAimAssistSettings   AthenaGamepadAimAssistSettings;                    // 0x1F0(0x158)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaGamepadLookSettings        AthenaGamepadLookSettings;                         // 0x348(0xC0)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortGamepadSettings* GetDefaultObj();

};

// 0x4D0 (0x910 - 0x440)
// Class FortniteGame.FortGameplayAbility
class UFortGameplayAbility : public UGameplayAbility
{
public:
	uint8                                        Pad_2050[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortGameplayAbilityActivation    ActivationType;                                    // 0x450(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2051[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainer          EffectContainers[0x5];                             // 0x458(0x2A8)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FFortGameplayEffectContainer>  GameplayEffectContainers;                          // 0x700(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 OwnerPreviewImageOverrideTags;                     // 0x710(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortProjectileBase>       ProjectileClass;                                   // 0x730(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   DamageStatHandle;                                  // 0x738(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAbilityCost>              AbilityCosts;                                      // 0x748(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        bShowWidgetForCosts : 1;                           // Mask: 0x1, PropSize: 0x10x758(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartWithCooldown : 1;                            // Mask: 0x2, PropSize: 0x10x758(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPersistOnDeath : 1;                               // Mask: 0x4, PropSize: 0x10x758(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopsAIBehaviorLogic : 1;                         // Mask: 0x8, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopsAIMovement : 1;                              // Mask: 0x10, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopsRVOAvoidance : 1;                            // Mask: 0x20, PropSize: 0x10x758(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bForceNormalAILOD : 1;                             // Mask: 0x40, PropSize: 0x10x758(0x1)(Deprecated, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1F5 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2053[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAILODLevel                   MinimumRequiredAILODLevel;                         // 0x75C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2054[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        BitPad_1F6 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bRelevantForAIDespawning : 1;                      // Mask: 0x8, PropSize: 0x10x760(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseAIFireLocationAndRotation : 1;                 // Mask: 0x10, PropSize: 0x10x760(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1F7 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2055[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAIWeaponUsage                AIWeaponUsage;                                     // 0x764(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2056[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          WeaponTestApplicationTag;                          // 0x768(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bVerifyFireOffsetIsNotObstructedByWorldGeometry : 1; // Mask: 0x1, PropSize: 0x10x770(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCanHitBallisticTestsOnlyTestIndesructiblesWhileFalling : 1; // Mask: 0x2, PropSize: 0x10x770(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1F8 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2057[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FireOffset;                                        // 0x774(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActivationNoiseRange;                              // 0x780(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactNoiseRange;                                  // 0x784(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActivationNoiseLoudness;                           // 0x788(0x4)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImpactNoiseLoudness;                               // 0x78C(0x4)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ProhibitedTargetTags;                              // 0x790(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_2058[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bLeadPawnTargets;                                  // 0x7B1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2059[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DesiredThrowAngle;                                 // 0x7B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYawAngleToFire;                                 // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClampMaxYawAngleToFire;                           // 0x7BC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTargetActorLocation;                           // 0x7BD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialAccuracyMax;                                // 0x7C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialAccuracyMin;                                // 0x7C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetAccuracyMax;                                 // 0x7C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetAccuracyMin;                                 // 0x7CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAccuracyDistance;                               // 0x7D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAccuracyDistance;                               // 0x7D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccuracyDistanceMultiplier;                        // 0x7D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumUsesToReachTargetAccuracy;                      // 0x7DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UseCount;                                          // 0x7E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;               // 0x7E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_205C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAbilityMontageInfo       MontageInfo;                                       // 0x818(0x60)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UFortWeaponItemDefinition*             AbilityWeapon;                                     // 0x878(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DisplayName;                                       // 0x880(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x898(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_205D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            SmallPreviewImageOverride;                         // 0x8B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_205E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortTooltip>              Tooltip;                                           // 0x8D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortTooltipDisplayStatsList*          StatList;                                          // 0x8D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAbilityTrackedActorSettings          ActorTrackingSettings;                             // 0x8E0(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           CurrentAbilityCameraModeClass;                     // 0x908(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortGameplayAbility* GetDefaultObj();

	void TrackGroupedActor(class AActor* ActorToTrack, const struct FGameplayTag& GroupTag);
	void TrackActor(class AActor* ActorToTrack);
	bool SetupPreviewImageOverride();
	void SetCameraMode(TSubclassOf<class UFortCameraMode> CameraModeClass);
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority);
	void QueryGameplayEffectContainerTargetExecutionModifiers(const struct FGameplayAbilityTargetDataHandle& TargetData, class UFortAbilitySystemComponent* SrcAbilitySystem, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel, class UObject* SourceObject, TArray<struct FGameplayEffectExecutionScopedModifierInfo>& InScopedMods, const TArray<struct FActiveGameplayEffectHandle>& InIgnoreHandles, TArray<struct FGameplayModifierEvaluatedData>* OutOutputModifiers);
	void OnGenericNotifyFromAnimation(const struct FGameplayTag& NotifyTag);
	void OnAbilityInputReleased();
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpec(const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel);
	void K2_TriggerFromAnimation(const struct FGameplayTag& ApplicationTag);
	bool K2_ShouldUseDecoTool(const struct FGameplayAbilityActorInfo& ActorInfo);
	void K2_AbilityCompleted();
	bool IsTargetOutsideOfMaxYawRotation();
	TArray<class AActor*> GetTrackedGroupedActors(const struct FGameplayTag& GroupTag);
	TArray<class AActor*> GetTrackedActors();
	TSubclassOf<class UFortTooltip> GetTooltip();
	void GetProjectileInitialValues(float* OutProjectileSpeed, struct FRotator* OutSpawnDirection, float* OutProjectileGravity, class AActor** HomingTarget, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire, bool bApplyLeading);
	int32 GetMaxNumTrackedActors();
	struct FRotator GetFireRotation(bool bApplyLeading, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire);
	struct FVector GetFireLocation();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
	struct FTransform GetCustomAbilitySourceTransform();
	class AFortWeapon* GetCurrentSourceWeapon();
	class UFortWorldItemDefinition* GetCurrentSourceItemDefinition();
	void GetCurrentAbilitySourceLevel(float* OutSourceLevel);
	struct FVector GetAimLocationNearestPawn(class AFortPawn* Instigator);
	class AActor* GetAIAbilityTarget();
	class AFortPawn* GetActivatingPawn();
	class UFortAbilitySystemComponent* GetActivatingAbilityComponent();
	float GetAbilityTargetingLevel();
	void EquipAbilityWeapon(class UFortWeaponItemDefinition* WeaponDefinition, int32 ItemLevel);
	bool DoesTargetHaveTags(class AActor* Target, struct FGameplayTagContainer& Tags);
	bool DoesTargetHaveProhibitedTagsForAI(class AActor* Target);
	void ClearTrackedGroupedActors(const struct FGameplayTag& GroupTag, bool bDestroyActors);
	void ClearTrackedActors(bool bDestroyActors);
	void ClearCameraMode();
	void ClearAIFocalPoint(bool bUseAttackingPriority);
	void CalculateProjectileTrajectorySplineWithHit(struct FHitResult* OutHitResult, TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float MaxSpeed, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int32 MaxBounces);
	void CalculateProjectileTrajectorySpline(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float MaxSpeed, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int32 MaxBounces);
	struct FFortGameplayEffectContainer BP_GetGameplayEffectContainer(const struct FGameplayTag& ApplicationTag);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectContainer(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel);
	struct FVector ApplyAccuracyToTargetLocation(struct FVector& SourceLocation, struct FVector& TargetLocation, float InDesiredThrowAngle);
};

// 0x8 (0x918 - 0x910)
// Class FortniteGame.FortGameplayAbility_Action
class UFortGameplayAbility_Action : public UFortGameplayAbility
{
public:
	class FName                                  ActionName;                                        // 0x910(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortGameplayAbility_Action* GetDefaultObj();

};

// 0x50 (0x968 - 0x918)
// Class FortniteGame.FortGameplayAbility_AIPortal
class UFortGameplayAbility_AIPortal : public UFortGameplayAbility_Action
{
public:
	struct FVector                               PortalDirection;                                   // 0x918(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2077[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PortalLifespan;                                    // 0x944(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingSMActor*>              NoCollisionBuildings;                              // 0x948(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2078[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_AIPortal* GetDefaultObj();

	void ModifyCollisions();
	bool HasPortalOutPoint();
	struct FVector GetPortalOutPoint();
	struct FVector GetPortalInPoint();
	class ABuildingSMActor* GetPortalBuilding();
};

// 0x48 (0x958 - 0x910)
// Class FortniteGame.FortGameplayAbility_AITurnTransition
class UFortGameplayAbility_AITurnTransition : public UFortGameplayAbility
{
public:
	struct FGameplayTagContainer                 RequiredWeaponTags;                                // 0x910(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MinTurnTransitionYawAngle;                         // 0x930(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_207E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTurnTransitionData>           TransitionPriorityList;                            // 0x938(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  PickedMontageSectionName;                          // 0x948(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PickedTurnYawRotationRate;                         // 0x950(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_207F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_AITurnTransition* GetDefaultObj();

	void GetTurnTransitionMontageSectionNameAndYawRotationRate(class FName* MontageSectionName, float* TurnYawRotationRate);
};

// 0x48 (0x958 - 0x910)
// Class FortniteGame.FortGameplayAbility_CeilingFallingTrap
class UFortGameplayAbility_CeilingFallingTrap : public UFortGameplayAbility
{
public:
	TSubclassOf<class AFortProjectileBase>       TrapProjectileClass;                               // 0x910(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           TrapCostClass;                                     // 0x918(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ActivateTrapTag;                                   // 0x920(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DelayBeginTag;                                     // 0x928(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReloadBeginTag;                                    // 0x930(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileSpawnDelay;                              // 0x938(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2081[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_CeilingFallingTrap* GetDefaultObj();

};

// 0x0 (0x918 - 0x918)
// Class FortniteGame.FortGameplayAbility_Crouch
class UFortGameplayAbility_Crouch : public UFortGameplayAbility_Action
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayAbility_Crouch* GetDefaultObj();

};

// 0x0 (0x910 - 0x910)
// Class FortniteGame.FortGameplayAbility_EyeOfTheStorm
class UFortGameplayAbility_EyeOfTheStorm : public UFortGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayAbility_EyeOfTheStorm* GetDefaultObj();

};

// 0x0 (0x918 - 0x918)
// Class FortniteGame.FortGameplayAbility_Jump
class UFortGameplayAbility_Jump : public UFortGameplayAbility_Action
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayAbility_Jump* GetDefaultObj();

};

// 0x20 (0x930 - 0x910)
// Class FortniteGame.FortGameplayAbility_JumpBoostPack
class UFortGameplayAbility_JumpBoostPack : public UFortGameplayAbility
{
public:
	uint8                                        Pad_2086[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EJumpBoostPackState               ServerCurrentState;                                // 0x918(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EJumpBoostPackState               CurrentState;                                      // 0x919(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2087[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayRegenStartTime;                               // 0x928(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbilityMarkedForPendingKill;                      // 0x92C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2088[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_JumpBoostPack* GetDefaultObj();

	void SetCurrentState(enum class EJumpBoostPackState InState);
	void OnRep_ServerCurrentState(enum class EJumpBoostPackState PreviousState);
	void OnRep_bAbilityMarkedForPendingKill();
	void OnFuelIsFull();
	void OnFuelIsEmpty();
	void OnCurrentStateChanged(enum class EJumpBoostPackState InPreviousState, enum class EJumpBoostPackState InCurrentState);
	void OnAbilityCanceled();
	void HandleCurrentStateChanged(enum class EJumpBoostPackState InPreviousState);
};

// 0x0 (0x910 - 0x910)
// Class FortniteGame.FortGameplayAbility_Land
class UFortGameplayAbility_Land : public UFortGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayAbility_Land* GetDefaultObj();

};

// 0x20 (0x930 - 0x910)
// Class FortniteGame.FortGameplayAbility_MedicPack
class UFortGameplayAbility_MedicPack : public UFortGameplayAbility
{
public:
	uint8                                        Pad_208C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMedicPackState                   ServerCurrentState;                                // 0x918(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMedicPackState                   CurrentState;                                      // 0x919(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_208D[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayRegenStartTime;                               // 0x928(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbilityMarkedForPendingKill;                      // 0x92C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_208E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_MedicPack* GetDefaultObj();

	void SetCurrentState(enum class EMedicPackState InState);
	void OnRep_ServerCurrentState(enum class EMedicPackState PreviousState);
	void OnRep_bAbilityMarkedForPendingKill();
	void OnFuelIsFull();
	void OnFuelIsEmpty();
	void OnCurrentStateChanged(enum class EMedicPackState InPreviousState, enum class EMedicPackState InCurrentState);
	void OnAbilityCanceled();
	void HandleCurrentStateChanged(enum class EMedicPackState InPreviousState);
};

// 0x0 (0x910 - 0x910)
// Class FortniteGame.FortGameplayAbility_MissileBattery
class UFortGameplayAbility_MissileBattery : public UFortGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayAbility_MissileBattery* GetDefaultObj();

};

// 0x10 (0x920 - 0x910)
// Class FortniteGame.FortGameplayAbility_PlayConversation
class UFortGameplayAbility_PlayConversation : public UFortGameplayAbility
{
public:
	class UFortConversation*                     ConversationToPlay;                                // 0x910(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2090[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_PlayConversation* GetDefaultObj();

};

// 0x38 (0x948 - 0x910)
// Class FortniteGame.FortGameplayAbility_RangedWeapon
class UFortGameplayAbility_RangedWeapon : public UFortGameplayAbility
{
public:
	float                                        FiringNoiseRange;                                  // 0x910(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2091[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortWeaponRanged*                     CurrentWeapon;                                     // 0x918(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 WeaponFireCue;                                     // 0x920(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_2092[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_RangedWeapon* GetDefaultObj();

};

// 0x20 (0x930 - 0x910)
// Class FortniteGame.FortGameplayAbility_Reload
class UFortGameplayAbility_Reload : public UFortGameplayAbility
{
public:
	int32                                        NumTimesReloaded;                                  // 0x910(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2093[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayAbility_Reload* GetDefaultObj();

};

// 0x0 (0x918 - 0x918)
// Class FortniteGame.FortGameplayAbility_Sprint
class UFortGameplayAbility_Sprint : public UFortGameplayAbility_Action
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayAbility_Sprint* GetDefaultObj();

};

// 0xD8 (0x168 - 0x90)
// Class FortniteGame.FortGameplayAbilityTooltip
class UFortGameplayAbilityTooltip : public UFortTooltip
{
public:
	struct FGameplayAbilitySpec                  CachedSpec;                                        // 0x90(0xC8)(Transient, NativeAccessSpecifierPrivate)
	class UGameplayAbility*                      CachedAbilityInstance;                             // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortTooltipContext*                   CachedContext;                                     // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortGameplayAbilityTooltip* GetDefaultObj();

	void InitializeAbilityInstanceInternal(class UGameplayAbility* AbilityInstance, class UFortTooltipContext* Context);
	void InitializeAbilityInstance(class UGameplayAbility* AbilityInstance, class UFortTooltipContext* Context);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForTokenFromAbilitySpecInternal(struct FGameplayAbilitySpec& Spec, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForTokenFromAbilitySpec(struct FGameplayAbilitySpec& Spec, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForTokenFromAbilityInstanceInternal(class UGameplayAbility* AbilityInstance, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForTokenFromAbilityInstance(class UGameplayAbility* AbilityInstance, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
	bool GetApplicationTag(class UGameplayAbility* AbilityInstance, struct FGameplayTag* OutTag);
};

// 0x10 (0x320 - 0x310)
// Class FortniteGame.FortGameplayCueManager
class UFortGameplayCueManager : public UGameplayCueManager
{
public:
	TArray<class FString>                        BROnlyGameplayCueNotifyPaths;                      // 0x310(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortGameplayCueManager* GetDefaultObj();

};

// 0x88 (0x420 - 0x398)
// Class FortniteGame.FortGameplayCueNotify_Looping
class AFortGameplayCueNotify_Looping : public AGameplayCueNotify_Actor
{
public:
	class USoundBase*                            StartSound;                                        // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            StopSound;                                         // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StartParticleSystem;                               // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortParticleSystemParamBucket        StartParticleSystemParameters;                     // 0x3B0(0x10)(Edit, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StopParticleSystem;                                // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortParticleSystemParamBucket        StopParticleSystemParameters;                      // 0x3C8(0x10)(Edit, NativeAccessSpecifierPublic)
	class FName                                  AttachPoint;                                       // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStayAttached;                                     // 0x3E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSnapToAttachPointAndPreserveWorldRotation;        // 0x3E1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHitResult;                                     // 0x3E2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWeapon;                                        // 0x3E3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreRotation;                                   // 0x3E4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 HUDElementTag;                                     // 0x3E8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x408(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAudioComponent*                       AudioComponent;                                    // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ParticleSystemComponent;                           // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortGameplayCueNotify_Looping* GetDefaultObj();

	void OnWhileActiveParticleSystemDeactivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, struct FGameplayCueParameters& Parameters);
	void OnWhileActiveParticleSystemActivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, struct FGameplayCueParameters& Parameters);
	void OnStopParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, struct FGameplayCueParameters& Parameters);
	void OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, struct FGameplayCueParameters& Parameters);
	class USceneComponent* GetTargetComponent(class AActor* TargetActor, struct FGameplayCueParameters& Parameters);
	bool GetSpawnTransform(class AActor* TargetActor, class FName AttachPointName, struct FGameplayCueParameters& Parameters, struct FTransform* OutTransform);
};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortGameplayCueNotify_Simple
class UFortGameplayCueNotify_Simple : public UGameplayCueNotify_Static
{
public:
	class USoundBase*                            StartSound;                                        // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       StartParticleSystem;                               // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortParticleSystemParamBucket        StartParticleSystemParameters;                     // 0x60(0x10)(Edit, NativeAccessSpecifierPublic)
	class FName                                  AttachPoint;                                       // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStayAttached;                                     // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseHitResult;                                     // 0x79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWeapon;                                        // 0x7A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreRotation;                                   // 0x7B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseUnsmoothedNetworkPosition;                     // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x7D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B3[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayCueNotify_Simple* GetDefaultObj();

	void OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, struct FGameplayCueParameters& Parameters);
};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortGameplayEffectUIData
class UFortGameplayEffectUIData : public UGameplayEffectUIData
{
public:
	class FText                                  DisplayName;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                TooltipName;                                       // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortGameplayEffectUIData* GetDefaultObj();

};

// 0x40 (0x370 - 0x330)
// Class FortniteGame.FortGameplayModifierItemDefinition
class UFortGameplayModifierItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortGameplayEffectDeliveryInfo> PersistentGameplayEffects;                         // 0x330(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetDeliveryInfo>   PersistentAbilitySets;                             // 0x340(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class AFortGameplayMutator>> Mutators;                                          // 0x350(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bHiddenInUI;                                       // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B5[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameplayModifierItemDefinition* GetDefaultObj();

	bool IsHiddenInUI();
};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortGameplayModMagnitudeCalculation
class UFortGameplayModMagnitudeCalculation : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UFortGameplayModMagnitudeCalculation* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class FortniteGame.FortGameplayMutator
class AFortGameplayMutator : public AInfo
{
public:
	uint8                                        bMutatorActive : 1;                                // Mask: 0x1, PropSize: 0x10x328(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameplayMutator* GetDefaultObj();

	bool IsMutatorActive();
};

// 0x38 (0x368 - 0x330)
// Class FortniteGame.FortGameplayMutator_AIEncounterModifierTags
class AFortGameplayMutator_AIEncounterModifierTags : public AFortGameplayMutator
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x330(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterMutatorReplacedTag> TagsToReplace;                                     // 0x350(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EFortMissionType                  RequiredEncounterAssociatedMissionType;            // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20BA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameplayMutator_AIEncounterModifierTags* GetDefaultObj();

};

// 0x8 (0x338 - 0x330)
// Class FortniteGame.FortGameplayMutator_AILevelVariance
class AFortGameplayMutator_AILevelVariance : public AFortGameplayMutator
{
public:
	float                                        MinVariance;                                       // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVariance;                                       // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameplayMutator_AILevelVariance* GetDefaultObj();

};

// 0x40 (0x620 - 0x5E0)
// Class FortniteGame.FortGameplayTagBuildingActor
class AFortGameplayTagBuildingActor : public ABuildingActor
{
public:
	uint8                                        Pad_20BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsToApplyOnSave;                                 // 0x5E8(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        XGridCells;                                        // 0x608(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        YGridCells;                                        // 0x60C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ZGridCells;                                        // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         BoxComponent;                                      // 0x618(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortGameplayTagBuildingActor* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class FortniteGame.FortGameplayTagData
class UFortGameplayTagData : public UDataAsset
{
public:
	struct FGameplayTag                          EnergyDamageTag;                                   // 0x30(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortGameplayTagData* GetDefaultObj();

};

// 0x28 (0x388 - 0x360)
// Class FortniteGame.FortGameplayTagVolume
class AFortGameplayTagVolume : public AVolume
{
public:
	uint8                                        Pad_20BF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsToApplyOnSave;                                 // 0x368(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortGameplayTagVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortGameplayTagVolumeInterface
class IFortGameplayTagVolumeInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortGameplayTagVolumeInterface* GetDefaultObj();

	void ApplyTags();
};

// 0x0 (0x800 - 0x800)
// Class FortniteGame.FortGamePvPBaseDestruction
class AFortGamePvPBaseDestruction : public AFortGamePvPBase
{
public:

	static class UClass* StaticClass();
	static class AFortGamePvPBaseDestruction* GetDefaultObj();

};

// 0xA0 (0x3E0 - 0x340)
// Class FortniteGame.FortGameSession
class AFortGameSession : public AGameSession
{
public:
	uint8                                        Pad_20C1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortHostSessionParams                CurrentSessionParams;                              // 0x360(0x10)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AOnlineBeaconHostObject>   ReservationBeaconHostClass;                        // 0x380(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20C3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPartyBeaconHost*                  ReservationBeaconHost;                             // 0x390(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortLobbyBeaconHost*                  LobbyBeaconHost;                                   // 0x398(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortDisconnectedPlayerReservation> DisconnectedPlayerReservations;                    // 0x3A0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        DisconnectedReservationTimeout;                    // 0x3B0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20C4[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BulkUnregisterTimerDelay;                          // 0x3C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20C5[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameSession* GetDefaultObj();

	void DumpReservations();
};

// 0x270 (0x650 - 0x3E0)
// Class FortniteGame.FortGameSessionDedicated
class AFortGameSessionDedicated : public AFortGameSession
{
public:
	uint8                                        Pad_20C6[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnforceCrossplayRestrictions;                     // 0x410(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowPS4InMixedConsole;                           // 0x411(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20C7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HotfixCheckTimer;                                  // 0x414(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HotfixCheckVariance;                               // 0x418(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20C8[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConsoleSessionRetryWaitSeconds;                    // 0x488(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20C9[0x64];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        IdleResetShortTimer;                               // 0x4F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20CA[0x84];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReconnectToMMSDelay;                               // 0x578(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxReconnectToMMSDelay;                            // 0x57C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20CB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MMSVersionCompatability;                           // 0x588(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MMSTicketURLServer;                                // 0x598(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MMSPingInterval;                                   // 0x5A8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20CC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FClientIdRestrictions>         ClientIdRestrictions;                              // 0x5B0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20CD[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameSessionDedicated* GetDefaultObj();

};

// 0x8 (0x390 - 0x388)
// Class FortniteGame.FortGameStateBase
class AFortGameStateBase : public AGameState
{
public:
	class AFortTimeOfDayManager*                 FortTimeOfDayManager;                              // 0x388(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameStateBase* GetDefaultObj();

	void OnRep_TimeOfDayManager();
	class AFortTimeOfDayManager* GetTimeOfDayManager();
};

// 0x250 (0x5E0 - 0x390)
// Class FortniteGame.FortGameState
class AFortGameState : public AFortGameStateBase
{
public:
	class FString                                CurrentWUID;                                       // 0x390(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ParTime;                                           // 0x3A0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldLevel;                                        // 0x3A4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CraftingBonus;                                     // 0x3A8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentReadyToContinueTimer;                       // 0x3AC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamCount;                                         // 0x3B0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamSize;                                          // 0x3B4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayersAlwaysVisible;                             // 0x3D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipWorldSave;                                    // 0x3D1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D6[0x2E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AdditionalPlaylistLevelsStreamed;                  // 0x400(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	int32                                        WorldDaysElapsed;                                  // 0x410(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20D8[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortFeedbackManager*                  FeedbackManager;                                   // 0x430(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMissionManager*                   MissionManager;                                    // 0x438(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortClientAnnouncementManager*        AnnouncementManager;                               // 0x440(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortScriptedActionManager*            ScriptedActionManager;                             // 0x448(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortLobbyBeaconState*                 LobbyGameState;                                    // 0x450(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortWorldManager*                     WorldManager;                                      // 0x458(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortGameplayState                GameplayState;                                     // 0x460(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortMusicManager>         MusicManagerSubclass;                              // 0x468(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                GameSessionId;                                     // 0x470(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortMovementComp_Character*>   ManagedCharMovementComponents;                     // 0x480(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortAIPawn*>                   ManagedAnimPawns;                                  // 0x490(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortPawn*                             PawnForReplayRelevancy;                            // 0x4A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortMovementComp_Character*>   ManagedCharMovementComponentsCopy;                 // 0x4A8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FOnTimeHitInfo>                TimeOfDayCallbacks;                                // 0x4B8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AFortVisibilityManager*                VisibilityManager;                                 // 0x4C8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortFXManager*                        FXManager;                                         // 0x4D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortWindManager*                      WindManager;                                       // 0x4D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AFortTeamInfo*>                 Teams;                                             // 0x4E0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSkipTeamReplication;                              // 0x4F0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTeamChangeRequest>            PendingTeamChangeRequests;                         // 0x4F8(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowPendingTeamChangeRequests;                   // 0x508(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DC[0x4F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortGlobalAbilityTargetingActor*      GlobalAbilityTargetingActor;                       // 0x558(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20DD[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAppliedHomebaseData>          AppliedHomebaseDataArray;                          // 0x5B0(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_20DE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameState* GetDefaultObj();

	void OnRep_WorldManager();
	void OnRep_WorldDaysElapsed();
	void OnRep_Teams();
	void OnRep_MusicManagerSubclass();
	void OnRep_MissionManager();
	void OnRep_GameSessionID();
	void OnRep_GameplayState();
	void OnRep_FeedbackManager();
	void OnRep_CurrentWUID();
	void OnRep_AnnouncementManager();
	void OnRep_AdditionalPlaylistLevelsStreamed();
	void OnFinishedStreamingAdditionalPlaylistLevel();
	int32 GetWorldDaysElapsed();
	enum class EFortGameplayState GetGameplayState();
	void DemoEndOfDayRecap();
	void Client_RefreshEventCalendar();
	void Client_InitiateEndOfDayRecap(struct FEndOfDayRecap& EndOfDayRecap);
};

// 0x708 (0xCE8 - 0x5E0)
// Class FortniteGame.FortGameStateZone
class AFortGameStateZone : public AFortGameState
{
public:
	int32                                        PawnIDCount;                                       // 0x5E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaitingToLeaveZoneTimeLeft;                        // 0x5E4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HostilityMeterPercent;                             // 0x5E8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IntensityPercent;                                  // 0x5EC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsCap;                                    // 0x5F0(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnPointsAllocated;                              // 0x5F4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTotalAI;                                        // 0x5F8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterAI;                                    // 0x5FC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEncounterSP;                                    // 0x600(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerBuildingSkillLevel;                          // 0x604(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                PlayerSharedMaxTrapAttributes;                     // 0x608(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       GameplayMutatorObservers;                          // 0x618(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2129[0x128];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ExplicitGloballyBlockedAbilityTags;                // 0x750(0x20)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_212B[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvitesRestricted;                                // 0x810(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212C[0x6B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalPlayerStructures;                             // 0x87C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxPlayerStructures;                               // 0x880(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212D[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortGlobalEnvironmentAbilityActor*    GlobalEnvironmentAbilityActor;                     // 0x8A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortAbilitySystemComponent*>   GlobalGameplayEventListeners;                      // 0x8A8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FActiveGameplayModifierArray          ActiveGameplayModifiers;                           // 0x8B8(0xC8)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSupportRuntimeShutdownOfGameplayModifiers;        // 0x980(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_212E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBuildingStructuralSupportSystem*      StructuralSupportSystem;                           // 0x988(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ZoneDifficultyInfoRow;                             // 0x990(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UFortZoneTheme*                        ZoneTheme;                                         // 0x9A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFortMissionGenerator>   MissionGeneratorClass;                             // 0x9A8(0x28)(Net, Transient, RepNotify, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortItemQuantityPair>         MissionRewards;                                    // 0x9D0(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortZoneDifficultyIncreaseRewardData> DifficultyIncreaseRewards;                         // 0x9E0(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FFortZoneMissionAlertData             MissionAlertData;                                  // 0x9F0(0x30)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_212F[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortThreatVisualsManager*             ThreatVisualsManager;                              // 0xAB0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortThreatParticleActor*              ThreatParticleActor;                               // 0xAB8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDrawRunVariationDebug;                            // 0xAC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2130[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIPawn*>                   PawnVariationList;                                 // 0xAC8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        VariationIndex;                                    // 0xAD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        GameDifficulty;                                    // 0xADC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2131[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsGroupContent;                                   // 0xAE4(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2132[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DifficultyIncreaseRewardTier;                      // 0xAE8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bAllowedToUpdateBackendDifficulty : 1;             // Mask: 0x1, PropSize: 0x10xAEC(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1F9 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2133[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerBuildableClassContainer        PlayerBuildableClasses[0x4];                       // 0xB00(0x40)(Transient, Protected, NativeAccessSpecifierProtected)
	class AFortInGameMapManager*                 UIMapManager;                                      // 0xB40(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortCharacterCosmeticManager*         CharacterCosmeticManager;                          // 0xB48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnScoreTotalsChanged;                              // 0xB50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  ScoringTableRowName;                               // 0xB60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalCombatScore;                                  // 0xB68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalBuildingScore;                                // 0xB6C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalUtilityScore;                                 // 0xB70(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2134[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TheaterUniqueId;                                   // 0xB78(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                MissionLogDebugString;                             // 0xB88(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2135[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bAllowBuildingCostMods : 1;                        // Mask: 0x1, PropSize: 0x10xBB0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFreeBuildingRepairs : 1;                          // Mask: 0x2, PropSize: 0x10xBB0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1FA : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2137[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowBuildingAtLayoutRequirements;                // 0xBB4(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowBuildingWithoutLayoutRequirements;           // 0xBB5(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2138[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowBuildingThroughBlockingObjects;              // 0xBB8(0x1)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2139[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortAIPawn*>                   DeployedDefenders;                                 // 0xBC0(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_213A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSurvivorsSpawned;                               // 0xC20(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSurvivorsDead;                                  // 0xC24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumSurvivorsRescued;                               // 0xC28(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_213B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnNumSurvivorsRescuedChangedDelegate;              // 0xC30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_213C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnplayableHitchThresholdInMs;                      // 0xC58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxUnplayableHitchesToTolerate;                    // 0xC5C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_213D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVoteData>                     GameplayVotesArray;                                // 0xC80(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_213E[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStateZone* GetDefaultObj();

	void UnregisterGameplayModifier(struct FActiveGameplayModifierHandle& InHandleToUnregister);
	void UnbindDelegateOnGameplayVoteUpdated(enum class EFortVoteType VoteType, UDelegateProperty_ Delegate);
	bool ShouldDisablePlayerTeleportingDuringMissionResults();
	bool SetDifficultyIncreaseRewardTier(int32 InDifficultyIncreaseTier);
	void SetBuildingAllowed(bool bBuildingAtLayoutRequirementsAllowed, bool bBuildingWithoutLayoutRequirementsAllowed);
	void ServerSubmitGameplayVote(enum class EFortVoteType VoteType, int32 VoteDecision, struct FUniqueNetIdRepl& PlayerNetId);
	void ServerFireAIDirectorEventBatch(TArray<struct FFortAIDirectorEvent>& Payload);
	void ServerFireAIDirectorEvent(enum class EFortAIDirectorEvent Event, class UObject* EventSource, class UObject* EventTarget, float EventMultiplier);
	void ServerEndGameplayVote(enum class EFortVoteType VoteType, struct FUniqueNetIdRepl& PlayerNetId);
	void ServerBeginGameplayVote(enum class EFortVoteType VoteType, struct FUniqueNetIdRepl& PlayerNetId, float VoteDuration, float FailedVoteLockOutDuration, enum class EFortVoteArbitratorType VoteArbitratorType);
	void RunPerfMemCheatScript(bool bStartStatFiles);
	void RemovePlayerAbilityRestriction();
	struct FActiveGameplayModifierHandle RegisterGameplayModifier(class UFortGameplayModifierItemDefinition* InModifierToRegister, int32 Expiration);
	void OnWaveStart(class FText& LevelText, int32 Level, class FText& WaveText, int32 WaveNum);
	void OnWaveEncounterStarted(struct FTieredWaveSetData& WaveData, class FText& LevelText, int32 Level, class FText& WaveText, int32 WaveNum);
	void OnWaveBasedModifiersAppliedMulticast(TArray<class UFortGameplayModifierItemDefinition*>& ModifiersApplied);
	void OnRep_ZoneDifficultyInfoRow();
	void OnRep_TheaterUniqueId();
	void OnRep_ReplicatedWorldTimeSeconds();
	void OnRep_PlayerStructuresChanged();
	void OnRep_PlayerSharedTrapAttributes();
	void OnRep_PlayerBuildingSkillLevel();
	void OnRep_NumSurvivorsRescued();
	void OnRep_MissionRewards();
	void OnRep_MissionGenerator();
	void OnRep_MissionAlertData();
	void OnRep_GameplayVotes();
	void OnRep_GameDifficulty();
	void OnRep_DifficultyIncreaseRewardTier();
	void OnRep_DifficultyIncreaseRewards();
	void OnRep_ActiveGameplayModifiers();
	void OnDefenderRemoved(class AFortAIPawn* Defender);
	void OnDefenderDeployed(class AFortAIPawn* Defender);
	void NotifySurvivorSpawned();
	void NotifySurvivorRescued(class AFortPlayerController* Rescuer, const class FString& SurvivorName);
	void NotifySurvivorDead();
	void NotifyEndFailedGameplayVoteLockout(enum class EFortVoteType VoteType);
	bool IsGameplayVoteLocked(enum class EFortVoteType VoteType);
	bool IsGameplayVoteActive(enum class EFortVoteType VoteType);
	bool IsDefenderItemDeployed(class UFortItem* DefenderItem, class AFortPlayerStateZone* RequestingPlayer);
	bool IsBuildingWithoutLayoutRequirementsAllowed();
	bool IsBuildingAtLayoutRequirementsAllowed();
	bool IsAnyGameplayVoteActive();
	bool HasActiveGameplayModifiers();
	void GloballyUnblockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToUnblock);
	void GloballyBlockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToBlock);
	bool GetVoteStartTime(enum class EFortVoteType VoteType, struct FDateTime* VoteStartTime);
	bool GetVoteInstigator(enum class EFortVoteType VoteType, struct FUniqueNetIdRepl* InstigatorNetId);
	bool GetVoteEndTime(enum class EFortVoteType VoteType, struct FDateTime* VoteEndTime);
	float GetVoteDuration(enum class EFortVoteType VoteType);
	class AFortInGameMapManager* GetUIMapManager();
	int32 GetTotalScore(enum class EStatCategory ScoreCategory);
	float GetTimeRemainingToEndVote(enum class EFortVoteType VoteType);
	float GetTimeRemainingToEndFailedVoteLockout(enum class EFortVoteType VoteType);
	float GetTimeElapsedSinceEndVote(enum class EFortVoteType VoteType);
	float GetTimeElapsedSinceBeginVote(enum class EFortVoteType VoteType);
	int32 GetNumSurvivorsSpawned();
	int32 GetNumSurvivorsRescued();
	int32 GetNumSurvivorsDead();
	int32 GetNumAllowedDifficultyIncreases();
	TArray<struct FUniqueNetIdRepl> GetGameplayVotesForChoice(enum class EFortVoteType VoteType, int32 VoteDecision);
	float GetGameDifficulty();
	float GetFailedVoteLockOutDuration(enum class EFortVoteType VoteType);
	class AFortAIPawn* GetDefenderToRemove(class AFortPlayerStateZone* PlayerCausingRemoval, class FName& RemoveFromDefenderSquadId, int32 SimulatedAdditionalDefenders, bool bDefenderRemovalCausedByPlayerJoin, bool* bOutCanSpawnDefender);
	bool GetCurrentVoters(enum class EFortVoteType VoteType, TArray<struct FVoter>* Voters);
	void GetActiveModifiers(TArray<class UFortGameplayModifierItemDefinition*>* OutActiveModifiers);
	bool CanSpawnDefender(class AFortPlayerStateZone* PlayerCausingRemoval, class FName& RemoveFromDefenderSquadId, class AFortAIPawn** OutDefenderToBeRemoved);
	void BindDelegateOnGameplayVoteUpdated(enum class EFortVoteType VoteType, UDelegateProperty_ Delegate);
	void ApplyPlayerAbilityRestriction();
};

// 0xF0 (0xDD8 - 0xCE8)
// Class FortniteGame.FortGameStatePvP
class AFortGameStatePvP : public AFortGameStateZone
{
public:
	int32                                        RoundTimeLimit;                                    // 0xCE8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoundTimeAccumulated;                              // 0xCEC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2147[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RoundTimeCriticalThreshold;                        // 0xCF4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoundTimeRemaining;                                // 0xCF8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StalemateTimeLimit;                                // 0xCFC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StalemateTimeRemaining;                            // 0xD00(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RestartTimeRemaining;                              // 0xD04(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FOBFinalizationTimeRemaining;                      // 0xD08(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2148[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinalizationFOBTimerExpired;                     // 0xD10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             RoundTimeExpiringSound;                            // 0xD20(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USoundBase>             StalemateTimeExpiringSound;                        // 0xD48(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ABuildingCapturePointActor*>    CapturePoints;                                     // 0xD70(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class ABuildingItemCollectorActor*           ItemCollector;                                     // 0xD80(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StartMatchDelayTimer;                              // 0xD88(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bGateCraftingOnTeamLevel : 1;                      // Mask: 0x1, PropSize: 0x10xD8C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1FB : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2149[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           MatchLevelCurve;                                   // 0xDA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MatchLevel;                                        // 0xDB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_214A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHandleMatchLevelChanged;                         // 0xDB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int32                                        TotalHomebaseRating;                               // 0xDC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AverageHomebaseRating;                             // 0xDCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseExperimentalCraftingFeature;                   // 0xDD0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_214B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStatePvP* GetDefaultObj();

	void SetMatchLevel(int32 InMatchLevel);
	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
	void OnRep_StalemateTimeRemaining();
	void OnRep_RoundTimeRemaining();
	void OnRep_MatchLevel();
	void OnRep_ItemCollector();
	bool IsExperimentalCraftingFeatureActive();
	int32 GetTotalHomebaseRating();
	int32 GetStartMatchDelayTimer();
	int32 GetRoundTimeAccumulated();
	int32 GetMatchLevel();
	class ABuildingItemCollectorActor* GetItemCollector();
	int32 GetFOBFinalizationTimeRemaining();
	int32 GetAverageHomebaseRating();
};

// 0x860 (0x1638 - 0xDD8)
// Class FortniteGame.FortGameStateAthena
class AFortGameStateAthena : public AFortGameStatePvP
{
public:
	uint8                                        Pad_2157[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCurrentPlaylistLoaded;                           // 0xDF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bPlaylistDataIsLoaded;                             // 0xE00(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaylistDataIsActivelyLoading;                    // 0xE01(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2158[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  CountdownTick;                                     // 0xE08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CountdownStarted;                                  // 0xE18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CountdownFinished;                                 // 0xE28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinalCountdownTick;                                // 0xE38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinalCountdownStarted;                             // 0xE48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  FinalCountdownFinished;                            // 0xE58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  CurrentHighScoreUpdated;                           // 0xE68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_215B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlaylistTimeRemaining;                             // 0xE80(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrevPlaylistTimeRemaining;                         // 0xE84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalFinalCountdownTime;                           // 0xE88(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceTeamScorePlacementOnDeath;                   // 0xE8C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlaylistStoppedSafeZonePhases;                    // 0xE8D(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSpecialActorReplicationInfo*      SpecialActorData;                                  // 0xE90(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ABuildingActor>>    BuildingActorClasses;                              // 0xE98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WinnerAnnounced;                                   // 0xEA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WinningTeamAnnounced;                              // 0xEB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GamePhaseChanged;                                  // 0xEC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  WinningScoreDetermined;                            // 0xED8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  GamePhaseStepChanged;                              // 0xEE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  StormProgressStopped;                              // 0xEF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayersLeftChanged;                              // 0xF08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsInCountdown;                                    // 0xF18(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInFinalCountdown;                               // 0xF19(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WarmupCountdownStartTime;                          // 0xF1C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarmupCountdownEndTime;                            // 0xF20(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftStartTime;                                 // 0xF24(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeZonesStartTime;                                // 0xF28(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndGameStartTime;                                  // 0xF2C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EndGameKickPlayerTime;                             // 0xF30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalPlayers;                                      // 0xF34(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayersLeft;                                       // 0xF38(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                TeamXPlayersLeft;                                  // 0xF40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TeamsLeft;                                         // 0xF50(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_215F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       ServerToClientPreloadList;                         // 0xF58(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAthenaBattleBusItemDefinition*        DefaultBattleBus;                                  // 0xF68(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowUserPickedCosmeticBattleBus;                 // 0xF70(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2160[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAircraftFlightInfo>           TeamFlightPaths;                                   // 0xF78(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAircraftFlightInfo                   FlightPathMidLine;                                 // 0xF88(0x28)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                             DropZoneCenter;                                    // 0xFB0(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             FlightPathSelectionCenter;                         // 0xFB8(0x8)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                             UtcTimeStartedMatch;                               // 0xFC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLargeTeamGame;                                  // 0xFC8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2161[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerState*                          WinningPlayerState;                                // 0xFD0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2162[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WinningTeam;                                       // 0xFE8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WinningScore;                                      // 0xFEC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHighScore;                                  // 0xFF0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentHighScoreTeam;                              // 0xFF4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                          KillFeedEntry;                                     // 0xFF8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2163[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  KillFeedUpdated;                                   // 0x1018(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerState*>              SpectatorArray;                                    // 0x1028(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	enum class EAirCraftBehavior                 AirCraftBehavior;                                  // 0x1038(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStormReachedFinalPosition;                        // 0x1039(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFriendlyFireType                 FriendlyFireType;                                  // 0x103A(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2164[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentPlaylistId;                                 // 0x103C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortSafeZoneIndicator*                SafeZoneIndicator;                                 // 0x1040(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapBackgroundBrush;                            // 0x1048(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            MinimapBackgroundImage;                            // 0x10D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapBackgroundMID;                              // 0x10D8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapCircleMID;                                  // 0x10E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapNextCircleMID;                              // 0x10E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FullmapCircleMID;                                  // 0x10F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              FullmapNextCircleMID;                              // 0x10F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapSafeZoneBrush;                              // 0x1100(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapCircleBrush;                                // 0x1188(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapNextCircleBrush;                            // 0x1210(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FullMapCircleBrush;                                // 0x1298(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FullMapNextCircleBrush;                            // 0x1320(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MinimapSafeZoneFinalPosBrush;                      // 0x13A8(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AircraftPathBrush;                                 // 0x1430(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AircraftMidlinePathBrush;                          // 0x14B8(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AircraftPathTeamIndicatorBrush;                    // 0x1540(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapBackgroundDrawingMaterial;                  // 0x15C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapCircleDrawingMaterial;                      // 0x15D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapNextCircleDrawingMaterial;                  // 0x15D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortAthenaMapInfo*                    MapInfo;                                           // 0x15E0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaGamePhase                  GamePhase;                                         // 0x15E8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2167[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPlaylistAthena*                   CurrentPlaylistData;                               // 0x15F0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGameModeWillSkipAircraft;                         // 0x15F8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        SafeZonePhase;                                     // 0x15F9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAthenaGamePhaseStep              GamePhaseStep;                                     // 0x15FA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2168[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamePhaseStepTimeRemaining;                        // 0x15FC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundMix*                             LobbySoundMix;                                     // 0x1600(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortAthenaAircraft*>           Aircrafts;                                         // 0x1608(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        bAircraftIsLocked : 1;                             // Mask: 0x1, PropSize: 0x10x1618(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1FC : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_216A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESafeZoneStartUp                  CachedSafeZoneStartUp;                             // 0x161C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_216B[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStateAthena* GetDefaultObj();

	void OnWinnerAnnounced();
	void OnRep_WinningTeam();
	void OnRep_WinningScore();
	void OnRep_WinningPlayerState();
	void OnRep_UtcTimeStartedMatch(struct FDateTime& OldUtcTimeStartedMatch);
	void OnRep_PlaylistTimeRemaining();
	void OnRep_PlayersLeft();
	void OnRep_GamePhase(enum class EAthenaGamePhase OldGamePhase);
	void OnRep_CurrentPlaylistId();
	void OnRep_CurrentPlaylistData();
	void OnRep_CurrentHighScore();
	void OnRep_bPlaylistStoppedSafeZonePhases();
	void OnRep_Aircraft();
	void OnCurrentPlaylistLoaded__DelegateSignature(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContextTags);
	class AFortSafeZoneIndicator* GetSafeZoneIndicator();
	class FName GetCurrentPlaylistName();
	class UAthenaBattleBusItemDefinition* GetBattleBusForPlayer(class AFortPlayerControllerAthena* PC);
	struct FGameplayTagContainer GetAthenaPlaylistContextTags();
	class AFortAthenaAircraft* GetAircraft(int32 AircraftIndex);
	enum class EAthenaAerialPhase GetAerialPhase(class AFortPlayerControllerAthena* PlayerController);
};

// 0x40 (0xD28 - 0xCE8)
// Class FortniteGame.FortGameStateDeployableBase
class AFortGameStateDeployableBase : public AFortGameStateZone
{
public:
	class AFortDeployableBaseManager*            DeployableBaseManager;                             // 0xCE8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnDeployableBaseManagerCreated;                    // 0xCF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         bFireEndOfDayDelegate;                             // 0xD00(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_216F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHordeDifficultyTierInfo>      TierDifficultyConfig;                              // 0xD08(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FHordeDifficultyTierInfo>      PrestigeTierDifficultyConfig;                      // 0xD18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortGameStateDeployableBase* GetDefaultObj();

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
	void SetGameDifficultyExplicitly(float InGameDifficulty);
	void OnRep_DeployableBaseManager();
	enum class EDeployableBaseUseType GetDeployableBaseUseType();
};

// 0x18 (0xD00 - 0xCE8)
// Class FortniteGame.FortGameStateFOB
class AFortGameStateFOB : public AFortGameStateZone
{
public:
	UMulticastDelegateProperty_                  OnBuildingDestroyedDel;                            // 0xCE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2171[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStateFOB* GetDefaultObj();

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
	void SetGameDifficultyExplicitly(float InGameDifficulty);
};

// 0x0 (0x5E0 - 0x5E0)
// Class FortniteGame.FortGameStateFrontEnd
class AFortGameStateFrontEnd : public AFortGameState
{
public:

	static class UClass* StaticClass();
	static class AFortGameStateFrontEnd* GetDefaultObj();

};

// 0x50 (0xD38 - 0xCE8)
// Class FortniteGame.FortGameStateKeep
class AFortGameStateKeep : public AFortGameStateZone
{
public:
	struct FPermaniteBoundariesInfo              PermaniteBoundariesData;                           // 0xCE8(0x14)(Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2174[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStateKeep* GetDefaultObj();

	void OnRep_PermaniteBoundariesInfo();
};

// 0x60 (0xD48 - 0xCE8)
// Class FortniteGame.FortGameStateManor
class AFortGameStateManor : public AFortGameStateZone
{
public:
	uint8                                        Pad_2175[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStateManor* GetDefaultObj();

};

// 0x8 (0xCF0 - 0xCE8)
// Class FortniteGame.FortGameStateOutpost
class AFortGameStateOutpost : public AFortGameStateZone
{
public:
	bool                                         bOutpostDefenseActive;                             // 0xCE8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2177[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortGameStateOutpost* GetDefaultObj();

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
};

// 0xF0 (0xEC8 - 0xDD8)
// Class FortniteGame.FortGameStatePvPBaseDestruction
class AFortGameStatePvPBaseDestruction : public AFortGameStatePvP
{
public:
	class FName                                  SessionXPRowName;                                  // 0xDD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRichCurve                            TeamLevelToSessionXPCurve;                         // 0xDE0(0x70)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FRichCurve                            SessionXPToTeamLevelCurve;                         // 0xE50(0x70)(Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxTeamLevel;                                      // 0xEC0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxTeamExperience;                                 // 0xEC4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameStatePvPBaseDestruction* GetDefaultObj();

	int32 GetTeamLevelForExperienceAmount(int32 Experience);
	int32 GetMaxTeamLevel();
	int32 GetMaxTeamExperience();
	int32 GetExperienceRequiredForTeamLevel(int32 TeamLevel);
};

// 0x8 (0xCF0 - 0xCE8)
// Class FortniteGame.FortGameStateSurvival
class AFortGameStateSurvival : public AFortGameStateZone
{
public:
	bool                                         bFireEndOfDayDelegate;                             // 0xCE8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_217D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToDelayEndOfDayZoneScoreWidgetDisplay;         // 0xCEC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGameStateSurvival* GetDefaultObj();

	void SetGameDifficultyRow(struct FDataTableRowHandle& GameDifficultyInfo);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortGameUIExtenderAthena
class UFortGameUIExtenderAthena : public UObject
{
public:
	class APlayerController*                     Owner;                                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortGameUIExtenderAthena* GetDefaultObj();

	void GoToBossCommand();
	bool CanShowGoToBossCommand();
};

// 0x360 (0x470 - 0x110)
// Class FortniteGame.FortGameUserSettings
class UFortGameUserSettings : public UGameUserSettings
{
public:
	float                                        MouseSensitivity;                                  // 0x110(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        FortVersion;                                       // 0x114(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2181[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         UnlockConsoleFPS;                                  // 0x130(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LastAppliedUnlockConsoleFPS;                       // 0x131(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2182[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentConsoleFPSMode;                             // 0x134(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SubGameSelectCount_Athena;                         // 0x138(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2183[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             SubGameLastSelectedTime_Athena;                    // 0x140(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SubGameSelectCount_Campaign;                       // 0x148(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2184[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             SubGameLastSelectedTime_Campaign;                  // 0x150(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CustomVoiceChatInputDevice;                        // 0x158(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomVoiceChatOutputDevice;                       // 0x168(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMotionBlur;                                       // 0x178(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGrass;                                        // 0x179(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFPS;                                          // 0x17A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2185[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FDateTime>          NamedTimes;                                        // 0x180(0x50)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastSeenAthenaStoreRefreshTime;                    // 0x1D0(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastSeenAthenaStoreWeeklyEndTime;                  // 0x1D8(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LastSelectedPlaylist;                              // 0x1E0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         LastSelectedFillOption;                            // 0x1E8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2186[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastNewsVersionViewedBR;                           // 0x1F0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastNewsVersionViewedSTW;                          // 0x200(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEulaAccepted;                                     // 0x210(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2187[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EulaAcceptedUserId;                                // 0x218(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                             LastEulaCheckTime;                                 // 0x228(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHUDLayoutData                        HUDLayoutData[0x3];                                // 0x230(0x30)(Config, NativeAccessSpecifierPublic)
	struct FHUDLayoutUsageData                   HUDLayoutUsageData;                                // 0x260(0x10)(Config, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        bTimesSeenBacchusLoadTutorial;                     // 0x270(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSeenTapToShoot;                                // 0x274(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSeenPanningTip;                                // 0x275(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFireModeType                     FireModeType;                                      // 0x276(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2188[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortSimpleGameStats                  SimpleMobileStats;                                 // 0x278(0x18)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        InitialBenchmarkState;                             // 0x290(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableMouseAcceleration;                         // 0x294(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESavedAccountType                 ChosenLoginType;                                   // 0x295(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2189[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnViewDistanceQualityChanged;                      // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShadowQualityChanged;                            // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAntiAliasingQualityChanged;                      // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTextureQualityChanged;                           // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEffectsQualityChanged;                           // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPostProcessQualityChanged;                       // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_218A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSavedCredentials>             Credentials;                                       // 0x348(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	int32                                        SocialImportOptedOutVersion;                       // 0x358(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSeenErebusSocialImport;                        // 0x35C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_218B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastSocialImportPromptTime;                        // 0x360(0x8)(Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SocialImportPromptCountCurrentVersion;             // 0x368(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SocialImportPromptCountAllVersions;                // 0x36C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSocialImportDisplayed;                            // 0x370(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowLowPowerMode;                                // 0x371(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_218C[0xFE];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameUserSettings* GetDefaultObj();

	void ToggleScalabilityMode(enum class EFortScalabilityMode Mode, bool bEnabled);
	void SetHasSeenTapToShoot(bool bHasSeenIt);
	void SetHasSeenPanningTip(bool bHasSeenIt);
	void ResetToDefaultDeviceScalability();
	void ResetScalabilityModes();
	bool GetHasSeenTapToShoot();
	bool GetHasSeenPanningTip();
};

// 0x40 (0x338 - 0x2F8)
// Class FortniteGame.FortGameViewportClient
class UFortGameViewportClient : public UGameViewportClient
{
public:
	class FText                                  NetworkFailureMessage;                             // 0x2F8(0x18)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_218E[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGameViewportClient* GetDefaultObj();

};

// 0x48 (0x128 - 0xE0)
// Class FortniteGame.FortGiftBoxItem
class UFortGiftBoxItem : public UFortAccountItem
{
public:
	struct FGiftBoxInfo                          GiftBoxInfo;                                       // 0xE0(0x48)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortGiftBoxItem* GetDefaultObj();

	bool TryGetParamString(const class FString& ParamName, class FString* OutValue);
	class UFortItemDefinition* RetrieveItemDefintionFromParam(const class FString& ParamName);
	bool IsVisibleIn(enum class ESubGame SubGame);
	bool HasParam(const class FString& ParamName);
	class UFortGiftBoxItemDefinition* GetGiftBoxDefinition();
	class FText FormatTextUsingParams(class FText& FormatString);
};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortGiftBoxItemDefinition
class UFortGiftBoxItemDefinition : public UFortAccountItemDefinition
{
public:
	TSubclassOf<class UUserWidget>               GiftBoxPreMessageWidget;                           // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               GiftBoxHeaderSubWidget;                            // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortGiftWrapType                 GiftWrapType;                                      // 0x340(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2196[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortPriority;                                      // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                ItemDisplayAsset;                                  // 0x348(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReuseExistingBoxIfPossible;                       // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESubGame                          RestrictToSubgame;                                 // 0x371(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2197[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGiftBoxItemDefinition* GetDefaultObj();

};

// 0x68 (0x3C0 - 0x358)
// Class FortniteGame.FortGliderAnimInstance
class UFortGliderAnimInstance : public UAnimInstance
{
public:
	float                                        DeltaTime;                                         // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2199[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerParachute*                  OwnerGlider;                                       // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       OwnerFortPawn;                                     // 0x368(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAnimInput_Skydiving              SkydivingState;                                    // 0x370(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_219A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGliderAnimInstance* GetDefaultObj();

	void SetGliderFullyDeployed(bool bIsFullyDeployed);
};

// 0x0 (0x328 - 0x328)
// Class FortniteGame.FortGlobalAbilityTargetingActor
class AFortGlobalAbilityTargetingActor : public AInfo
{
public:

	static class UClass* StaticClass();
	static class AFortGlobalAbilityTargetingActor* GetDefaultObj();

};

// 0x18 (0x340 - 0x328)
// Class FortniteGame.FortGlobalEnvironmentAbilityActor
class AFortGlobalEnvironmentAbilityActor : public AInfo
{
public:
	uint8                                        Pad_219C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortDamageSet*                        DamageSet;                                         // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortGlobalEnvironmentAbilityActor* GetDefaultObj();

};

// 0x1A0 (0x1C8 - 0x28)
// Class FortniteGame.FortGlobals
class UFortGlobals : public UObject
{
public:
	class FString                                LobbyMap;                                          // 0x28(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinTheaterListRefreshDelay;                        // 0x38(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTheaterListRefreshDelay;                        // 0x3C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCullObjectSize;                                 // 0x40(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCullDistance;                                   // 0x44(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullObjectSize;                                 // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullDistance;                                   // 0x4C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewCustomizationPanel;                      // 0x50(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInfluenceMap;                               // 0x51(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAIDespawning;                               // 0x52(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAutoSlotting;                               // 0x53(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableDBNO;                                       // 0x54(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxAssetsToPreload;                                // 0x58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyPreloadCity;                                  // 0x5C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInWorldScoreNumbers;                        // 0x5D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMustUseToggleJetpackExecute;                      // 0x5E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewRewardFlow;                              // 0x5F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableWIFE;                                       // 0x60(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFrontendCrafting;                           // 0x61(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFrontendStorage;                            // 0x62(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLazyASC;                                    // 0x63(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendCodes;                                // 0x64(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLoginFailureLogSubmitOptions         LoginFailureOptions;                               // 0x68(0x20)(Config, NativeAccessSpecifierPublic)
	struct FPurchaseFailureLogSubmitOptions      RealMoneyPurchaseFailureOptions;                   // 0x88(0x20)(Config, NativeAccessSpecifierPublic)
	bool                                         bSubmitReturnToMenuErrorLogs;                      // 0xA8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReturnToMenuErrorLogTailKb;                        // 0xAC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReturnToMenuErrorLogSubmitChance;                  // 0xB0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPartyFailureLogSubmit                PartyJoinFailureLogSubmit;                         // 0xB8(0x20)(Config, NativeAccessSpecifierPublic)
	bool                                         bShowSkillTreeMovies;                              // 0xD8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMissionResultsMovies;                         // 0xD9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisablePlayerTeleportDuringMissionResults;        // 0xDA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableParticleEffectsDuringMissionResults;       // 0xDB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFlushGPUWhenPlayerIsTeleportedAtEndOfZone;        // 0xDC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone; // 0xDD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTwitchEnabled;                                    // 0xDE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAccountLinkingEnabled;                            // 0xDF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAccountLinkingUIConfig       AccountLinkingUIConfig;                            // 0xE0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AccountLinkingUIURL;                               // 0xE8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAccountLinkingUIURLButton;                  // 0xF8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTwitchHeartbeatEnabled;                           // 0xF9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTwitchAllowDisplayViewernames;                    // 0xFA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21AF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTwitchViewerNamesToCache;                       // 0xFC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TwitchViewerNameExpirationMinutes;                 // 0x100(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinTwitchHeartbeatInterval;                        // 0x104(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TwitchAccountInformationRefreshInterval;           // 0x108(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowLogout;                                      // 0x10C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowQuit;                                        // 0x10D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasWorldMap;                                      // 0x10E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayerUnregistrationFailsafeTimer;                 // 0x110(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PollForDedicatedServerReadyToShutdownInterval;     // 0x114(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUploadAthenaStats;                                // 0x118(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUploadAthenaStatsV2;                              // 0x119(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTimePlayedStat;                            // 0x11A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaStatsFrontendEnabled;                       // 0x11B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaLeaderboardFrontEndEnabled;                 // 0x11C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaSquadQuickChatEnabled;                      // 0x11D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AthenaQuickChatRangeForNonSquadTeamMembers;        // 0x120(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGlobalLeaderboardsFrontEndEnabled;                // 0x124(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TimeBetweenLeaderboardRequestsMinutes;             // 0x128(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSecondsBetweenUnimportantPresenceUpdates;       // 0x12C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFirstShotAccuracyDisabled;                        // 0x130(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaUsesSimCollision;                           // 0x131(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaSimVehicles;                                // 0x132(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaSubstepping;                                // 0x133(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCampaignSubstepping;                              // 0x134(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCampaignUsesSimCollision;                         // 0x135(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCampaignSimVehicles;                              // 0x136(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B3[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaximumCharacterVelocity;                          // 0x138(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B4[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       AthenaReferencedObjects;                           // 0x148(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        NumOutstandingAthenaAsyncRequests;                 // 0x158(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalAthenaAsyncRequests;                          // 0x15C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  AthenaAlwaysLoadedContentHack;                     // 0x160(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowXboxStwToken;                                // 0x188(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B5[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSubGameAccess>                SubGameAccess;                                     // 0x1A8(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21B6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortGlobals* GetDefaultObj();

	bool UninstallAllOnDemandChunks();
	bool ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone();
	bool ShouldShowSkillTreeMovies();
	bool ShouldShowMissionResultsMovies();
	bool ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone();
	bool ShouldDisablePlayerTeleportDuringMissionResults();
	bool ShouldDisableParticleEffectsDuringMissionResults();
	bool IsWIFEEnabled();
	bool IsTwitchEnabled();
	bool IsTencentBuild();
	bool IsNewRewardFlowEnabled();
	bool IsMobileGame(class UObject* WorldContextObject);
	bool IsInSubGame(enum class ESubGame SubGame);
	bool IsInAthena();
	bool IsFrontendStorageEnabled();
	bool IsFrontendCraftingEnabled();
	bool IsFirstShotAccuracyDisabled();
	bool IsErebusWithVoice();
	bool IsErebus();
	bool IsDisplayingTwitchViewerNamesAllowed();
	bool IsBROnly();
	bool IsAllContentInstalled();
	bool IsAccountLinkingUIURLButtonEnabled();
	bool IsAccountLinkingEnabled();
	bool InstallAllOnDemandChunks();
	enum class EChunkInstallState GetOnDemandChunksInstallState();
	int32 GetMinTheaterListRefreshDelay();
	int32 GetMaxTheaterListRefreshDelay();
	enum class ESubGame GetCurrentSubGame();
	class FString GetAccountLinkingUIURL();
	enum class EFortAccountLinkingUIConfig GetAccountLinkingUIConfig();
	bool AreFriendCodesEnabled();
};

// 0xA0 (0xD0 - 0x30)
// Class FortniteGame.FortGuidedMissilePackSet
class UFortGuidedMissilePackSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            MaxMissiles;                                       // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Missiles;                                          // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMaxMissiles;                                // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMissiles;                                   // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReloadDelay;                                       // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortGuidedMissilePackSet* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortHealing
class UFortHealing : public UFortGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UFortHealing* GetDefaultObj();

};

// 0x58 (0x290 - 0x238)
// Class FortniteGame.FortHealthBarComponent
class UFortHealthBarComponent : public USceneComponent
{
public:
	class ABuildingActor*                        BuildingActorOwner;                                // 0x238(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  DisplayText;                                       // 0x240(0x18)(Edit, Net, DisableEditOnInstance, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsHealthBarVisible;                               // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistance;                                       // 0x25C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ScaleOverDistanceCurve;                            // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClampToScreen;                                    // 0x268(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowClampToScreenArrow;                           // 0x269(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveLinearColor*                     HealthBarColorCurve;                               // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21B9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHealthBarComponent* GetDefaultObj();

	void SetHealthBarWidgetVisibility(bool bIsVisible);
	void SetHealthBarVisibility(bool bNewVisibleState);
	void SetHealthBarDisplayText(class FText NewDisplayText);
	void OnRep_IsVisible();
	void OnRep_DisplayText();
	class FText GetHealthBarDisplayText();
};

// 0x38 (0x88 - 0x50)
// Class FortniteGame.FortSlateHUDIndicator
class UFortSlateHUDIndicator : public UFortIndicator
{
public:
	uint8                                        Pad_21BA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bClampToScreen;                                    // 0x58(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowClampToScreenArrow;                           // 0x59(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BB[0x2E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSlateHUDIndicator* GetDefaultObj();

};

// 0x38 (0xC0 - 0x88)
// Class FortniteGame.FortHealthBarIndicator
class UFortHealthBarIndicator : public UFortSlateHUDIndicator
{
public:
	uint8                                        Pad_21BD[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHealthBarIndicator* GetDefaultObj();

};

// 0xE0 (0x110 - 0x30)
// Class FortniteGame.FortHelpItem
class UFortHelpItem : public UDataAsset
{
public:
	enum class EFortHelpItemType                 ItemType;                                          // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21BE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemId;                                            // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  HeaderName;                                        // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  BodyText;                                          // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortHelpAdditionalContent            AdditionalContent;                                 // 0x70(0xA0)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortHelpItem* GetDefaultObj();

	TArray<class UFortHelpItem*> GetSubItems();
	class UFortHelpItem* GetItemWithID(class FName _ItemID);
};

// 0x20 (0x130 - 0x110)
// Class FortniteGame.FortHelpItemCategory
class UFortHelpItemCategory : public UFortHelpItem
{
public:
	TArray<class UFortHelpItem*>                 AssetSubItems;                                     // 0x110(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortHelpItem*>                 InlineSubItems;                                    // 0x120(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortHelpItemCategory* GetDefaultObj();

};

// 0x0 (0x110 - 0x110)
// Class FortniteGame.FortHelpItemEntry
class UFortHelpItemEntry : public UFortHelpItem
{
public:

	static class UClass* StaticClass();
	static class UFortHelpItemEntry* GetDefaultObj();

};

// 0xB0 (0x1A8 - 0xF8)
// Class FortniteGame.FortWorker
class UFortWorker : public UFortCharacter
{
public:
	class FString                                Slotted_building_id;                               // 0xF8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        building_slot_used;                                // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Gender;                                            // 0x10C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Personality;                                       // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Set_bonus;                                         // 0x120(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Portrait;                                          // 0x130(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 PersonalityTag;                                    // 0x140(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 SetBonusTag;                                       // 0x160(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortItemIconDefinition> IconDefinition;                                    // 0x180(0x28)(Edit, Transient, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortWorker* GetDefaultObj();

	class UFortWorkerType* GetWorkerTypeBP();
	bool GetTertiaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, enum class EFortBrushSize BrushSize);
	bool GetSecondaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, enum class EFortBrushSize BrushSize);
};

// 0x70 (0x218 - 0x1A8)
// Class FortniteGame.FortHero
class UFortHero : public UFortWorker
{
public:
	class FString                                Hero_name;                                         // 0x1A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Equipped_cosmetics;                                // 0x1B8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortSavedModeLoadout>         Mode_loadouts;                                     // 0x1C8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortHeroSpecialization*>       Specializations;                                   // 0x1D8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortAbilityKit*>               SpecializationAbilityKits;                         // 0x1E8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortCharacterCosmeticItem*            CosmeticItem;                                      // 0x1F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCustomCharacterPart*>          CharacterParts;                                    // 0x200(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_21C5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHero* GetDefaultObj();

	bool IsLevelClamped();
	int32 GetUnclampedLevel();
	class UFortHeroType* GetHeroTypeBP();
	class FText GetDisplayName();
};

// 0x18 (0x380 - 0x368)
// Class FortniteGame.FortHeroExhibitActor
class AFortHeroExhibitActor : public AFortExhibitActor
{
public:
	class UFortHeroType*                         HeroType;                                          // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerPawn*                       HeroExhibitPawn;                                   // 0x370(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortHeroExhibitActor* GetDefaultObj();

};

// 0x238 (0x268 - 0x30)
// Class FortniteGame.FortHeroSpecialization
class UFortHeroSpecialization : public UPrimaryDataAsset
{
public:
	TArray<struct FFortSpecializationSlot>       SpecializationSlots;                               // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortSpecializationSlot>       TacticalAbilitySlots;                              // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortSpecializationSlot>       SupportAbilitySlots;                               // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UFortCharacterCosmeticItemDefinition> CosmeticItem;                                      // 0x60(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UCustomCharacterPart>> CharacterParts;                                    // 0x88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	enum class EFortAlteration                   AlterationType;                                    // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_21C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements;                             // 0xA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 RequiredTags;                                      // 0xB0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           CardIconBrush[0x3];                                // 0xD0(0x198)(Edit, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortHeroSpecialization* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class FortniteGame.FortHeroTooltip
class UFortHeroTooltip : public UFortCharacterTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortHeroTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0xA0 (0x3D0 - 0x330)
// Class FortniteGame.FortWorkerType
class UFortWorkerType : public UFortCharacterType
{
public:
	enum class EFortCustomGender                 Gender;                                            // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemIconDefinition> FixedPortrait;                                     // 0x338(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsManager;                                        // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_21D2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ManagerSynergyTag;                                 // 0x368(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 FixedPersonalityTag;                               // 0x388(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 FixedSetBonusTag;                                  // 0x3A8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        MatchingPersonalityBonus;                          // 0x3C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MismatchingPersonalityPenalty;                     // 0x3CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortWorkerType* GetDefaultObj();

};

// 0x1B0 (0x580 - 0x3D0)
// Class FortniteGame.FortHeroType
class UFortHeroType : public UFortWorkerType
{
public:
	uint8                                        Pad_21D5[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortHeroSpecialization>> Specializations;                                   // 0x3F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> DefaultMontageLookupTable;                         // 0x408(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMontageLookupTable> OverrideMontageLookupTable;                        // 0x430(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHeroAbilityKit>               AbilityKits;                                       // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayEffectApplicationInfo> CombinedStatGEs;                                   // 0x468(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FHeroItem>                     HeroItems;                                         // 0x478(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 RequiredGPTags;                                    // 0x488(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortFeedbackBank>      MaleOverrideFeedback;                              // 0x4A8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortFeedbackBank>      FemaleOverrideFeedback;                            // 0x4D0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortPlayerPawn>         OverridePawnClass;                                 // 0x4F8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UFrontendAnimInstance>   FrontEndAnimClass;                                 // 0x520(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  SubType;                                           // 0x548(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x560(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   LegacyStatHandle;                                  // 0x570(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortHeroType* GetDefaultObj();

	class FText GetSubType();
	class UFortFeedbackBank* GetMaleOverrideFeedback();
	TSubclassOf<class UFrontendAnimInstance> GetFrontendAnimClass();
	class UFortFeedbackBank* GetFemaleOverrideFeedback();
};

// 0x20 (0x348 - 0x328)
// Class FortniteGame.FortHexMapMarkerBase
class AFortHexMapMarkerBase : public AActor
{
public:
	TArray<class UMaterialInstanceDynamic*>      CurrentMIDs;                                       // 0x328(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       IdleAnimation;                                     // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                SkelMeshComponent;                                 // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortHexMapMarkerBase* GetDefaultObj();

};

// 0x10 (0x348 - 0x338)
// Class FortniteGame.FortStaticMeshActor
class AFortStaticMeshActor : public AStaticMeshActor
{
public:
	TArray<class UNavRelevantComponent*>         LinkComps;                                         // 0x338(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortStaticMeshActor* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class FortniteGame.FortHLODSMActor
class AFortHLODSMActor : public AFortStaticMeshActor
{
public:
	class FName                                  ActorFName;                                        // 0x348(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UniqueWorldLocation;                               // 0x350(0xC)(Edit, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21D7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortHLODSMActor* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortHomebaseBannerColorItem
class UFortHomebaseBannerColorItem : public UFortAccountItem
{
public:
	class FName                                  ColorRowName;                                      // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortHomebaseBannerColorItem* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortHomebaseBannerColorItemDefinition
class UFortHomebaseBannerColorItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortHomebaseBannerColorItemDefinition* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortHomebaseBannerColorMap
class UFortHomebaseBannerColorMap : public UDataAsset
{
public:
	TMap<class FName, struct FHomebaseBannerColor> ColorMap;                                          // 0x30(0x50)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortHomebaseBannerColorMap* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class FortniteGame.FortHomebaseBannerIconItem
class UFortHomebaseBannerIconItem : public UFortAccountItem
{
public:
	class FName                                  BannerRowName;                                     // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortHomebaseBannerIconItem* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortHomebaseBannerIconItemDefinition
class UFortHomebaseBannerIconItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortHomebaseBannerIconItemDefinition* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAsyncAction_HomebaseContextPurchaseNode
class UFortAsyncAction_HomebaseContextPurchaseNode : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPPurchaseSucceeded;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMCPPurchaseFailed;                               // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UHomeBaseContext>       HomeBaseContext;                                   // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  IdOfNodeToPurchase;                                // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_HomebaseContextPurchaseNode* GetDefaultObj();

	class UFortAsyncAction_HomebaseContextPurchaseNode* PurchaseNode(class UHomeBaseContext* HomeBaseContext, class FName& IdOfNodeToPurchase);
	void OnMCPRequestComplete__DelegateSignature();
};

// 0xA8 (0xD0 - 0x28)
// Class FortniteGame.HomeBaseContext
class UHomeBaseContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnWorkerPreviewStateChanged;                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHomebaseInventoryUpdated;                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMaximumItemLevelChanged;                         // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemUpgradePointsChanged;                        // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  SquadSlotMarkedAsSeen;                             // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_21EE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPlayerInfoChangedDelegate;                       // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_21EF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnItemSlottingPreviewInfoChangedEvent;             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_21F0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHomeBaseContext* GetDefaultObj();

	bool TryGetHomebaseSquadData(class FName SquadId, struct FHomebaseSquad* OutHomebaseSquad);
	bool TryGetHomebaseNodePageData(class FName NodePageId, struct FHomebaseNodePage* OutHomebaseNodePage);
	bool TryGetHomebaseNodeData(class FName NodeID, struct FHomebaseNode* OutHomebaseNode);
	class FName GetUnlockingHomebaseNodeIdForSquadSlot(class FName SquadId, int32 SquadSlotIndex);
	int32 GetTotalSkillPointsEarned();
	bool GetTotalHomebaseRating(struct FUniqueNetIdRepl& UniqueId, int32* Rating, float* ProgressFraction);
	bool GetTeamHomebaseRating(struct FUniqueNetIdRepl& PlayerID, int32* Rating, float* ProgressFraction);
	void GetStaticSetBonusData(struct FGameplayTag& InSetBonusTag, struct FWorkerSetBonusData* OutSetBonusData, struct FFortMultiSizeBrush* OutBrush);
	void GetSquadSlotOfItem(class UFortItem* Item, class FName* OutSquadId, int32* OutSquadSlotIndex);
	void GetResourceCollectorRewardsEstimates(TArray<class UFortCollectedResourceItem*>& CollectorTypes, TArray<struct FFortItemQuantityPair>* OutEstimates);
	void GetResourceCollectorRewardsEstimate(class UFortCollectedResourceItem* CollectorType, struct FFortItemQuantityPair* OutEstimate);
	void GetResourceCollectorRateInfo(class UFortCollectedResourceItem* CollectorType, float* RatePerSecond, int32* MaxCapacity);
	int32 GetNumAccountLimitedItems();
	class FName GetNodePageIdForHomebaseNode(class FName NodeID);
	bool GetLocalTeamHomebaseRating(int32* Rating, float* ProgressFraction);
	bool GetLocalPlayerHomebaseRating(int32* Rating, float* ProgressFraction);
	TArray<class UFortItem*> GetItemsInSquad(class FName SquadId, bool UsePreviewState, bool bRemoveEmptySquadSlots, TSubclassOf<class UFortItem> OfClassType);
	void GetAllResourceCollectorRewardEstimates(TArray<struct FFortItemQuantityPair>* OutEstimates);
	class FName GetActiveDefenderSquadId();
	class FName GetActiveCombatSquadId();
	void ClearFrontEndOnlyExpeditionSquad(class FName SquadId);
	void BroadcastSquadSlotMarkedAsSeen();
};

// 0x248 (0x278 - 0x30)
// Class FortniteGame.FortHomebaseManager
class UFortHomebaseManager : public UDataAsset
{
public:
	class FName                                  EarlyGameStartingNodePageId;                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EarlyGameStartingNodeId;                           // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredNumberOfNodesToLeaveEarlyGame;             // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2202[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StartingNodePageId;                                // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StartingNodeId;                                    // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            HomebaseNodePageDataTable;                         // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            HomebaseNodeDataTable;                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHomebaseNodeGameplayEffectDataTable* HomebaseNodeGameplayEffectDataTable;               // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           QuestNodeTintColour;                               // 0x70(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UDataTable*                            HomebaseSquadDataTable;                            // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ExpeditionSlotsDataTable;                          // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ManagerSquadSynergyBonusTable;                     // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SquadGE;                                           // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorkerPersonalityData>        WorkerPersonalities;                               // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWorkerSetBonusData>           WorkerSetBonuses;                                  // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FManagerSynergyData>           ManagerSynergies;                                  // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2204[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHomebaseManager* GetDefaultObj();

	bool IsSquadSlotUnlocked(class FName SquadId, int32 SlotIdx, class UFortMcpProfileCampaign* McpProfile);
	bool IsNodeOwned(class FName NodeID, class UFortMcpProfileCampaign* McpProfile);
	class UFortWorker* GetWorkerInSquadSlot(class FName SquadId, int32 SlotIdx, class UFortMcpProfileCampaign* McpProfile);
	void GetSquadPopulation(class FName SquadId, class UFortMcpProfileCampaign* McpProfile, TArray<class UFortWorker*>* OutSquadMembers);
	bool GetSquadCopyById(class FName SquadId, struct FHomebaseSquad* OutSquad);
	class FText GetPrereqNodeTypeName(enum class EPrereqNodeType NodeType);
	TArray<class FName> GetOwnedNodes(class UFortMcpProfileCampaign* McpProfile);
	int32 GetNumWorldInventoryBonusTokens(class UFortMcpProfileCampaign* McpProfile);
	int32 GetNumOwnedNodesInPage(class FName NodePageId, class UFortMcpProfileCampaign* McpProfile, enum class EPrereqNodeType NodeType);
	int32 GetNumAccountLimitedItems(class UFortMcpProfileCampaign* McpProfile);
	int32 GetNumAccountInventoryBonusTokens(class UFortMcpProfileCampaign* McpProfile);
	class FString GetNodeInstanceIdByNodeId(class FName NodeID, class UFortMcpProfileCampaign* McpProfile);
	class FString GetHomebaseName(class UFortMcpProfileCommonPublic* McpProfile);
	bool AreNodeQuestReqsMet(class FName NodeID, class UFortMcpProfileCampaign* McpProfile);
	bool AreNodePrereqsMet(class FName NodeID, class UFortMcpProfileCampaign* McpProfile);
	bool AreNodeCostsMet(class FName NodeID, class UFortMcpProfileCampaign* McpProfile);
};

// 0x10 (0x98 - 0x88)
// Class FortniteGame.FortHomebaseNodeGameplayEffectDataTable
class UFortHomebaseNodeGameplayEffectDataTable : public UDataTable
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   TemplateAttributeGEs;                              // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortHomebaseNodeGameplayEffectDataTable* GetDefaultObj();

};

// 0x28 (0x108 - 0xE0)
// Class FortniteGame.FortHomebaseNodeItem
class UFortHomebaseNodeItem : public UFortAccountItem
{
public:
	uint8                                        Pad_2205[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   NodeReference;                                     // 0xE8(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2206[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHomebaseNodeItem* GetDefaultObj();

};

// 0x0 (0x330 - 0x330)
// Class FortniteGame.FortHomebaseNodeItemDefinition
class UFortHomebaseNodeItemDefinition : public UFortAccountItemDefinition
{
public:

	static class UClass* StaticClass();
	static class UFortHomebaseNodeItemDefinition* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortHomebaseNodeItemTooltip
class UFortHomebaseNodeItemTooltip : public UFortItemTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortHomebaseNodeItemTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x468 (0x498 - 0x30)
// Class FortniteGame.FortHomebaseSet
class UFortHomebaseSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            Keep_Level;                                        // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_AmmoStash_Level;                              // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Armory_Level;                                 // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Medical_Level;                                // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Storage_Level;                                // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_Workshop_Level;                               // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_StructureCap;                                 // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Keep_PermaniteCap;                                 // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Manor_Level;                                       // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Manor_StructureCap;                                // 0x150(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            InventorySizeBonus;                                // 0x170(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WorldInventorySizeBonus;                           // 0x190(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StorageInventorySizeBonus;                         // 0x1B0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ResearchPointMaxBonus;                             // 0x1D0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Global;                              // 0x1F0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics;                          // 0x210(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics_Ranged;                   // 0x230(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics_Melee;                    // 0x250(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Schematics_Traps;                    // 0x270(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Personnel;                           // 0x290(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxLevelBonus_Alterations;                         // 0x2B0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Rate_per_second_collector_Token_collectionresource_nodegatetoken01; // 0x2D0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Max_capacity_collector_Token_collectionresource_nodegatetoken01; // 0x2F0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SupplyDrop_Magnitude;                              // 0x310(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SupplyDrop_Level;                                  // 0x330(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadOne_Power;                          // 0x350(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadTwo_Power;                          // 0x370(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadThree_Power;                        // 0x390(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadFour_Power;                         // 0x3B0(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadFive_Power;                         // 0x3D0(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExpeditionSquadSix_Power;                          // 0x3F0(0x20)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_2210[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHomebaseSet* GetDefaultObj();

	void OnRep_WorldInventorySizeBonus();
	void OnRep_SupplyDrop_Magnitude();
	void OnRep_SupplyDrop_Level();
	void OnRep_StorageInventorySizeBonus();
	void OnRep_ResearchPointMaxBonus();
	void OnRep_rate_per_second_collector_Token_collectionresource_nodegatetoken01();
	void OnRep_MaxLevelBonus_Schematics_Traps();
	void OnRep_MaxLevelBonus_Schematics_Ranged();
	void OnRep_MaxLevelBonus_Schematics_Melee();
	void OnRep_MaxLevelBonus_Schematics();
	void OnRep_MaxLevelBonus_Personnel();
	void OnRep_MaxLevelBonus_Global();
	void OnRep_MaxLevelBonus_Alterations();
	void OnRep_max_capacity_collector_Token_collectionresource_nodegatetoken01();
	void OnRep_Manor_StructureCap();
	void OnRep_Manor_Level();
	void OnRep_Keep_Workshop_Level();
	void OnRep_Keep_StructureCap();
	void OnRep_Keep_Storage_Level();
	void OnRep_Keep_PermaniteCap();
	void OnRep_Keep_Medical_Level();
	void OnRep_Keep_Level();
	void OnRep_Keep_Armory_Level();
	void OnRep_Keep_AmmoStash_Level();
	void OnRep_InventorySizeBonus();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortHomeTeleporterInterface
class IFortHomeTeleporterInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortHomeTeleporterInterface* GetDefaultObj();

	void OnHomeTeleporterUnboundServer(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterUnbound(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterBoundServer(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
	void OnHomeTeleporterBound(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
};

// 0x0 (0x230 - 0x230)
// Class FortniteGame.FortHotfixManager
class UFortHotfixManager : public UOnlineHotfixManager
{
public:

	static class UClass* StaticClass();
	static class UFortHotfixManager* GetDefaultObj();

};

// 0x8 (0xC20 - 0xC18)
// Class FortniteGame.FortHoverboardCameraMode
class UFortHoverboardCameraMode : public UFortCameraMode_ThirdPerson
{
public:
	class UCurveFloat*                           VelocityBasedFOVIncreaseCurve;                     // 0xC18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortHoverboardCameraMode* GetDefaultObj();

};

// 0x58 (0x910 - 0x8B8)
// Class FortniteGame.FortSpectatorCameraComponent
class UFortSpectatorCameraComponent : public UCineCameraComponent
{
public:
	class AFortPlayerControllerSpectating*       SpectatorController;                               // 0x8B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                IntendedViewTarget;                                // 0x8C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2214[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        BitPad_1FE : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bManualExposureControl : 1;                        // Mask: 0x4, PropSize: 0x10x8CC(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bManualFocusControl : 1;                           // Mask: 0x8, PropSize: 0x10x8CC(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1FF : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2215[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ManualExposureBias;                                // 0x8D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ManualFocusDistance;                               // 0x8D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                          ScreenFringeFOVCurve;                              // 0x8D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZoomRate;                                          // 0x8E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FocalLengthInterpSpeed;                            // 0x8E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2216[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSpectatorCameraComponent* GetDefaultObj();

	void ShowFocusPlane(bool bShow);
	void SetManualFocusDistance(float NewFocusDist);
	void SetManualExposure(float NewExposureBias);
	void SetFocalLength(float NewFocalLength, bool bImmediate);
	void SetAutoFocus();
	void SetAutoExposure();
	float GetAutoCameraCutDistanceThreshold();
};

// 0x30 (0x940 - 0x910)
// Class FortniteGame.FortHoverDroneCameraComponent
class UFortHoverDroneCameraComponent : public UFortSpectatorCameraComponent
{
public:
	uint8                                        Pad_2218[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DroneTiltInterpSpeed_Accel;                        // 0x918(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DroneTiltInterpSpeed_Decel;                        // 0x91C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2219[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TiltUpVector;                                      // 0x92C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHoverDroneCameraComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortHUDTargetUnderReticleInterface
class IFortHUDTargetUnderReticleInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortHUDTargetUnderReticleInterface* GetDefaultObj();

	class FText GetHUDTargetUpgradeDisplayName();
	float GetHUDTargetHealthPercentage();
	class FText GetHUDTargetDisplayName();
	TArray<class FText> GetHUDTargetDisplayModifiers();
	float GetHUDTargetDifficultyRating();
};

// 0x48 (0x450 - 0x408)
// Class FortniteGame.FortHuskAnimInstance
class UFortHuskAnimInstance : public UFortAIAnimInstance
{
public:
	enum class EFortHuskAnimType                 HuskAnimType;                                      // 0x408(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221C[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallAsleepAnimDuration;                            // 0x414(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AltFallAsleepAnimDuration;                         // 0x418(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WakeUpAnimDuration;                                // 0x41C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallAsleepToSleepingCrossfade;                     // 0x420(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WakeUpToIdleCrossfade;                             // 0x424(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultToDwarfScaleRatio;                          // 0x428(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtAlpha;                                       // 0x42C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtInterpSpeed;                                 // 0x430(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdjustedLowerBodyWeight;                           // 0x434(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdjustedLowerBodyInterpSpeed;                      // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RunPlayRate;                                       // 0x43C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RunStartPosition;                                  // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AuthoredJogSpeed;                                  // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MovementStyleIsWalking;                            // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bForceFullBodyMontage : 1;                         // Mask: 0x1, PropSize: 0x10x44C(0x1)(BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDwarf : 1;                                      // Mask: 0x2, PropSize: 0x10x44C(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToMove : 1;                    // Mask: 0x4, PropSize: 0x10x44C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToFallAsleep : 1;              // Mask: 0x8, PropSize: 0x10x44C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToStunned : 1;                 // Mask: 0x10, PropSize: 0x10x44C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToKnockedbackDown : 1;         // Mask: 0x20, PropSize: 0x10x44C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_IdleToKnockedbackUp : 1;           // Mask: 0x40, PropSize: 0x10x44C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_MoveToIdle : 1;                    // Mask: 0x80, PropSize: 0x10x44C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_FallAsleepToSleeping : 1;          // Mask: 0x1, PropSize: 0x10x44D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_SleepingToWakeUp : 1;              // Mask: 0x2, PropSize: 0x10x44D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_WakeUpToIdle : 1;                  // Mask: 0x4, PropSize: 0x10x44D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_StunnedToIdle : 1;                 // Mask: 0x8, PropSize: 0x10x44D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_KnockedbackDownToIdle : 1;         // Mask: 0x10, PropSize: 0x10x44D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StateTransition_KnockedbackUpToKnockedbackDown : 1; // Mask: 0x20, PropSize: 0x10x44D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221D[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortHuskAnimInstance* GetDefaultObj();

	void SetHuskAnimType(enum class EFortHuskAnimType NewHuskAnimType);
	enum class EFortHuskAnimType GetHuskAnimType();
	void AnimNotify_SleepingFullyBlended(class UAnimNotify* Notify);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortIndicatorManager
class UFortIndicatorManager : public UObject
{
public:
	TArray<class UFortIndicator*>                AllIndicators;                                     // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UFortMiniMapIndicator*>         MiniMapIndicators;                                 // 0x38(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortIndicatorManager* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortInescapableZoneTracker
class UFortInescapableZoneTracker : public UObject
{
public:
	class AFortNavigationGraph*                  NavGraph;                                          // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_221E[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortInescapableZoneTracker* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class FortniteGame.FortInfluenceMap
class UFortInfluenceMap : public UObject
{
public:
	uint8                                        Pad_2229[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortNavigationGraph*                  GraphData;                                         // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_222A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortInfluenceMap* GetDefaultObj();

	void K2_GetInfluenceSourcePositions(class UObject* WorldContext, TArray<struct FVector>* InfluenceSourcePositions);
	void K2_AddInfluenceSource(class UObject* WorldContext, struct FVector& Position, const class FString& SourceName, float Strength);
};

// 0x170 (0x498 - 0x328)
// Class FortniteGame.FortInGameMapManager
class AFortInGameMapManager : public AActor
{
public:
	uint8                                        Pad_222D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTeamMapInfo>                  MapData;                                           // 0x340(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	float                                        DelayBetweenDispersions;                           // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExploredRadius;                                    // 0x354(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExploredFalloffRadius;                             // 0x358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SeenRadius;                                        // 0x35C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SeenFalloffRadius;                                 // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VisibilityMaxGradient;                             // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        UnexploredOpacity;                                 // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OffsetZ;                                           // 0x36C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MapLayerSize;                                      // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullscreenMapZoom;                                 // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                               MapMargin;                                         // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        IconVisibilityFogThreshold;                        // 0x388(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_222E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASceneCapture2D>           SceneCaptureClass;                                 // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASceneCapture2D>           SceneCaptureBlurryClass;                           // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     MapMaterial;                                       // 0x3A0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  CloudBrightnessCurve;                              // 0x3C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DesaturationFactorCurve;                           // 0x3D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MapOpacityWhenWalking;                             // 0x3E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPercentageMapExplored;                          // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MapExplorationThresholdPercentage;                 // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastMapExplorationThresholdPercentageReached;      // 0x3F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMapFullyExplored;                                // 0x3F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMapExplorationThresholdReached;                  // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class ASceneCapture2D*                       SceneCapture;                                      // 0x418(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASceneCapture2D*                       SceneCaptureBlurry;                                // 0x420(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_222F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            FogMask;                                           // 0x448(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2230[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MapWorldScale;                                     // 0x494(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortInGameMapManager* GetDefaultObj();

	void PaintOnFog(struct FVector& WorldCoords, enum class EFortTeam Team);
	void OnRep_MapData();
	class AFortInGameMapManager* GetCurrent(class UObject* WorldContextObject);
	void BroadcastExplorationEvents(TArray<struct FTeamMapExplorationEvent>& Events);
};

// 0x18 (0x4B0 - 0x498)
// Class FortniteGame.FortInGameMapManagerAthena
class AFortInGameMapManagerAthena : public AFortInGameMapManager
{
public:
	uint8                                        Pad_2231[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortInGameMapManagerAthena* GetDefaultObj();

};

// 0x8 (0x730 - 0x728)
// Class FortniteGame.FortIngredientItemDefinition
class UFortIngredientItemDefinition : public UFortWorldItemDefinition
{
public:
	uint8                                        Pad_2232[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortIngredientItemDefinition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInitializationInterface
class IFortInitializationInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortInitializationInterface* GetDefaultObj();

	void WorldReady();
	bool NeedsWorldReady();
	void MatchStarted();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInitializeFromObjectInterface
class IFortInitializeFromObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortInitializeFromObjectInterface* GetDefaultObj();

	void InitFromObject(class UObject* InitObject);
};

// 0x7B8 (0x7E8 - 0x30)
// Class FortniteGame.FortInputData
class UFortInputData : public UPrimaryDataAsset
{
public:
	class FName                                  ConfigDName;                                       // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigEName;                                       // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigFName;                                       // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigGName;                                       // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigDAthenaName;                                 // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigEAthenaName;                                 // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigFAthenaName;                                 // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigGAthenaName;                                 // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ConfigCustomAthenaName;                            // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility1Name;                               // 0x78(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility2Name;                               // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility1AName;                              // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility1BName;                              // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility2AName;                              // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility2BName;                              // 0xA0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility3AName;                              // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadAbility3BName;                              // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadPreviousBuildingName;                       // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadNextBuildingName;                           // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot1Name;                          // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot2Name;                          // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot3Name;                          // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadBuildingSlot4Name;                          // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadToggleHarvestWeaponName;                    // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSelectPreviousWeaponName;                   // 0xF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSelectNextWeaponName;                       // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadNextWeaponOrHarvestHoldName;                // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadTapSelectPreviousWeaponForChordAbilities;   // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadTapSelectNextWeaponForChordAbilities;       // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadTrapPickerName;                             // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadUseOrTrapPickerName;                        // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadUseOrTrapPickerAndPlaceName;                // 0x128(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadChangeMaterialOrHarvestHoldName;            // 0x130(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadSwitchModeOrEditBuildingName;               // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadImproveOrRotateBuildingPieceName;           // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadRepairHoldOrRotateBuildingPieceName;        // 0x148(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  GamepadPerformBuildingEditInteractionOrCancelPersonalVehicleName; // 0x150(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey1Name;                                    // 0x158(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey2Name;                                    // 0x160(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey3Name;                                    // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey4Name;                                    // 0x170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey5Name;                                    // 0x178(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey6Name;                                    // 0x180(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey7Name;                                    // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey8Name;                                    // 0x190(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKey9Name;                                    // 0x198(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF1Name;                                   // 0x1A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF2Name;                                   // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF3Name;                                   // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF4Name;                                   // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF5Name;                                   // 0x1C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF6Name;                                   // 0x1C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF7Name;                                   // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF8Name;                                   // 0x1D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF9Name;                                   // 0x1E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF10Name;                                  // 0x1E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF11Name;                                  // 0x1F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HotbarKeyF12Name;                                  // 0x1F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TrapConfirmName;                                   // 0x200(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TrapPickerName;                                    // 0x208(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ChangeMaterialName;                                // 0x210(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BuildConfirmName;                                  // 0x218(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PerformBuildingEditInteractionName;                // 0x220(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PerformBuildingImprovementInteractionName;         // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PickerConfirmName;                                 // 0x230(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PickerCancelName;                                  // 0x238(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  EmotePickerName;                                   // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SquadQuickChatPickerName;                          // 0x248(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SwitchQuickBarName;                                // 0x250(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UseName;                                           // 0x258(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UseOrReloadName;                                   // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ReloadName;                                        // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  InventoryOrChatHoldName;                           // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  FireName;                                          // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  RotatePrimitiveClockwiseName;                      // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ToggleFullScreenMapName;                           // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  JumpName;                                          // 0x290(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchName;                                        // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CrouchOrRepairName;                                // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  MoveLabel;                                         // 0x2A8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  LookLabel;                                         // 0x2C0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SwitchQuickbarLabel;                               // 0x2D8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  JumpLabel;                                         // 0x2F0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SprintLabel;                                       // 0x308(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AutoSprintLabel;                                   // 0x320(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  NextWeaponLabel;                                   // 0x338(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PreviousWeaponLabel;                               // 0x350(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  NextWeaponTapLabel;                                // 0x368(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PreviousWeaponTapLabel;                            // 0x380(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  NextBuildingPieceLabel;                            // 0x398(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PreviousBuildingPieceLabel;                        // 0x3B0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadStairSelectAndPlaceLabel;                   // 0x3C8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadRoofSelectAndPlaceLabel;                    // 0x3E0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadWallSelectAndPlaceLabel;                    // 0x3F8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadFloorSelectAndPlaceLabel;                   // 0x410(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadTrapSelectAndPlaceLabel;                    // 0x428(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadTrapPickerHoldLabel;                        // 0x440(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GamepadChangeMaterialOrTrapPickerLabel;            // 0x458(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  HarvestWeaponHoldLabel;                            // 0x470(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  HarvestWeaponLabel;                                // 0x488(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AimDownSightsLabel;                                // 0x4A0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AimDownSightsHeavyMeleeLabel;                      // 0x4B8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Ability1Label;                                     // 0x4D0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Ability2Label;                                     // 0x4E8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Ability3Label;                                     // 0x500(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Gadget1Label;                                      // 0x518(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  Gadget2Label;                                      // 0x530(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RotateBuildingLabel;                               // 0x548(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RotateBuildingTapRepairHoldLabel;                  // 0x560(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  BuildingEditResetLabel;                            // 0x578(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ReloadLabel;                                       // 0x590(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ReloadTapLabel;                                    // 0x5A8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  CraftAmmoHoldLabel;                                // 0x5C0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  InteractTapHoldLabel;                              // 0x5D8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  UseOrReloadLabel;                                  // 0x5F0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  CrouchLabel;                                       // 0x608(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ToggleFullScreenMapLabel;                          // 0x620(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ToggleInventoryLabel;                              // 0x638(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  GameMenuLabel;                                     // 0x650(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PlaceBuildingOrTrapConfirmLabel;                   // 0x668(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  AttackConfirmLabel;                                // 0x680(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ChangeMaterialLabel;                               // 0x698(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  EmoteLabel;                                        // 0x6B0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  EmoteOrQuickChatLabel;                             // 0x6C8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ChatHoldLabel;                                     // 0x6E0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PickTrapTapLabel;                                  // 0x6F8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  TrapInventoryHoldLabel;                            // 0x710(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PickTrapTapHoldLabel;                              // 0x728(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  PickTrapLabel;                                     // 0x740(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  EditBuildingPieceHoldLabel;                        // 0x758(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  SwitchQuickBarTapLabel;                            // 0x770(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  DeployHoverboardLabel;                             // 0x788(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RepairImproveSpotEnemyLabel;                       // 0x7A0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RepairLabel;                                       // 0x7B8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  RepairHoldLabel;                                   // 0x7D0(0x18)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortInputData* GetDefaultObj();

	class FText GetUseOrReloadLabel();
	class FText GetTrapInventoryHoldLabel();
	class FText GetToggleInventoryLabel();
	class FText GetToggleFullScreenMapLabel();
	class FText GetSwitchQuickBarTapLabel();
	class FText GetSwitchQuickbarLabel();
	class FText GetSprintLabel();
	class FText GetRotateBuildingTapRepairHoldLabel();
	class FText GetRotateBuildingLabel();
	class FText GetRepairLabel();
	class FText GetRepairImproveSpotEnemyLabel();
	class FText GetRepairHoldLabel();
	class FText GetReloadTapLabel();
	class FText GetReloadLabel();
	class FText GetPreviousWeaponTapLabel();
	class FText GetPreviousWeaponLabel();
	class FText GetPreviousBuildingPieceLabel();
	class FText GetPlaceBuildingOrTrapConfirmLabel();
	class FText GetPickTrapTapLabel();
	class FText GetPickTrapTapHoldLabel();
	class FText GetPickTrapLabel();
	class FText GetNextWeaponTapLabel();
	class FText GetNextWeaponLabel();
	class FText GetNextBuildingPieceLabel();
	class FText GetMoveLabel();
	class FText GetLookLabel();
	class FText GetJumpLabel();
	class FText GetInteractTapHoldLabel();
	class FText GetHarvestWeaponLabel();
	class FText GetHarvestWeaponHoldLabel();
	class FText GetGamepadWallSelectAndPlaceLabel();
	class FText GetGamepadTrapSelectAndPlaceLabel();
	class FText GetGamepadTrapPickerHoldLabel();
	class FText GetGamepadStairSelectAndPlaceLabel();
	class FText GetGamepadRoofSelectAndPlaceLabel();
	class FText GetGamepadFloorSelectAndPlaceLabel();
	class FText GetGamepadChangeMaterialOrTrapPickerLabel();
	class FText GetGameMenuLabel();
	class FText GetGadget2Label();
	class FText GetGadget1Label();
	class UFortInputData* GetFortInputDataForBlueprint();
	class FText GetEmoteOrQuickChatLabel();
	class FText GetEmoteLabel();
	class FText GetEditBuildingPieceHoldLabel();
	class FText GetDeployHoverboardLabel();
	class FText GetCrouchLabel();
	class FText GetCraftAmmoHoldLabel();
	class FText GetChatHoldLabel();
	class FText GetChangeMaterialLabel();
	class FText GetBuildingEditResetLabel();
	class FText GetAutoSprintLabel();
	class FText GetAttackConfirmLabel();
	class FText GetAimDownSightsLabel();
	class FText GetAimDownSightsHeavyMeleeLabel();
	class FText GetAbility3Label();
	class FText GetAbility2Label();
	class FText GetAbility1Label();
};

// 0x0 (0x348 - 0x348)
// Class FortniteGame.FortInstancedStaticMeshActor
class AFortInstancedStaticMeshActor : public AFortStaticMeshActor
{
public:

	static class UClass* StaticClass();
	static class AFortInstancedStaticMeshActor* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class FortniteGame.FortIntelPackSet
class UFortIntelPackSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            MaxCharges;                                        // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CurrentCharges;                                    // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StormTrackerCost;                                  // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RevealedTargetsRange;                              // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RevealedTargetsDuration;                           // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RevealedTargetsCost;                               // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortIntelPackSet* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortIntensityCurveSequence
class UFortIntensityCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>           IntensityCurves;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortIntensityCurveSequenceType   SequenceType;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2253[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortIntensityCurveSequence* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortIntensityCurveSequenceProgression
class UFortIntensityCurveSequenceProgression : public UDataAsset
{
public:
	TArray<struct FFortInstensityCurveSequenceProgression> IntensityCurveSequences;                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortIntensityCurveSequenceProgression* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortInteractContextInfo
class UFortInteractContextInfo : public UObject
{
public:
	class FText                                  ContextText;                                       // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class AActor*                                ReceivingActor;                                    // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   InteractComponent;                                 // 0x48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                               OptionalObjectData;                                // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            LongInteractSound;                                 // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InteractPoint;                                     // 0x60(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequiredDuration;                                  // 0x6C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCountDown;                                    // 0x70(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayTextOnly;                                  // 0x71(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2255[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortInteractContextInfo* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInteractInterface
class IFortInteractInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortInteractInterface* GetDefaultObj();

	bool ServerOnAttemptInteract(struct FInteractionType& InteractType);
	void GetIconPlacement(class AActor* SelfActor, struct FVector* OutLocation, struct FVector* OutExtents);
	void GetBoundsComponents(class AActor* SelfActor, TArray<class USceneComponent*>* OutComponents);
};

// 0x1D8 (0x500 - 0x328)
// Class FortniteGame.FortInventory
class AFortInventory : public AActor
{
public:
	uint8                                        Pad_2257[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortInventoryType                InventoryType;                                     // 0x330(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2258[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortItemList                         Inventory;                                         // 0x338(0x170)(Net, SaveGame, RepNotify, NativeAccessSpecifierPrivate)
	bool                                         bRequiresLocalUpdate;                              // 0x4A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequiresSaving;                                   // 0x4A9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsShuttingDown;                                   // 0x4AA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2259[0x15];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortWorldItem*>                PendingInstances;                                  // 0x4C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                     RecentlyAdded;                                     // 0x4D0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                     RecentlyRemoved;                                   // 0x4E0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UFortItem*>                     RecentlyChanged;                                   // 0x4F0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortInventory* GetDefaultObj();

	void HandleInventoryLocalUpdate();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInventoryInterface
class IFortInventoryInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortInventoryInterface* GetDefaultObj();

};

// 0x18 (0x518 - 0x500)
// Class FortniteGame.FortInventoryOutpost
class AFortInventoryOutpost : public AFortInventory
{
public:
	TArray<class UFortWorldItem*>                UnavailableItemInstances;                          // 0x500(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bHasUnavailableItems;                              // 0x510(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_225B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortInventoryOutpost* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInventoryOwnerInterface
class IFortInventoryOwnerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortInventoryOwnerInterface* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortItemIconDefinition
class UFortItemIconDefinition : public UDataAsset
{
public:
	TSoftObjectPtr<class UTexture2D>             SmallImage;                                        // 0x30(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             LargeImage;                                        // 0x58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortItemIconDefinition* GetDefaultObj();

};

// 0x28 (0x750 - 0x728)
// Class FortniteGame.FortItemCacheItemDefinition
class UFortItemCacheItemDefinition : public UFortWorldItemDefinition
{
public:
	TSoftObjectPtr<class UFortCardPackItemDefinition> CardPackReward;                                    // 0x728(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortItemCacheItemDefinition* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class FortniteGame.FortItemCategory
class UFortItemCategory : public UDataAsset
{
public:
	TArray<struct FItemCategoryMappingData>      PrimaryCategories;                                 // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemCategory>                 SecondaryCategories;                               // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FItemCategory>                 TertiaryCategories;                                // 0x50(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortItemCategory* GetDefaultObj();

};

// 0x18 (0x380 - 0x368)
// Class FortniteGame.FortItemExhibitActor
class AFortItemExhibitActor : public AFortExhibitActor
{
public:
	class FString                                ItemInstanceId;                                    // 0x368(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPickup*                           ExhibitItem;                                       // 0x378(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortItemExhibitActor* GetDefaultObj();

};

// 0x1A8 (0x1D8 - 0x30)
// Class FortniteGame.FortJumpBoostSet
class UFortJumpBoostSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_225C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            BoostActive;                                       // 0x38(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxFuel;                                           // 0x58(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Fuel;                                              // 0x78(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMaxFuel;                                    // 0x98(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveFuel;                                       // 0xB8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelBurnRate;                                      // 0xD8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenRate;                                     // 0xF8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenDelay;                                    // 0x118(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BoostFuelCost;                                     // 0x138(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            UpwardThrust;                                      // 0x158(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LateralThrust;                                     // 0x178(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            UpwardAcceleration;                                // 0x198(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LateralAcceleration;                               // 0x1B8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortJumpBoostSet* GetDefaultObj();

};

// 0x0 (0x378 - 0x378)
// Class FortniteGame.FortJumpDownLink
class AFortJumpDownLink : public ANavLinkProxy
{
public:

	static class UClass* StaticClass();
	static class AFortJumpDownLink* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class FortniteGame.FortKeepEventInfo
class UFortKeepEventInfo : public UDataAsset
{
public:
	class FText                                  EventDescription;                                  // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FKeepEventWaveData>            Waves;                                             // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortKeepEventInfo* GetDefaultObj();

	int32 NumberOfWaves();
	struct FKeepEventWaveData GetWave(int32 Index);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortKeepEventList
class UFortKeepEventList : public UDataAsset
{
public:
	TArray<struct FKeepEventInfo>                Events;                                            // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortKeepEventList* GetDefaultObj();

	class FText GetEventDescription(int32 Idx);
	struct FKeepEventInfo GetEvent(int32 Idx);
};

// 0xD0 (0x3F8 - 0x328)
// Class FortniteGame.FortKeepDefenseManager
class AFortKeepDefenseManager : public AActor
{
public:
	UMulticastDelegateProperty_                  OnEventStarted;                                    // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWarmupEnded;                                     // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterTimeout;                                // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventEnded;                                      // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventStopped;                                    // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAllEnemiesKilled;                                // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterStarted;                                // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEncounterEnded;                                  // 0x398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDefenseStateChanged;                             // 0x3A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_226A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAIEncounterInfo*                  ActiveAIEncounter;                                 // 0x3C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortAISpawnGroupProgressionInfo*      ActiveAISpawnGroup;                                // 0x3D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_226B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortKeepDefenseManager* GetDefaultObj();

	void StopEvent();
	void StartEventFromList(class UFortKeepEventList* EventList, int32 EventNumber);
	void StartEvent(class UFortKeepEventInfo* EventTemplate, int32 DifficultyLevelOffset);
	class UFortAIEncounterInfo* StartAIEncounter(TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, class UFortAISpawnGroupProgressionInfo* SpawnGroupProgressionInfo, int32 ActivationDelay, int32 EncounterDifficultyLevel, float AliveMultiplier);
	void SkipWarmup();
	void GoToNextWave();
	class FText GetWaveDescription();
	int32 GetNumberAliveEnemies();
};

// 0x320 (0x348 - 0x28)
// Class FortniteGame.FortKeepItemManager
class UFortKeepItemManager : public UObject
{
public:
	uint8                                        Pad_226C[0x320];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortKeepItemManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortKismetLibrary
class UFortKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortKismetLibrary* GetDefaultObj();

	float VectorToNormalizedAngleInDegrees(const struct FVector& V);
	void UnhideTutorialWidget(class UObject* WorldContextObject, class FName WidgetName);
	void UnhideAllTutorialWidgets(class UObject* WorldContextObject);
	void UnequipFortAbilitySet(struct FFortAbilitySetHandle& AbilitySetHandle);
	void TriggerFeedbackEvent(class UObject* WorldContextObject, const struct FFortFeedbackHandle& EventHandle, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay, bool bOverriddenQueuing, bool bAllowReplication);
	bool SwitchHeroType(class AFortPlayerController* FortPC, const class FString& NewHeroName);
	class AFortTracerBase* SpawnTracerFromPool(class UObject* WorldContextObject, TSubclassOf<class AFortTracerBase> TracerClass, struct FVector& Origin, struct FVector& Destination, class AFortPawn* Instigator);
	class AFortProjectileBase* SpawnProjectile(TSubclassOf<class AFortProjectileBase> ProjectileClass, class AActor* RequestedBy, struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, struct FRotator& SpawnDirection, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, bool bUseDefaultPhysics, class AActor* HomingTarget, float InitialSpeed, float GravityScale, float ChargePercent);
	class ABuildingGameplayActor* SpawnBuildingGameplayActor(TSubclassOf<class ABuildingGameplayActor> BGAClass, struct FTransform& Transform, class AFortPawn* Instigator);
	class AFortAreaOfEffectCloud* SpawnAreaOfEffectCloud(TSubclassOf<class AFortAreaOfEffectCloud> AreaOfEffectClass, class AActor* RequestedBy, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode);
	void ShowSoundIndicatorLocalForTeam(class UObject* WorldContextObject, class AFortPawn* TrackedPawn, const struct FVector& Location, float MaxAudibleDistance, enum class EFortSoundIndicatorTypes IndicatorType, enum class EFortTeam Team, const TArray<enum class EFortTeamAffiliation>& Affiliations, class AActor* Instigator);
	void ShowSoundIndicatorLocal(class UObject* WorldContextObject, class AFortPawn* TrackedPawn, const struct FVector& Location, float MaxAudibleDistance, enum class EFortSoundIndicatorTypes IndicatorType, TArray<class AFortPlayerController*>& IgnoreOnControllers, class AActor* Instigator);
	bool ShouldHideTutorialWidget(class FName WidgetName);
	void SetTimeOfDaySpeed(class UObject* WorldContextObject, float TimeOfDaySpeedFactor);
	void SetTimeOfDay(class UObject* WorldContextObject, float TimeOfDay);
	void SetEndGameTimeDilation(class UObject* WorldContextObject, float TimeDilation);
	void SetCanBeDamaged(class AActor* Actor, bool bCanBeDamaged);
	class UMaterialInstance* SelectMaterialInstance(class UMaterialInstance* A, class UMaterialInstance* B, bool bSelectA);
	void RemoveActorsOfClassFromBuildingSMActorArray(TArray<class ABuildingSMActor*>& ArrayToRemoveClassFrom, TSubclassOf<class ABuildingSMActor> ClassToRemove, TArray<class ABuildingSMActor*>* ArrayWithClassRemoved);
	void RegisterDayTimeHitCallback(class UObject* Object, const class FString& FunctionName, float TimeInHours, bool bRecurring, bool bBlockTriggeringThisCycle);
	void RegisterDayPhaseHitCallback(class UObject* Object, const class FString& FunctionName, enum class EFortDayPhase Phase, bool bRecurring, bool bBlockTriggeringThisCycle);
	struct FTransform PushOffTransformByHitLocation(class AActor* RequestedBy, struct FTransform& InTransform, struct FHitResult& Hit, float Distance);
	struct FVector PushOffHitLocation(class AActor* RequestedBy, struct FHitResult& Hit, float Distance);
	void PlayLocalForceFeedbackAtLocationMulti(class UObject* WorldContextObject, class UForceFeedbackEffect* NearForceFeedbackEffect, class UForceFeedbackEffect* FarForceFeedbackEffect, const struct FVector& Location, float InnerRadius, float OuterRadius, class FName Tag);
	void PlayLocalForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, float Radius, class FName Tag);
	bool PickLootDrops(TArray<struct FFortItemEntry>* OutLootToDrop, class FName TierGroupName, int32 WorldLevel, int32 ForcedLootTier);
	void OpenTalkingHead(class UObject* WorldContextObject, class UTexture2D* Image, class FText Title, class FText SpeechText, enum class EFortAnnouncementDisplayPreference DisplayPreference);
	bool OnSameTeam(class AActor* ActorA, class AActor* ActorB);
	void NotifyProjectileThrown(TSubclassOf<class AFortProjectileBase> ProjClass, class AActor* RequestedBy, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, float Speed);
	bool NotEqual_UniqueNetIdReplUniqueNetIdRepl(struct FUniqueNetIdRepl& A, struct FUniqueNetIdRepl& B);
	bool NotEqual_FFortDialogWaitingForLatentActionHandle(struct FFortDialogExternalLatentActionHandle& A, struct FFortDialogExternalLatentActionHandle& B);
	struct FVector NormalizedAngleInDegreesToVector(float A);
	enum class EFortWeaponCoreAnimation MakeWeaponCoreAnimation(enum class EFortWeaponCoreAnimation Value);
	enum class EFortResourceType MakeResourceType(enum class EFortResourceType Value);
	enum class EFortMovementStyle MakeMovementStyle(enum class EFortMovementStyle Value);
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpecFromAbilityComponent(struct FFortGameplayEffectContainer& EffectContainer, class UAbilitySystemComponent* AbilityComp, int32 GameplayEffectLevel);
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpecFromAbility(struct FFortGameplayEffectContainer& EffectContainer, class UGameplayAbility* Ability, int32 GameplayEffectLevel);
	enum class EFortDayPhase MakeDayNightPhase(enum class EFortDayPhase Value);
	enum class EFortBuildingState MakeBuildingState(enum class EFortBuildingState Value);
	void MakeAllPlayersTalkToSelf(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USoundBase* Audio, float Delay, bool bInterruptCurrentLine, bool bCanBeInterrupted, bool bCanCue, enum class EFortFeedbackBroadcastFilter BroadcastFilter, bool bLatent);
	class AFortPickup* K2_SpawnPickupInWorld(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount, bool bToss, bool bRandomRotation);
	void K2_SetCurrentResourceType(class AFortPlayerController* Controller, enum class EFortResourceType NewMaterial);
	int32 K2_RemoveItemFromPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 AmountToRemove, bool bForceRemoval);
	void K2_RemoveItemFromAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 AmountToRemove);
	int32 K2_PayBuildingResourceCost(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType, int32 ResourceAmount);
	bool K2_HasBuildingResourcesAvailable(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType, int32 ResourceAmount);
	void K2_GiveItemToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
	void K2_GiveItemToAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
	void K2_GiveBuildingResource(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType, int32 ResourceAmount);
	class UFortResourceItemDefinition* K2_GetResourceItemDefinition(enum class EFortResourceType ResourceType);
	int32 K2_GetNumAvailableBuildingResources(class AFortPlayerController* Controller, enum class EFortResourceType ResourceType);
	int32 K2_GetItemQuantityOnPlayer(class AFortPlayerController* PlayerController, class UFortItemDefinition* ItemDefinition);
	enum class EFortResourceType K2_GetCurrentResourceType(class AFortPlayerController* Controller);
	struct FVector K2_GetClosestAxisXY(const struct FVector& InVector);
	void K2_CycleBuildingMaterial(class AFortPlayerController* Controller, bool bBroadcast, bool bDoUIFeedback, bool bHonorAutoSwitch);
	TArray<class UObject*> JonLHack_GetAllObjectsOfClassFromPath(const class FString& Path, class UClass* Class);
	bool IsValid_UniqueNetIdRepl(struct FUniqueNetIdRepl& InUniqueNetIdRepl);
	bool IsValid(struct FAttributeInfo& AttributeInfo);
	bool IsUsingBattlEye();
	bool IsTabletGame();
	bool IsPhoneGame();
	bool IsMobilePlatform();
	bool IsMobileGame(class UObject* WorldContextObject);
	bool IsLinkingStreamedAccountsEnabled();
	bool IsLatentActionHandleValid(struct FFortDialogExternalLatentActionHandle& Handle);
	bool IsItemDefRandomCustomizationSelector(class UFortItemDefinition* InItemDef);
	bool IsFullBodyHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsFatalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsDiceCritical(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsCriticalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool IsConsolePlatform();
	bool IsAssetNull(TSoftObjectPtr<class UObject> Asset);
	void InvalidateLatentActionHandle(struct FFortDialogExternalLatentActionHandle& Handle);
	void HideTutorialWidget(class UObject* WorldContextObject, class FName WidgetName);
	bool HasSelectableRewards(struct FFortRewardInfo& RewardInfo);
	bool HasRewards(struct FFortRewardInfo& RewardInfo);
	bool HasOpenBroadcasterGrantWindow(class UObject* WorldContextObject);
	bool HasMultipleVisibleRewards(struct FFortRewardInfo& RewardInfo);
	void GiveItemToInventoryOwner(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
	bool GetWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortBaseWeaponStats* OutRow);
	bool GetWeaponDurabilityByRarityStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortWeaponDurabilityByRarityStats* OutRow);
	bool GetTrapStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortTrapStats* OutRow);
	bool GetTooltipTextFromTokenFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText);
	bool GetTooltipTextFromToken(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText);
	bool GetTooltipNumericValueFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value);
	bool GetTooltipNumericValue(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value);
	bool GetTooltipDescriptionFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* Description);
	bool GetTooltipDescription(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* Description);
	float GetTimeUntilInRealTimeSeconds(class UObject* WorldContextObject, float GameTime);
	void GetTimeUntilCalendarEventEnd(class UObject* WorldContextObject, const class FString& EventName, bool* bFoundEvent, struct FTimespan* OutTime);
	float GetTimeOfDaySpeed(class UObject* WorldContextObject);
	float GetTimeOfDayAccumulator(class UObject* WorldContextObject);
	float GetTimeOfDay(class UObject* WorldContextObject);
	float GetTimeDayPhaseBegins(class UObject* WorldContextObject, enum class EFortDayPhase DayPhase);
	class AFortThreatVisualsManager* GetThreatVisualsManager(class UObject* WorldContextObject);
	class AFortTeamInfo* GetTeamInfo(class UObject* WorldContextObject, enum class EFortTeam Team);
	enum class EFortTeamAffiliation GetTeamAffiliationToLocalPlayer(class UObject* WorldContextObject, enum class EFortTeam Team);
	enum class EFortTeamAffiliation GetTeamAffiliationBetweenTeams(enum class EFortTeam TeamA, enum class EFortTeam TeamB);
	enum class EFortTeamAffiliation GetTeamAffiliation(class AActor* ActorA, class AActor* ActorB);
	enum class ESubGame GetSubGame();
	float GetStunTime(const struct FGameplayEffectContextHandle& EffectContext);
	bool GetShowHeroHeadAccessoriesForLocalPlayer(class UObject* WorldContextObject);
	bool GetShowHeroBackpackForLocalPlayer(class UObject* WorldContextObject);
	class UFortAbilityKit* GetRemovedAbilityKit(struct FFortSpecializationSlot& Slot);
	bool GetRangedWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortRangedWeaponStats* OutRow);
	class FText GetRandomSurvivorName(class UObject* WorldContextObject, enum class EFortDisplayGender Gender, bool bRemoveFromList);
	class FText GetRandomLiveStreamingViewerName(class UObject* WorldContextObject, bool bRemoveFromList);
	bool GetPurchaseCostsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortCollectionBookDirectPurchaseData* OutRow);
	class UGameplayAbility* GetPrimaryInstance(struct FGameplayAbilitySpec& Spec);
	enum class EFortDayPhase GetPreviousDayPhase(class UObject* WorldContextObject);
	class UFortRegisteredPlayerInfo* GetPlayerInfoFromUniqueID(class UObject* WorldContextObject, struct FUniqueNetIdRepl& UniqueId);
	bool GetPawnStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortPawnStats* OutRow);
	bool GetNumericCVar(const class FString& CVar, float* OutValue);
	class AFortMusicManager* GetMusicManager(class UObject* WorldContextObject);
	class UMaterialInstanceDynamic* GetMIDForSkeletalMeshComponent(class USkeletalMeshComponent* SkeletalMeshComponent, int32 ElementIndex);
	bool GetMeleeWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortMeleeWeaponStats* OutRow);
	void GetMatchmakingDifficultyRangeFromDifficultyInfo(struct FGameDifficultyInfo& DifficultyInfo, float* OutMinDifficulty, float* OutMaxDifficulty);
	int32 GetLootLevel(class UObject* WorldContextObject);
	bool GetLocalPlayerHasHeroHeadAccessories(class UObject* WorldContextObject);
	bool GetLocalPlayerHasHeroBackpack(class UObject* WorldContextObject);
	TArray<class AFortPlayerController*> GetLocalFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators);
	int32 GetItemQuantityOnPlayerByGUID(class AFortPlayerController* PlayerController, struct FGuid& ItemGuid);
	bool GetIsPlayingReplay(class UObject* WorldContextObject);
	void GetImpulseData(const struct FGameplayEffectContextHandle& EffectContext, struct FVector* ImpulseDirection, float* KnockbackMagnitude, float* KnockbackZAngle);
	class FString GetHumanReadableName(class AActor* Actor);
	int32 GetHoursUntilDayPhase(class UObject* WorldContextObject, enum class EFortDayPhase DayPhase);
	float GetHostilityPercentage(class UObject* WorldContextObject);
	class UFortAbilityKit* GetGrantedAbilityKit(struct FFortSpecializationSlot& Slot);
	float GetGameDifficulty();
	TArray<class AFortPlayerPawn*> GetFortPlayerPawns(class UObject* WorldContextObject);
	enum class EPhysicalSurface GetFortPhysicalSurface(struct FHitResult& Hit);
	class UFortGameUserSettings* GetFortGameUserSettings();
	float GetFloatHoursUntilDayPhase(class UObject* WorldContextObject, enum class EFortDayPhase DayPhase);
	struct FRotator GetDirectionActorToActor(class AActor* SourceActor, class AActor* TargetActor);
	float GetDefaultAbsoluteTimeOfDaySpeed(class UObject* WorldContextObject);
	class FString GetDebugStringForUniqueId(struct FUniqueNetIdRepl& UniqueId);
	struct FVector GetDayNightDirectionalLightVector(class UObject* WorldContextObject);
	struct FLinearColor GetDayNightDirectionalLightColor(class UObject* WorldContextObject);
	enum class EFortDayPhase GetCurrentDayPhase(class UObject* WorldContextObject);
	class AFortPlayerPawn* GetClosestFortPlayerPawn(class UObject* WorldContextObject, const struct FVector& Position);
	class ABuildingSMActor* GetClosestBuildingActorFromArray(class AActor* Actor, TArray<class ABuildingSMActor*>& ArrayOfBuildings);
	class AActor* GetClosestActorFromArray(class AActor* Actor, TArray<class AActor*>& ArrayOfActors);
	float GetCalculatedGameDifficulty(class UObject* WorldContextObject);
	void GetBuildingStructuralSupportSystem(class UObject* WorldContextObject, class UBuildingStructuralSupportSystem** BuildingStructuralSupportSystem);
	float GetBuildingHealthPercentage(class ABuildingActor* BuildingActor);
	float GetBroadcasterGrantWindowSecondsRemaining(class UObject* WorldContextObject);
	void GetAllFortPlayerPawns(class UObject* WorldContextObject, TArray<class AFortPlayerPawn*>* OutFortPlayerPawns);
	TArray<class AFortPlayerController*> GetAllFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators);
	class AFortAIGoalManager* GetAIGoalManager(class UObject* WorldContextObject);
	class AFortAIDirector* GetAIDirector(class UObject* WorldContextObject);
	class AFortTeamInfo* GetActorTeamInfo(class AActor* Actor);
	enum class EFortTeam GetActorTeam(class AActor* Actor);
	void FortShippingLog(class UObject* WorldContextObject, const class FString& InString, bool bLogAsWarning);
	TArray<struct FHitResult> FilterTargetHitResultList(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, TArray<struct FHitResult>& HitResultsToFilter, bool* bAtLeastOneActorLeft);
	TArray<class AActor*> FilterTargetActorList(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, TArray<class AActor*>& ActorsToFilter, bool* bAtLeastOneActorLeft);
	bool FilterSingleTargetHitResult(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, struct FHitResult& HitResult);
	bool FilterSingleTargetActor(class UObject* WorldContextObject, struct FFortTargetFilter& Filter, class AActor* RequestingActor, class AActor* TargetActor);
	void ExecuteClientEvent(class UObject* WorldContextObject, const struct FFortClientEventName& EventType, class UObject* EventSource, class UObject* EventFocus);
	bool EvaluateCurveTableRow(const struct FCurveTableRowHandle& CurveTableRowHandle, float InXY, float* OutXY, const class FString& ContextString);
	bool EquipItemToQuickBarSlot(class UObject* WorldContextObject, class UFortItemDefinition* ItemDefinition, enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	struct FFortAbilitySetHandle EquipFortAbilitySet(TScriptInterface<class IAbilitySystemInterface> AbilitySystemInterfaceActor, class UFortAbilitySet* AbilitySet, class UObject* OverrideSourceObject);
	bool EqualEqual_UniqueNetIdReplUniqueNetIdRepl(struct FUniqueNetIdRepl& A, struct FUniqueNetIdRepl& B);
	bool EqualEqual_FFortDialogWaitingForLatentActionHandle(struct FFortDialogExternalLatentActionHandle& A, struct FFortDialogExternalLatentActionHandle& B);
	void EndWaitForConfirmationDialog(class UObject* WorldContextObject, struct FFortDialogExternalLatentActionHandle& Handle);
	void EnableTutorialHighlight(class UObject* WorldContextObject, class FName WidgetName);
	bool EmptyQuickBarSlot(class UObject* WorldContextObject, enum class EFortQuickBars QuickBarType, int32 SlotIndex);
	void EffectContextAddSourceObject(const struct FGameplayEffectContextHandle& EffectContext, class UObject* Src);
	void DisableTutorialHighlight(class UObject* WorldContextObject, class FName WidgetName);
	class UFortSpline* CreateNewSplineObject(class UObject* Outer);
	void CopyJerseyElements(class UMaterialInstanceDynamic* SourceMID, class UMaterialInstanceDynamic* TargetMID);
	void CopyHideElements(class UMaterialInstanceDynamic* SourceMID, class UMaterialInstanceDynamic* TargetMID);
	float ConvertToRealTime(class UObject* WorldContextObject, float InGameTime);
	float ConvertToGameTime(class UObject* WorldContextObject, float InRealTime);
	void CloseTalkingHead(class UObject* WorldContextObject);
	void ClearTutorialHighlights(class UObject* WorldContextObject);
	void BroadcastSoundAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void BroadcastSound(class UObject* WorldContextObject, class USoundBase* InSound, float VolumeMultiplier, float PitchMultiplier);
	bool BroadcastPlayerImpactAtLocation(class UObject* WorldContextObject, class APlayerController* Player, struct FVector& Position, float* Loudness, float* Duration, bool bRelativePosition);
	void BroadcastMessage(class UObject* WorldContextObject, class FText& MESSAGE);
	void BroadcastAbilityImpactAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, class UObject* Instigator, struct FVector& Position, float Radius, class FName Tag);
	TArray<class AFortPlayerPawn*> AuthorityGetFortPossessedPlayerPawns(class UObject* WorldContextObject);
	bool AreCampaignVehiclesEnabled();
	bool AreAthenaVehiclesEnabled();
	struct FActiveGameplayEffectHandle ApplyGlobalEnvironmentGameplayEffectToActor(class AActor* EffectTargetActor, TSubclassOf<class UGameplayEffect> GameplayEffect, int32 GameplayEffectLevel, const struct FGameplayTagContainer& AdditionalContextTags);
	void ApplyGlobalEnvironmentDamageToActor(class AActor* DamageTargetActor, float EnvironmentDamage, const struct FGameplayTagContainer& AdditionalContextTags, TSubclassOf<class UGameplayEffect> EnvironmentDamageGE);
	struct FFortEncounterSettings ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings(struct FTieredWaveSetData& WaveData, struct FFortEncounterSettings& EncounterSettings);
	void AddRegenItemToInventoryOwner(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, class UFortWorldItemDefinition* RegenItemDefinition, int32 NumberToGive, bool bNotifyPlayer);
};

// 0x70 (0xD10 - 0xCA0)
// Class FortniteGame.FortLauncherAthena
class AFortLauncherAthena : public ABuildingTrapFloor
{
public:
	struct FScalableFloat                        LaunchStrength;                                    // 0xCA0(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FScalableFloat                        LaunchStrengthVehicle;                             // 0xCC8(0x28)(Edit, NativeAccessSpecifierPublic)
	class USoundBase*                            OnLaunchSound3P;                                   // 0xCF0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            OnLaunchSound1P;                                   // 0xCF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FServerLaunchInfo                     ServerLaunchInfo;                                  // 0xD00(0x10)(Net, Transient, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortLauncherAthena* GetDefaultObj();

	void TriggerLaunchEffects(class AFortPlayerPawnAthena* Pawn);
	void ReTriggerForPawn(class AFortPlayerPawnAthena* AthenaPawn);
	void OnTriggerEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnRepLaunchServerInfo();
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortLeaderboardRowProxyInstance
class UFortLeaderboardRowProxyInstance : public UObject
{
public:
	struct FLeaderboardRowData                   RowData;                                           // 0x28(0x48)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortLeaderboardRowProxyInstance* GetDefaultObj();

};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortLevelScriptActor
class AFortLevelScriptActor : public ALevelScriptActor
{
public:
	uint8                                        Pad_237D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWorldReadyCalled : 1;                             // Mask: 0x1, PropSize: 0x10x338(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_237E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLevelScriptActor* GetDefaultObj();

	void OnWorldReady();
	void OnMatchStarted();
};

// 0xA8 (0x3D0 - 0x328)
// Class FortniteGame.FortLevelSpawnActor
class AFortLevelSpawnActor : public AActor
{
public:
	class FName                                  SpecialActorUniqueID;                              // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x330(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             MiniMapIconScale;                                  // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CachedSpecialActorIdx;                             // 0x3C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_237F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialActorID;                                    // 0x3C8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortLevelSpawnActor* GetDefaultObj();

};

// 0x50 (0x380 - 0x330)
// Class FortniteGame.FortLightningActor
class AFortLightningActor : public AFortClientOnlyActor
{
public:
	int32                                        MaxBoltMeshes;                                     // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBoltWidth;                                      // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoltMaterialParamTopPct;                           // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoltMaterialParamBottomPct;                        // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ActorToNotify;                                     // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       BoltLocations;                                     // 0x350(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          BoltMeshes;                                        // 0x360(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      BoltMIDs;                                          // 0x370(0x10)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortLightningActor* GetDefaultObj();

	void OnLightingInitialized();
	void OnLightingCleanup();
	void InitializeLightning(class AActor* InActorToNotify);
	void GenerateBoltLocations(struct FVector& StartLocation, struct FVector& EndLocation, float MinLength, float MaxLength, float RandomVectorContribution, float MinSizeDecayRate, float MaxSizeDecayRate, float FalloffMultiplier);
	void CleanupLightning();
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortLinkedAccount
class UFortLinkedAccount : public UObject
{
public:
	class UFortLinkedAccountManager*             Manager;                                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortLinkedAccount* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortLinkedAccountManager
class UFortLinkedAccountManager : public UObject
{
public:
	uint8                                        Pad_2380[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortLinkedAccount*>            LinkedAccounts;                                    // 0x30(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortLinkedAccountManager* GetDefaultObj();

};

// 0x38 (0x1868 - 0x1830)
// Class FortniteGame.FortPlayerControllerGameplay
class AFortPlayerControllerGameplay : public AFortPlayerController
{
public:
	uint8                                        Pad_2383[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerGameplay* GetDefaultObj();

	void SetHUDElementVisibility(struct FGameplayTagContainer& HUDElementTags, bool bHideElements);
	void ResetHUDElementVisibilityToSettings(struct FGameplayTagContainer& HUDElementTags);
	void RefreshHUDElementVisibilitiesToSettings();
	bool AreHUDElementsVisible(struct FGameplayTagContainer& HUDElementTags);
};

// 0x4A0 (0x1D08 - 0x1868)
// Class FortniteGame.FortPlayerControllerSpectating
class AFortPlayerControllerSpectating : public AFortPlayerControllerGameplay
{
public:
	enum class ESpectatorCameraType              CurrentCameraType;                                 // 0x1868(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraCollision;                                  // 0x1869(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2385[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ESpectatorCameraType>      CameraModeCycle;                                   // 0x1870(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2386[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UUserWidget>             PlayerSelectionWidgetClass;                        // 0x18B0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           PlayerSelectionWidget;                             // 0x18D8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapPlayerIconColorBase;                        // 0x18E0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          MinimapPlayerIconColorHovered;                     // 0x18F0(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoomThresholdForPlayerNames;                       // 0x1900(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2387[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFollowedPlayerChanged;                           // 0x1908(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCameraTypeChanged;                               // 0x1918(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerBecameRelevant;                            // 0x1928(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerBecameIrrelevant;                          // 0x1938(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerDied;                                      // 0x1948(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTimelineScrubbed;                                // 0x1958(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDistanceToPlayerChanged;                         // 0x1968(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCameraSettingsChanged;                           // 0x1978(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnShowNotification;                                // 0x1988(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2388[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SpectatorPostProcessMaterial;                      // 0x19A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2389[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSpectatorCameraComponent*         CurrentSpectatorCamComp;                           // 0x19B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_238A[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPostProcessComponent*                 OutsideSafeZonePPComponent;                        // 0x1A30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortReplaySpectatorPawnBase> SpectatorPawnBaseClass;                            // 0x1A38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AArenaCamPawn>             ArenaCamPawnClass;                                 // 0x1A40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AHoverDronePawn>           HoverDronePawnClass;                               // 0x1A48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AAutoFrameDronePawn>       HoverDroneAutoFramePawnClass;                      // 0x1A50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortMiniMapTeamIndicators> MinimapIndicatorClass;                             // 0x1A58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpectatorOwnedCameraComponentRecord> OwnedCameraComponents;                             // 0x1A60(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSavedPlayerSpectatorCameraData> SavedCameraStates;                                 // 0x1A70(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_238B[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class APlayerState*, bool>              PlayerRelevancyTrackingMap;                        // 0x1B70(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_238C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ChaseCamOffset;                                    // 0x1BC8(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_238D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerState*                      FollowedPlayerPrivate;                             // 0x1BD8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerState*                      HoveredPlayerPrivate;                              // 0x1BE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       FullScreenMapInputComponent;                       // 0x1BE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_238E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSavedSpectatorCameras                HotkeyCameras;                                     // 0x1C08(0x10)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_238F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortProjectileBase*>           RecentlySpawnedProjectiles;                        // 0x1C28(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2390[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastKnownViewTarget;                               // 0x1C40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2391[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AArenaCamPawn*                         ArenaCamPawn;                                      // 0x1C60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHoverDronePawn*                       DroneCamPawn;                                      // 0x1C68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAutoFrameDronePawn*                   AutoFrameCamPawn;                                  // 0x1C70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortReplaySpectatorPawnBase*          SpectatorCamPawn;                                  // 0x1C78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2392[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortRelevancyZoneIndicator> RelevancyZoneIndicatorClass;                       // 0x1CF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortRelevancyZoneIndicator*           RelevancyZoneIndicator;                            // 0x1CF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortReplayContext*                    ReplayContext;                                     // 0x1D00(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortPlayerControllerSpectating* GetDefaultObj();

	void ZoomIn(float Val);
	void ToggleSpectatorHUD();
	void SpectatorClearSavedCameraShots();
	void ShowHoveredPlayersConsoleProfile();
	void SetThirdPersonAutoFollow(int32 FollowMode);
	void SetShareLensSettingsEnabled(bool bEnabled);
	void SetRelevancyZoneVisible(bool bVisible);
	void SetOutlinesEnabled(bool bEnable);
	void SetNewCameraType(enum class ESpectatorCameraType NewCameraType, bool bReset);
	void SetNameplatesEnabled(bool bEnable);
	void SetFollowedPlayer(class AFortPlayerState* NewPlayerToFollow, bool bHideMap);
	void SetDamageFXEnabled(bool bEnable);
	void SetCameraCollision(bool Collide);
	void ResetCamera();
	void OnNextCameraMode();
	void OnGamePhaseChanged(enum class EAthenaGamePhase GamePhase);
	bool IsFollowedPlayerInBus();
	void InputAxisDoNothing(float Value);
	void HandleTimelineScrubbed();
	bool GetShareLensSettingsEnabled();
	bool GetRelevancyZoneVisible();
	bool GetOutlinesEnabled();
	bool GetNameplateShowDebug();
	bool GetNameplatesEnabled();
	float GetNameplateMinScaleDistance();
	float GetNameplateMinScale();
	float GetNameplateMaxScaleDistance();
	float GetNameplateMaxScale();
	float GetNameplateHideDistance();
	class AFortPlayerState* GetFollowedPlayer();
	bool GetDamageFXEnabled();
	class UFortSpectatorCameraComponent* GetCurrentSpectatorCameraComponent();
	void FullscreenMapZoom(float Value);
	void FullScreenMapCursorStopDrag();
	void FullScreenMapCursorStartDrag();
	void FullScreenMapCursorMoved(struct FVector2D& CursorWidgetLocation, struct FVector2D& CursorDelta);
	void FollowPrevPlayer();
	void FollowPlayerByName(const class FString& PlayerName);
	void FollowNextPlayer();
	void FollowHoveredPlayer();
	void AdjustNormalizedDistanceToPlayer(float Val);
};

// 0x0 (0x1D08 - 0x1D08)
// Class FortniteGame.FortLiveSpectatorController
class AFortLiveSpectatorController : public AFortPlayerControllerSpectating
{
public:

	static class UClass* StaticClass();
	static class AFortLiveSpectatorController* GetDefaultObj();

};

// 0x18 (0x1D20 - 0x1D08)
// Class FortniteGame.FortLiveBroadcastController
class AFortLiveBroadcastController : public AFortLiveSpectatorController
{
public:
	UMulticastDelegateProperty_                  OnToggleOffAirWidgetVisibilty;                     // 0x1D08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2393[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLiveBroadcastController* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortLoadingScreenPreviewActor
class AFortLoadingScreenPreviewActor : public AActor
{
public:
	uint8                                        Pad_2394[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLoadingScreenPreviewActor* GetDefaultObj();

	void PreviewLoadingScreen(class UAthenaLoadingScreenItemDefinition* LoadingScreen);
};

// 0x0 (0x428 - 0x428)
// Class FortniteGame.FortLobbyBeaconClient
class AFortLobbyBeaconClient : public ALobbyBeaconClient
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconClient* GetDefaultObj();

	void ServerTeamChatRoomReady(const class FString& ChatRoomId);
	void ServerSetMatchmakingLevel(struct FUniqueNetIdRepl& InUniqueId, int32 MatchmakingLevel);
	void ServerSetHeroType(struct FUniqueNetIdRepl& InUniqueId, class UFortHeroType* InHeroType);
	void ServerSetHeroSquadId(struct FUniqueNetIdRepl& InUniqueId, class FName& InHeroSquadId);
	void ServerSetHeroId(struct FUniqueNetIdRepl& InUniqueId, const class FString& InHeroId);
	void ServerSetGadget(struct FUniqueNetIdRepl& InUniqueId, int32 Index, const class FString& GadgetPersistentName);
	void ServerSetCurrentCharacterXp(struct FUniqueNetIdRepl& InUniqueId, int32 CurrentCharacterXp);
	void ServerSetConsoleUniqueNetId(struct FUniqueNetIdRepl& InUniqueId, struct FUniqueNetIdRepl& NewConsoleNetId);
	void ServerSetCharacterGender(struct FUniqueNetIdRepl& InUniqueId, enum class EFortCustomGender GenderType);
	void ServerIncrementHomeBaseVersion(struct FUniqueNetIdRepl& InUniqueId);
	void ClientCreateOrJoinChatRoom(const class FString& ChatRoomId);
};

// 0x0 (0x428 - 0x428)
// Class FortniteGame.FortLobbyBeaconClientPvE
class AFortLobbyBeaconClientPvE : public AFortLobbyBeaconClient
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconClientPvE* GetDefaultObj();

};

// 0x18 (0x440 - 0x428)
// Class FortniteGame.FortLobbyBeaconClientPvP
class AFortLobbyBeaconClientPvP : public AFortLobbyBeaconClient
{
public:
	uint8                                        Pad_2399[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconClientPvP* GetDefaultObj();

	void ServerReadyUp();
};

// 0x28 (0x450 - 0x428)
// Class FortniteGame.FortLobbyBeaconClientRM
class AFortLobbyBeaconClientRM : public AFortLobbyBeaconClient
{
public:
	UMulticastDelegateProperty_                  LocalReadiedUpStatusChanged;                       // 0x428(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnUpdateLobbyPlayerPadTop;                         // 0x438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_239B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconClientRM* GetDefaultObj();

	void UpdateNewlyJoinedPlayer();
	void SetLocalReadyStatus(bool bIsReady);
	void ServerUpdateReadyStatus(bool bIsReady);
	void ServerUpdateNewlyJoinedPlayerInternal();
	void ClientBroadcastLobbyPlayerPadTop(struct FUniqueNetIdRepl& ReadiedPlayer, bool bIsReadiedUp);
};

// 0x18 (0x3A0 - 0x388)
// Class FortniteGame.FortLobbyBeaconHost
class AFortLobbyBeaconHost : public ALobbyBeaconHost
{
public:
	uint8                                        bAllowReservationsToProceedToLobby : 1;            // Mask: 0x1, PropSize: 0x10x388(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bWorldRecordLoaded : 1;                            // Mask: 0x2, PropSize: 0x10x388(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_200 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_239C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastReservationCountForPermissionTimeoutChange;    // 0x38C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LobbyPermissionTimeout;                            // 0x390(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_239D[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconHost* GetDefaultObj();

};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.FortLobbyBeaconHostPvE
class AFortLobbyBeaconHostPvE : public AFortLobbyBeaconHost
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconHostPvE* GetDefaultObj();

};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.FortLobbyBeaconHostOutpost
class AFortLobbyBeaconHostOutpost : public AFortLobbyBeaconHostPvE
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconHostOutpost* GetDefaultObj();

};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.FortLobbyBeaconHostPvP
class AFortLobbyBeaconHostPvP : public AFortLobbyBeaconHost
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconHostPvP* GetDefaultObj();

};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.FortLobbyBeaconHostRM
class AFortLobbyBeaconHostRM : public AFortLobbyBeaconHost
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconHostRM* GetDefaultObj();

};

// 0xE0 (0x4B0 - 0x3D0)
// Class FortniteGame.FortLobbyBeaconPlayerState
class AFortLobbyBeaconPlayerState : public ALobbyBeaconPlayerState
{
public:
	struct FUniqueNetIdRepl                      ConsoleUniqueNetId;                                // 0x3D0(0x28)(Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Platform;                                          // 0x3F8(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         TeamAffiliation;                                   // 0x408(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCharXP;                                     // 0x40C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MatchmakingLevel;                                  // 0x410(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeroId;                                            // 0x418(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x428(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeroSquadId;                                       // 0x430(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LobbyTimeRemaining;                                // 0x440(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        HomeBaseVersion;                                   // 0x448(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        SelectedGadgets;                                   // 0x450(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	enum class ETrustedPlatformType              TrustedPlatformType;                               // 0x460(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomGender                 CharacterGender;                                   // 0x461(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23A2[0x4E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconPlayerState* GetDefaultObj();

	void OnRep_LobbyTimeRemaining();
	void OnRep_HomeBaseVersion();
	void OnRep_HeroType();
	void OnRep_HeroSquadId();
	void OnRep_HeroId();
	void OnRep_Gadgets();
	void OnRep_ConsoleUniqueNetId();
	void OnRep_CharXP();
	void OnRep_CharacterGender();
};

// 0x0 (0x4B0 - 0x4B0)
// Class FortniteGame.FortLobbyBeaconPlayerStatePvE
class AFortLobbyBeaconPlayerStatePvE : public AFortLobbyBeaconPlayerState
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconPlayerStatePvE* GetDefaultObj();

};

// 0x8 (0x4B8 - 0x4B0)
// Class FortniteGame.FortLobbyBeaconPlayerStatePvP
class AFortLobbyBeaconPlayerStatePvP : public AFortLobbyBeaconPlayerState
{
public:
	uint8                                        bReadiedUp : 1;                                    // Mask: 0x1, PropSize: 0x10x4B0(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23A3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconPlayerStatePvP* GetDefaultObj();

	void OnRep_bReadiedUp();
};

// 0x8 (0x4B8 - 0x4B0)
// Class FortniteGame.FortLobbyBeaconPlayerStateRM
class AFortLobbyBeaconPlayerStateRM : public AFortLobbyBeaconPlayerState
{
public:
	uint8                                        Pad_23A4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconPlayerStateRM* GetDefaultObj();

};

// 0x40 (0x4B8 - 0x478)
// Class FortniteGame.FortLobbyBeaconState
class AFortLobbyBeaconState : public ALobbyBeaconState
{
public:
	int32                                        MatchmakingLevel;                                  // 0x478(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23A5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MissionGeneratorClassPath;                         // 0x480(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionGenerator*                 CachedMissionGeneratorCDO;                         // 0x490(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELobbyMissionGeneratorDetailsRequirement MissionGeneratorDetailsRequirement;                // 0x498(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWorldRecordLoaded;                                // 0x499(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23A6[0x1E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortLobbyBeaconState* GetDefaultObj();

	void OnRep_MissionGeneratorDetailsRequirement();
	void OnRep_MissionGeneratorClassPath();
};

// 0x0 (0x4B8 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconStatePvE
class AFortLobbyBeaconStatePvE : public AFortLobbyBeaconState
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconStatePvE* GetDefaultObj();

};

// 0x0 (0x4B8 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconStateOutpost
class AFortLobbyBeaconStateOutpost : public AFortLobbyBeaconStatePvE
{
public:

	static class UClass* StaticClass();
	static class AFortLobbyBeaconStateOutpost* GetDefaultObj();

};

// 0x8 (0x4C0 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconStatePvP
class AFortLobbyBeaconStatePvP : public AFortLobbyBeaconState
{
public:
	int32                                        PvPLobbyTimeLimit;                                 // 0x4B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PvPLobbyTimeRemaining;                             // 0x4BC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortLobbyBeaconStatePvP* GetDefaultObj();

	void OnRep_PvPLobbyTimeRemaining();
};

// 0x8 (0x4C0 - 0x4B8)
// Class FortniteGame.FortLobbyBeaconStateRM
class AFortLobbyBeaconStateRM : public AFortLobbyBeaconState
{
public:
	uint8                                        Pad_23A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LobbyTimeRemaining;                                // 0x4BC(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortLobbyBeaconStateRM* GetDefaultObj();

	void OnRep_LobbyTimeRemaining();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortLockOnTargetInterface
class IFortLockOnTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortLockOnTargetInterface* GetDefaultObj();

};

// 0x48 (0x138 - 0xF0)
// Class FortniteGame.FortLOSComponent
class UFortLOSComponent : public UActorComponent
{
public:
	float                                        LOSMaxDistance;                                    // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FOVInDegrees;                                      // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeBetweenChecks;                                 // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopAfterHasBeenFound;                            // 0xFC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDistanceCheckOnly;                                // 0xFD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHasBeenFound;                                    // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bHasBeenFound;                                     // 0x110(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23A9[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortLOSComponent* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortMapMarkerTopperActor
class AFortMapMarkerTopperActor : public AActor
{
public:
	uint8                                        Pad_23AA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortMapMarkerTopperActor* GetDefaultObj();

	void SetLiveMapMarker(class UAthenaMapMarkerItemDefinition* Marker);
	void PreviewMapMarker(class UAthenaMapMarkerItemDefinition* Marker);
	void OnMarkerMoved();
};

// 0xD8 (0x400 - 0x328)
// Class FortniteGame.FortMarkActor
class AFortMarkActor : public AActor
{
public:
	TWeakObjectPtr<class AFortPlayerStateZone>   OwningPlayer;                                      // 0x328(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MarkString;                                        // 0x330(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  PreapprovedMarkString;                             // 0x340(0x18)(Net, NativeAccessSpecifierPublic)
	bool                                         bFinishedEditing;                                  // 0x358(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AttachedToActor;                                   // 0x360(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AttachmentOffset;                                  // 0x368(0xC)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x378(0x88)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortMarkActor* GetDefaultObj();

	void OnRep_AttachedToActor();
};

// 0xD8 (0x100 - 0x28)
// Class FortniteGame.FortMatchAnalytics
class UFortMatchAnalytics : public UObject
{
public:
	uint8                                        Pad_23AD[0xD8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchAnalytics* GetDefaultObj();

	void OnGamePhaseChanged(enum class EAthenaGamePhase Phase);
};

// 0xE8 (0x1E8 - 0x100)
// Class FortniteGame.FortMatchClientAnalytics
class UFortMatchClientAnalytics : public UFortMatchAnalytics
{
public:
	uint8                                        Pad_23AE[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchClientAnalytics* GetDefaultObj();

};

// 0x358 (0x380 - 0x28)
// Class FortniteGame.FortMatchmaking
class UFortMatchmaking : public UObject
{
public:
	uint8                                        Pad_23AF[0x120];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APartyBeaconClient>        ReservationBeaconClientClass;                      // 0x148(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPartyBeaconClient*                ReservationBeaconClient;                           // 0x150(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortLobbyBeaconClient*                LobbyBeaconClient;                                 // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B0[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ControllerId;                                      // 0x1C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TempZoneInstanceId;                                // 0x1D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortCachedMatchmakingSearchParams    CachedMatchmakingSearchParams;                     // 0x1E0(0xC8)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B2[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMatchmakingPolicy*                Matchmaking;                                       // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                LastCriticalMissionSessionId;                      // 0x368(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMatchmakingPrivacyConfiguration LastMatchmakingPrivacyConfiguration;               // 0x378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmaking* GetDefaultObj();

};

// 0x108 (0x130 - 0x28)
// Class FortniteGame.FortMatchmakingPolicy
class UFortMatchmakingPolicy : public UObject
{
public:
	uint8                                        Pad_23B4[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bMatchmakingInProgress;                            // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SessionName;                                       // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMatchmakingParams                    CurrentParams;                                     // 0x58(0xB8)(Transient, Protected, NativeAccessSpecifierProtected)
	class UFortSearchPass*                       MMPass;                                            // 0x110(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChanceToHostAttempt;                               // 0x118(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23B6[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmakingPolicy* GetDefaultObj();

};

// 0x18 (0x148 - 0x130)
// Class FortniteGame.FortMatchmakingCommon
class UFortMatchmakingCommon : public UFortMatchmakingPolicy
{
public:
	uint8                                        Pad_23B7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmakingCommon* GetDefaultObj();

};

// 0x198 (0x1C0 - 0x28)
// Class FortniteGame.FortMatchmakingContext
class UFortMatchmakingContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnMatchmakingStarted;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingComplete;                             // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingStateChange;                          // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMatchmakingFlowChanged;                          // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectionAttemptStarted;                   // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectionAttemptFailed;                    // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectionAttemptProceedToLobby;            // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyWaitingForPlayers;                          // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyWaitingForPlayersTimeUpdate;                // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyStarted;                                    // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyDisconnected;                               // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyConnectingToGame;                           // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyTimeUpdated;                                // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLobbyTimeExpired;                                // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLocalReadyUpStatusChange;                        // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnWorldRecordLoadedChanged;                        // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRejoinCheckCompleted;                            // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortMatchmakingConfig                NormalConfig;                                      // 0x13C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                CriticalConfig;                                    // 0x14C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                QuickPlayConfig;                                   // 0x15C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                OnboardingConfig;                                  // 0x16C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                OutpostConfig;                                     // 0x17C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFortMatchmakingConfig                PvPConfig;                                         // 0x18C(0x10)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        MatchmakingRecommendedRatingOffset;                // 0x19C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMatchmakingFlowActive;                            // 0x1A0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOutpostDiscoveryFailure;                         // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23BA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmakingContext* GetDefaultObj();

	void StartQuickPlay(float MinMissionDifficulty, float MaxMissionDifficulty);
	bool StartOnboardingMission();
	void StartMatchmaking();
	void StartCriticalMission(float MinMissionDifficulty, float MaxMissionDifficulty);
	void SetMatchmakingFlowActive(bool InFlow);
	void SetCustomMatchmakingKey(const class FString& Key);
	void ReadyUp();
	bool NeedToCheckRejoinStatus();
	bool JoinFromLobby();
	bool IsWorldRecordLoaded();
	bool IsOutpostPermitted();
	bool IsMatchmakingLocal();
	bool IsMatchmakingFlowActive();
	bool IsJoinableGameAvailable();
	bool IsInLobby();
	bool IsCustomMatchmakingKeyEnabled();
	bool IsConnectedToGame();
	float GetLobbyWaitForPlayersTimeRemaining();
	class AFortLobbyBeaconClient* GetLobbyBeaconClient();
	class FString GetCustomMatchmakingKey();
	void EnterPvPFOB();
	void EnterOutpost();
	void DisconnectFromLobby();
	void CheckRejoinStatus();
	void CancelMatchmaking();
};

// 0x10 (0x140 - 0x130)
// Class FortniteGame.FortMatchmakingMissionCommon
class UFortMatchmakingMissionCommon : public UFortMatchmakingPolicy
{
public:
	uint8                                        Pad_23BB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmakingMissionCommon* GetDefaultObj();

};

// 0x0 (0x140 - 0x140)
// Class FortniteGame.FortMatchmakingCriticalMission
class UFortMatchmakingCriticalMission : public UFortMatchmakingMissionCommon
{
public:

	static class UClass* StaticClass();
	static class UFortMatchmakingCriticalMission* GetDefaultObj();

};

// 0x20 (0x150 - 0x130)
// Class FortniteGame.FortMatchmakingGather
class UFortMatchmakingGather : public UFortMatchmakingPolicy
{
public:
	float                                        ChanceToJoinInProgress;                            // 0x130(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23BC[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmakingGather* GetDefaultObj();

};

// 0x0 (0x148 - 0x148)
// Class FortniteGame.FortMatchmakingPvE
class UFortMatchmakingPvE : public UFortMatchmakingCommon
{
public:

	static class UClass* StaticClass();
	static class UFortMatchmakingPvE* GetDefaultObj();

};

// 0x0 (0x140 - 0x140)
// Class FortniteGame.FortMatchmakingQuickPlay
class UFortMatchmakingQuickPlay : public UFortMatchmakingMissionCommon
{
public:

	static class UClass* StaticClass();
	static class UFortMatchmakingQuickPlay* GetDefaultObj();

};

// 0x40 (0x170 - 0x130)
// Class FortniteGame.FortMatchmakingSingleSession
class UFortMatchmakingSingleSession : public UFortMatchmakingPolicy
{
public:
	struct FFortInviteSessionParams              CurrentSessionParams;                              // 0x130(0x38)(Transient, NativeAccessSpecifierPrivate)
	class UFortSessionHelper*                    SessionHelper;                                     // 0x168(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortMatchmakingSingleSession* GetDefaultObj();

};

// 0x338 (0x360 - 0x28)
// Class FortniteGame.FortMatchmakingV2
class UFortMatchmakingV2 : public UObject
{
public:
	class FString                                MMSVersionCompatability;                           // 0x28(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                MMSTicketURLClient;                                // 0x38(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MMSPingInterval;                                   // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCustomKeyEnabled;                                 // 0x4C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23BD[0x28B];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortTimeToMatchTracker               TimeToMatchTracker;                                // 0x2D8(0x80)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_23BE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchmakingV2* GetDefaultObj();

};

// 0x18 (0x118 - 0x100)
// Class FortniteGame.FortMatchServerAnalytics
class UFortMatchServerAnalytics : public UFortMatchAnalytics
{
public:
	uint8                                        Pad_23BF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMatchServerAnalytics* GetDefaultObj();

	void OnGamePhaseChanged(enum class EAthenaGamePhase Phase);
};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortAsyncAction_CalendarEventWatcher
class UFortAsyncAction_CalendarEventWatcher : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnEventActive;                                     // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventUpdated;                                    // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEventEnded;                                      // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortGameInstance*                     MyGameInstance;                                    // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23C0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_CalendarEventWatcher* GetDefaultObj();

	class UFortAsyncAction_CalendarEventWatcher* WatchCalendarEvent(class UObject* WorldContextObject, const class FString& EventToWatch);
	void OnClientEventFlagChanged__DelegateSignature(const class FString& EventName, const struct FTimespan& TimeUntilEnd);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortAsyncAction_MCPContextUpgradeItem
class UFortAsyncAction_MCPContextUpgradeItem : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPRequestComplete;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMcpContext>        MCPContext;                                        // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortItem>              ItemToUpgrade;                                     // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_MCPContextUpgradeItem* GetDefaultObj();

	class UFortAsyncAction_MCPContextUpgradeItem* UpgradeItem(class UFortMcpContext* MCPContext, class UFortItem* ItemToUpgrade);
	void OnMCPRequestComplete__DelegateSignature();
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortAsyncAction_MCPContextRecycleItems
class UFortAsyncAction_MCPContextRecycleItems : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPRequestComplete;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMcpContext>        MCPContext;                                        // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UFortItem>>      ItemsToRecycle;                                    // 0x40(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_MCPContextRecycleItems* GetDefaultObj();

	class UFortAsyncAction_MCPContextRecycleItems* RecycleItems(class UFortMcpContext* MCPContext, TArray<class UFortItem*>& ItemsToRecycle);
	void OnMCPRequestComplete__DelegateSignature();
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortAsyncAction_MCPContextConsumeItem
class UFortAsyncAction_MCPContextConsumeItem : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnMCPRequestComplete;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UFortMcpContext>        MCPContext;                                        // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UFortItem>              ItemToConsume;                                     // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      TargetAccountId;                                   // 0x48(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortAsyncAction_MCPContextConsumeItem* GetDefaultObj();

	void OnMCPRequestComplete__DelegateSignature();
	class UFortAsyncAction_MCPContextConsumeItem* ConsumeItem(class UFortMcpContext* MCPContext, class UFortItem* ItemToConsume, struct FUniqueNetIdRepl& TargetAccountId);
};

// 0x3C8 (0x3F0 - 0x28)
// Class FortniteGame.FortMcpContext
class UFortMcpContext : public UBlueprintContextBase
{
public:
	uint8                                        Pad_23D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHeroesChanged;                                   // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGiftBoxRemovedDelegate;                          // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnXpBoostChanged;                                  // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFounderGranted;                                  // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDailyRewardTokenGranted;                         // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLocalAccountInfoChanged;                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCurrentlyViewedAccountInfoChanged;               // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMcpPrivacySettings                   PrivacySettings;                                   // 0xA0(0x2)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnMissionRewardsOpened;                            // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionRewardsOpenFailed;                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionAlertRewardsOpened;                       // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDifficultyIncreaseRewardsClaimed;                // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDifficultyIncreaseRewardsClaimFailed;            // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemCacheRewardsClaimed;                         // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemCacheRewardsClaimFailed;                     // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnResourceCollectorClaimed;                        // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnConversionComplete;                              // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRarityUpgraded;                                  // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTransmogComplete;                                // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTransmogFailed;                                  // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLiveStreamingQuestWindowStarts;                  // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLiveStreamingQuestWindowEnds;                    // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLiveStreamingQuestWindowSelectedViewers;         // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnOfferPurchaseComplete;                           // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnRealMoneyPurchaseComplete;                       // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DB[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFriendCode>                   CachedFriendCodes;                                 // 0x218(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<UDelegateProperty_>                   PendingFriendCodeOnCompleteDelegates;              // 0x228(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23DC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       MinTimeBetweenFriendCodeRequestsSeconds;           // 0x248(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  FriendCodeMessageTitle;                            // 0x250(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFriendCodeLocString>          FriendCodeMessageTitleLocTexts;                    // 0x268(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  FriendCodeMessageBody;                             // 0x278(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  FriendCodeMessageDetails;                          // 0x290(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFriendCodeLocString>          FriendCodeMessageDetailsLocTexts;                  // 0x2A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_23DD[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UDelegateProperty_                           DisplayPurchaseWidget;                             // 0x388(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DismissPurchaseWidget;                             // 0x398(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DisplayLoginWidget;                                // 0x3A8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DismissLoginWidget;                                // 0x3B8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DisplayAccountCreationWidget;                      // 0x3C8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	UDelegateProperty_                           DismissAccountCreationWidget;                      // 0x3D8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23DE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpContext* GetDefaultObj();

	void UpgradeItemRarity(class UFortItem* ItemToUpgrade);
	void UpdatePrivacySettings(struct FMcpPrivacySettings& NewSettings, UDelegateProperty_& OnComplete);
	void TransmogItem(class UFortConversionControlItemDefinition* ControlKeyItem, TArray<class UFortItem*>& ItemsToSacrifice);
	bool StartExpedition(class UFortExpeditionItem* Expedition, float SuccessChance, class FName& SquadId, float SquadRating, TArray<class UFortItem*>& SlottedSquadItems, TArray<int32>& SlotIndices, TArray<float>& ItemRatingMods, float GlobalMod);
	void SetItemFavoriteStatus(class UFortAccountItem* Item, bool bFavorite, bool ShouldDeferMarking);
	void SetBansViewed(UDelegateProperty_ OnBanAcknowledged);
	void SendFriendCodePlatformMessage(struct FFriendCode& FriendCode, UDelegateProperty_& OnCompleteDelegate);
	void RemoveGiftBox(class UFortGiftBoxItem* GiftBoxToRemove);
	void RegisterForEpicPurchasingDisplay(UDelegateProperty_& DisplayCallback, UDelegateProperty_& DismissCallback);
	void RecycleItemBatch(TArray<class UFortItem*>& ItemsToRecycle);
	void RecycleItem(class UFortItem* ItemToRecycle);
	void ReadPrivacySettings(UDelegateProperty_& OnComplete);
	void QueryUnredeemedFriendCodes(UDelegateProperty_& OnCompleteDelegate);
	void PurchaseRealMoneyCatalogEntry(const class FString& OfferId, UDelegateProperty_& Callback);
	enum class EOfferPurchaseError PurchaseOfferAsGift(const class FString& OfferId, int32 Quantity, int32 PriceIndex, TArray<class FString>& ReceiverAccountIds, const class FString& GiftWrapTemplateId, const class FString& UserMessageToRecipients, UDelegateProperty_& OnComplete);
	enum class EOfferPurchaseError PurchaseOffer(const class FString& OfferId, int32 PriceIndex, UDelegateProperty_& Callback, int32 Quantity);
	void OpenMissionRewards();
	void OnSendFriendCodePlatformMessageComplete__DelegateSignature(bool bMessageSent);
	void OnQueryUnredeemedFriendCodesComplete__DelegateSignature(bool bSuccess, TArray<struct FFriendCode>& FriendCodes);
	void OnIssueFriendCodeComplete__DelegateSignature(bool bSuccess, struct FFriendCode& FriendCode);
	void OnDownloadEULAComplete__DelegateSignature(bool bSuccessful, class FText EULAText);
	void MarkItemSeen(class UFortAccountItem* ItemToMarkSeen);
	void ListMtxPackages(UDelegateProperty_& Callback, TArray<class FString>& StorefrontNames);
	bool IsValid(const class FString& OfferId);
	bool IsUserCurrentlyBanned(struct FMcpBanInfo& BanInfo);
	void IssueFriendCode(UDelegateProperty_& OnCompleteDelegate);
	bool IsRealMoneyPurchasePending();
	bool IsOwned(const class FString& OfferId);
	bool IsLocalPlayersUniqueID(struct FUniqueNetIdRepl& PlayerID);
	bool IsDailyRewardAvailable(int32* OutMinutesUntilNextReward);
	bool IsAllowedConversionIndex(class UFortItem* ItemToConvert, int32 RecipeIndex);
	bool HasPendingMissionAlertRewards();
	bool HasPendingDifficultyIncreaseRewards();
	bool HasEULADownloaded();
	void GrantPendingMissionAlertRewards();
	void GrantPendingDifficultyIncreaseRewards();
	int32 GetXpBoostBalance();
	int32 GetUpgradeXPBalance(enum class EFortItemType ItemTypeToBeUpgraded);
	class FString GetTencentIdString();
	int32 GetSchematicXpBalance();
	int32 GetRestXpBonusPercent();
	int32 GetRestXpBalance();
	int32 GetPlayersXPPercentContributionToLocalPlayer(struct FUniqueNetIdRepl& PlayerID);
	int32 GetPersonnelXpBalance();
	int32 GetPersonalXpBonusPercent();
	void GetPendingItemCacheRewards(TArray<class UFortItem*>* OutItemCacheRewards);
	int32 GetNumFriendCodesToIssue(const class FString& CodeType);
	class UFortGiftBoxItem* GetNextMessage();
	class UFortGiftBoxItem* GetNextGiftBox();
	class UFortMcpProfileCampaign* GetMcpProfile();
	void GetLocalAccountInfo(struct FFortPrivateAccountInfo* Result);
	struct FFortAthenaLoadout GetLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId);
	void GetHomeBaseInfoForPlayer(struct FFortHomeBaseInfo* Result, const struct FUniqueNetIdRepl& MemberUniqueId);
	void GetHomeBaseInfo(struct FFortHomeBaseInfo* Result);
	int32 GetHeroXpBalance();
	int32 GetGroupXpBonusPercent();
	class FText GetFriendCodeDisplayName(struct FFriendCode& FriendCode);
	class FText GetFriendCodeDescription(struct FFriendCode& FriendCode);
	class FText GetEULAText();
	class UFortHero* GetDefaultHero();
	void GetCurrentlyViewedAccountInfo(struct FFortPublicAccountInfo* Result);
	class UFortMcpProfileCommonPublic* GetCommonPublicMcpProfile();
	class UFortMcpProfileCommonCore* GetCommonCoreMcpProfile();
	struct FFortCampaignLoadout GetCampaignLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId);
	struct FMcpBanInfo GetBanInfo();
	struct FTimespan GetBanDuration(struct FMcpBanInfo& BanInfo);
	class UFortMcpProfileAthena* GetAthenaProfile();
	class FString GetAppName();
	void GetAllResourceCollectors(TArray<class UFortCollectedResourceItem*>* ResourceCollectorsOwned);
	void GetAllHeroes(TArray<class UFortHero*>* Result);
	void GetAllAlterations(TArray<class UFortAlterationItem*>* OutAlterations, enum class EFortAlteration InAlterationType);
	class UFortAccountItem* GetAccountItemWithDefinition(class UFortAccountItemDefinition* AccountItemDefinition);
	void DownloadEULA(UDelegateProperty_ OnCompleteDelegate);
	bool DoesPlatformSupportFriendCodes();
	void DisplayEmptyStoreDialog();
	void ConvertItem(class UFortItem* ItemToConvert, int32 RecipeIndex);
	void CollectExpedition(class UFortExpeditionItem* Expedition);
	void ClaimResourceCollectors(TArray<class UFortCollectedResourceItem*>& CollectorTypes);
	void ClaimItemCacheReward(class UFortItem* ItemCache);
	void ClaimAllResourceCollectors();
	enum class EOfferPurchaseError CanPurchaseOffer(const class FString& OfferId, int32 PriceIndex, int32 Quantity);
	enum class EOfferPurchaseError CanGiftOffer(const class FString& OfferId, TArray<class FString>& ReceiverAccountIds, const class FString& GiftWrapTemplateId, const class FString& UserMessageToRecipients, int32 PriceIndex);
	void CancelEpicPurchasingDisplay();
	bool AreMissionRewardsAvailable();
	void ApplyAlteration(class UFortAlterableItem* Item, class UFortAlterationItem* AlterationToApply);
	void AbandonExpedition(class UFortExpeditionItem* Expedition);
};

// 0x38 (0x210 - 0x1D8)
// Class FortniteGame.FortMcpProfile
class UFortMcpProfile : public UMcpProfile
{
public:
	uint8                                        Pad_23DF[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfile* GetDefaultObj();

	void MarkItemSeen(TArray<class FString>& ItemIds, struct FClientUrlContext* Context);
};

// 0x28 (0x238 - 0x210)
// Class FortniteGame.FortMcpProfileSubgame
class UFortMcpProfileSubgame : public UFortMcpProfile
{
public:
	struct FFortSubgameClientSettings            CachedClientSettings;                              // 0x210(0x10)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_23E2[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileSubgame* GetDefaultObj();

	void UpdateQuests(TArray<struct FFortQuestObjectiveCompletion>& Advance, struct FDedicatedServerUrlContext* Context);
	void UpdateQuestClientObjectives(TArray<struct FFortQuestObjectiveCompletion>& Advance, struct FClientUrlContext* Context);
	void SetPinnedQuests(TArray<class FString>& PinnedQuestIds, struct FClientUrlContext* Context);
	void SetItemFavoriteStatusBatch(TArray<class FString>& ItemIds, TArray<bool>& ItemFavStatus, struct FClientUrlContext* Context);
	void SetItemFavoriteStatus(const class FString& TargetItemId, bool bFavorite, struct FClientUrlContext* Context);
	void ServerQuestLogin(const class FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context);
	void MarkNewQuestNotificationSent(TArray<class FString>& ItemIds, struct FClientUrlContext* Context);
	void FortRerollDailyQuest(const class FString& QuestId, struct FClientUrlContext* Context);
	void ClientQuestLogin(struct FClientUrlContext* Context);
	void ClaimQuestReward(const class FString& QuestId, int32 SelectedRewardIndex, struct FClientUrlContext* Context);
};

// 0x178 (0x3B0 - 0x238)
// Class FortniteGame.FortMcpProfileAthena
class UFortMcpProfileAthena : public UFortMcpProfileSubgame
{
public:
	uint8                                        Pad_23EA[0x178];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileAthena* GetDefaultObj();

	void SetBattleRoyaleBanner(const class FString& HomebaseBannerIconId, const class FString& HomebaseBannerColorId, struct FClientUrlContext* Context);
	void ReportConsumableUsed(int32 UsedQuantity, const class FString& ItemType, struct FDedicatedServerUrlContext* Context);
	bool HasPurchasedSeasonBook();
	int32 GetSeasonMatchXpBoost();
	bool GetSeasonLevelUpReward(int32 SeasonLevel, struct FFortItemInstanceQuantityPair* Reward, int32* RewardLevel);
	struct FAthenaSeasonRewardLevelInfo GetSeasonLevelInfo(int32 SeasonLevel);
	int32 GetSeasonFriendMatchXpBoost();
	class UAthenaSeasonItemDefinition* GetActiveSeasonDefinition();
	void EquipBattleRoyaleCustomization(enum class EAthenaCustomizationCategory SlotName, const class FString& ItemToSlot, int32 IndexWithinSlot, TArray<struct FMcpVariantReader>& VariantUpdates, struct FClientUrlContext* Context);
	void EndBattleRoyaleGame(TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& PlaylistId, struct FAthenaMatchStats& MatchStats, int32 FriendshipXpBoost, int32 CosmeticXpBoost, float AntiAddictionPlayTimeMultiplier, bool ShouldAccumulateToProfileStats, bool ShouldSaveToRecentGameLists, TArray<class FString>& Medals, struct FDedicatedServerUrlContext* Context);
	bool CanPurchaseSeasonBook();
	void BulkEquipBattleRoyaleCustomization(TArray<struct FFortAthenaLoadoutData>& LoadoutData, struct FClientUrlContext* Context);
};

// 0x58 (0x268 - 0x210)
// Class FortniteGame.FortMcpProfileAthenaStats
class UFortMcpProfileAthenaStats : public UFortMcpProfile
{
public:
	uint8                                        Pad_23EB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaSeasonStats*                    LifeTimeStats;                                     // 0x220(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23EC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAthenaSeasonStats*>            LifeTimeAndSeasonStatsList;                        // 0x240(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23ED[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileAthenaStats* GetDefaultObj();

	class UAthenaSeasonStats* GetLifetimeStats();
	TArray<class UAthenaSeasonStats*> GetLifeTimeAndSeasonList();
};

// 0x88 (0x2C0 - 0x238)
// Class FortniteGame.FortMcpProfileCampaign
class UFortMcpProfileCampaign : public UFortMcpProfileSubgame
{
public:
	uint8                                        Pad_23F7[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileCampaign* GetDefaultObj();

	void UpgradeItemRarity(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeAlteration(const class FString& TargetItemId, int32 AlterationSlot, struct FClientUrlContext* Context);
	void UpdateBuildingLevelAndRating(const class FString& BuildingId, int32 LastBuildingLevel, int32 LastBuildingRating, struct FClientUrlContext* Context);
	void UnslotItemFromCollectionBook(const class FString& ItemId, const class FString& Specific, const class FString& TemplateId, struct FClientUrlContext* Context);
	void UnslotAllWorkers(TArray<class FString>& BuildingIds, struct FClientUrlContext* Context);
	void UnloadWarehouse(TArray<class FString>& ResourceTypes, struct FClientUrlContext* Context);
	void UnassignAllSquads(TArray<class FString>& SquadIds, struct FClientUrlContext* Context);
	void TransmogItem(const class FString& TransmogKeyTemplateId, TArray<class FString>& SacrificeItemIds, struct FClientUrlContext* Context);
	void StartPrimaryMission(TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& MatchmakingSessionId, const class FString& MissionName, struct FDedicatedServerUrlContext* Context);
	void StartExpedition(const class FString& ExpeditionId, const class FString& SquadId, TArray<class FString>& ItemIds, TArray<int32>& SlotIndices, struct FClientUrlContext* Context);
	void SlotItemInCollectionBook(const class FString& ItemId, struct FClientUrlContext* Context);
	void SkipTutorial(struct FClientUrlContext* Context);
	void SetModeLoadout(struct FFortSavedModeLoadout& ModeLoadout, const class FString& HeroId, struct FFortSavedModeLoadout& HeroModeLoadout, struct FClientUrlContext* Context);
	void SetHeroModeLoadout(const class FString& HeroId, struct FFortSavedModeLoadout& ModeLoadout, struct FClientUrlContext* Context);
	void SetGameplayStats(TArray<struct FFortPersistentGameplayStatValue>& GameplayStats, struct FClientUrlContext* Context);
	void RespecAlteration(const class FString& TargetItemId, int32 AlterationSlot, const class FString& AlterationId, struct FClientUrlContext* Context);
	void ResearchItemFromCollectionBook(const class FString& TemplateId, struct FClientUrlContext* Context);
	void RefreshExpeditions(struct FClientUrlContext* Context);
	void RecycleItemBatch(TArray<class FString>& TargetItemIds, struct FClientUrlContext* Context);
	void RecycleItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void PurchaseHomebaseNode(const class FString& NodeID, struct FClientUrlContext* Context);
	void OpenCardPackBatch(TArray<class FString>& CardPackItemIds, struct FClientUrlContext* Context);
	void OpenCardPack(const class FString& CardPackItemId, int32 SelectionIdx, struct FClientUrlContext* Context);
	void ModifyMission(const class FString& MatchmakingSessionId, const class FString& Difficulty, struct FDedicatedServerUrlContext* Context);
	void EquipCharCosmetic(const class FString& CharacterId, const class FString& CosmeticId, int32 TypeId, struct FClientUrlContext* Context);
	void EquipCampaignCustomization(enum class ECampaignCustomizationCategory SlotName, const class FString& ItemToSlot, int32 IndexWithinSlot, struct FClientUrlContext* Context);
	void EndPrimaryMission(TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& MatchmakingSessionId, const class FString& MissionName, const class FString& MissionStatus, TArray<struct FFortQuestEarnedBadgeData>& EarnedBadgeData, TArray<class FString>& EarnedItemCaches, int32 DifficultyIncreaseTier, int32 NumMissionPoints, bool bCriticalMatchBonus, struct FDedicatedServerUrlContext* Context);
	void EarnScore(TArray<struct FAccountIdAndScore>& PlayersAndScores, const class FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context);
	void ConvertLegacyAlterations(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void ConvertItem(const class FString& TargetItemId, int32 ConversionIndex, struct FClientUrlContext* Context);
	void ConsumeItems(TArray<class FString>& ItemsToConsumeIds, TArray<int32>& ItemCountsToConsume, const class FString& ConsumeReason, struct FDedicatedServerUrlContext* Context);
	void CollectExpedition(const class FString& ExpeditionTemplate, const class FString& ExpeditionId, struct FClientUrlContext* Context);
	void ClaimMissionAlertRewards(struct FClientUrlContext* Context);
	void ClaimLoginReward(struct FClientUrlContext* Context);
	void ClaimDifficultyIncreaseRewards(struct FClientUrlContext* Context);
	void ClaimCollectionBookRewards(int32 RequiredXp, int32 SelectedRewardIndex, struct FClientUrlContext* Context);
	void ClaimCollectedResources(TArray<class FString>& CollectorsToClaim, struct FClientUrlContext* Context);
	void AssignWorkerToSquadBatch(TArray<class FString>& CharacterIds, TArray<class FString>& SquadIds, TArray<int32>& SlotIndices, struct FClientUrlContext* Context);
	void AssignWorkerToSquad(const class FString& CharacterId, const class FString& SquadId, int32 SlotIndex, struct FClientUrlContext* Context);
	void ApplyAlteration(const class FString& TargetItemId, const class FString& AlterationItemId, struct FClientUrlContext* Context);
	void ActivateConsumable(const class FString& TargetItemId, const class FString& TargetAccountId, struct FClientUrlContext* Context);
	void AbandonExpedition(const class FString& ExpeditionId, struct FClientUrlContext* Context);
};

// 0x0 (0x210 - 0x210)
// Class FortniteGame.FortMcpProfileCollectionBook
class UFortMcpProfileCollectionBook : public UFortMcpProfile
{
public:

	static class UClass* StaticClass();
	static class UFortMcpProfileCollectionBook* GetDefaultObj();

	void UpgradeSlottedItem(const class FString& TargetItemId, struct FClientUrlContext* Context);
	void ConvertSlottedItem(const class FString& TargetItemId, int32 ConversionIndex, struct FClientUrlContext* Context);
	void ClaimCollectionBookPageRewards(const class FString& PageTemplateId, const class FString& SectionId, int32 SelectedRewardIndex, struct FClientUrlContext* Context);
};

// 0xC0 (0x2D0 - 0x210)
// Class FortniteGame.FortMcpProfileCommonCore
class UFortMcpProfileCommonCore : public UFortMcpProfile
{
public:
	uint8                                        Pad_23FC[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ListCatalogEntriesUrl;                             // 0x290(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23FD[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileCommonCore* GetDefaultObj();

	void TwitchUpdateBroadcasterRegistration(const class FString& AccessToken, const class FString& ChannelId, struct FClientUrlContext* Context);
	void SetReceiveGiftsEnabled(bool bReceiveGifts, struct FClientUrlContext* Context);
	void SetMtxPlatform(const class FString& NewPlatform, struct FClientUrlContext* Context);
	void SetBansViewed(struct FClientUrlContext* Context);
	void RemoveGiftBox(const class FString& GiftBoxItemId, struct FClientUrlContext* Context);
	void RefundMtxPurchase(const class FString& PurchaseId, struct FClientUrlContext* Context);
	void IssueFriendCode(const class FString& CodeTokenType, struct FClientUrlContext* Context);
	void ClaimImportFriendsReward(enum class ESocialImportPanelPlatform Network, struct FClientUrlContext* Context);
};

// 0x58 (0x268 - 0x210)
// Class FortniteGame.FortMcpProfileCommonPublic
class UFortMcpProfileCommonPublic : public UFortMcpProfile
{
public:
	uint8                                        Pad_23FE[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileCommonPublic* GetDefaultObj();

	void SetHomebaseName(const class FString& HomebaseName, struct FClientUrlContext* Context);
	void SetHomebaseBanner(const class FString& HomebaseBannerIconId, const class FString& HomebaseBannerColorId, struct FClientUrlContext* Context);
};

// 0x0 (0x210 - 0x210)
// Class FortniteGame.FortMcpProfileMetadata
class UFortMcpProfileMetadata : public UFortMcpProfile
{
public:

	static class UClass* StaticClass();
	static class UFortMcpProfileMetadata* GetDefaultObj();

	void UpdateOutpostCore(const class FString& CoreId, struct FFortOutpostCoreInfo& CoreInfo, struct FDedicatedServerUrlContext* Context);
	void UpdateDeployableBaseTierProgression(const class FString& DeployableBaseItemId, const class FString& ProgressionLayoutGuid, int32 TierDefeated, struct FDedicatedServerUrlContext* Context);
	void CreateOrUpgradeOutpostItem(const class FString& TemplateId, struct FClientUrlContext* Context);
	void CreateDeployableBaseItem(const class FString& TemplateId, struct FDedicatedServerUrlContext* Context);
};

// 0x1A8 (0x3B8 - 0x210)
// Class FortniteGame.FortMcpProfileWorld
class UFortMcpProfileWorld : public UFortMcpProfile
{
public:
	TArray<struct FFortWorldProfileUpdateRequest> UpdateRequests;                                    // 0x210(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortWorldPlayerLoadout               CachedPlayerLoadout;                               // 0x220(0x140)(Protected, NativeAccessSpecifierProtected)
	class AFortInventory*                        FortInventory;                                     // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                WorldItemsCachedForRejoin;                         // 0x368(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsInventoryInitialized;                           // 0x378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2402[0x3F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpProfileWorld* GetDefaultObj();

	void UnlockProfiles(const class FString& Code, struct FDedicatedServerUrlContext* Context);
	void StorageTransfer(TArray<struct FItemTransferOperation>& TransferOperations, struct FClientUrlContext* Context);
	void ModifyQuickbar(TArray<class FString>& PrimaryQuickbarChoices, const class FString& SecondaryQuickbarChoice, struct FClientUrlContext* Context);
	void LockProfiles(const class FString& Code, int32 Timeout, struct FDedicatedServerUrlContext* Context);
	void InitializeTheater(const class FString& TheaterGuid, struct FDedicatedServerUrlContext* Context);
	void FabricateItem(const class FString& TemplateId, struct FDedicatedServerUrlContext* Context);
	void DisintegrateItems(TArray<class FString>& ItemsToDisintegrateIds, TArray<int32>& ItemCountsToDisintegrate, struct FDedicatedServerUrlContext* Context);
	void DisassembleWorldItems(TArray<struct FItemIdAndQuantityPair>& TargetItemIdAndQuantityPairs, struct FClientUrlContext* Context);
	void DestroyWorldItems(TArray<class FString>& ItemIds, struct FClientUrlContext* Context);
	void DepositPostResources(TArray<class FString>& ItemsToDepositIds, TArray<int32>& ItemCountsToDeposit, struct FDedicatedServerUrlContext* Context);
	void CraftWorldItem(const class FString& TargetSchematicItemId, int32 NumTimesToCraft, struct FClientUrlContext* Context);
	void BatchUpdatePlayers_Outpost(TArray<struct FFortBatchUpdatePlayer_Update>& Updates, const class FString& OutpostId, struct FFortOutpostCoreInfo& OutpostInfo, struct FFortCloudSaveInfo& CloudSaveInfo, struct FDedicatedServerUrlContext* Context);
	void BatchUpdatePlayers_DeployableBase(TArray<struct FFortBatchUpdatePlayer_Update>& Updates, TArray<struct FFortBatchUpdatePlayer_DeployableBaseUpdate>& DeployableBaseUpdates, struct FDedicatedServerUrlContext* Context);
	void BatchUpdatePlayers(TArray<struct FFortBatchUpdatePlayer_Update>& Updates, struct FDedicatedServerUrlContext* Context);
	void AbortDisintegration(struct FDedicatedServerUrlContext* Context);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortMcpResource
class UFortMcpResource : public UObject
{
public:
	uint8                                        Pad_2403[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpResource* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class FortniteGame.FortMcpTwitch
class UFortMcpTwitch : public UFortMcpResource
{
public:

	static class UClass* StaticClass();
	static class UFortMcpTwitch* GetDefaultObj();

};

// 0x180 (0x1A8 - 0x28)
// Class FortniteGame.FortMcpUtils
class UFortMcpUtils : public UObject
{
public:
	uint8                                        Pad_2404[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CreateXboxDedicatedServerSessionUrl;               // 0x48(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                UnredeemedCodesUrl;                                // 0x58(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryUserXuidUrl;                                  // 0x68(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RecordUserStatsUrl;                                // 0x78(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryUserStatsUrl;                                 // 0x88(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryLeaderboardUrl;                               // 0x98(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QueryCohortUrl;                                    // 0xA8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                InMatchTimePlayedUrl;                              // 0xB8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSendTimeTracking;                           // 0xC8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2405[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VoiceLoginUrl;                                     // 0xD0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                VoiceJoinUrl;                                      // 0xE0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                UpdateMatchmakingRatingUrl;                        // 0xF0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PrivacySettingsUrl;                                // 0x100(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                AllowHomebaseCharactersUrl;                        // 0x110(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                QuerySwitchEntitlementsUrl;                        // 0x120(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ReportPlayerToxicityUrl;                           // 0x130(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EventCalendardTestUrl;                             // 0x140(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2406[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultLogTailLengthKb;                            // 0x1A0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2407[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpUtils* GetDefaultObj();

};

// 0x80 (0xC0 - 0x40)
// Class FortniteGame.FortMcpWorlds
class UFortMcpWorlds : public UFortMcpResource
{
public:
	struct FFortActiveTheaterInfo                TheaterInfo;                                       // 0x40(0x30)(NativeAccessSpecifierPrivate)
	int32                                        TheaterQueryRetry;                                 // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2408[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             LastTheaterRefresh;                                // 0x78(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UWorld>                 LastWorld;                                         // 0x80(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2409[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMcpWorlds* GetDefaultObj();

};

// 0x1C8 (0x1F8 - 0x30)
// Class FortniteGame.FortMedicPackSet
class UFortMedicPackSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_240A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            MaxFuel;                                           // 0x38(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Fuel;                                              // 0x58(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveMaxFuel;                                    // 0x78(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ReserveFuel;                                       // 0x98(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelBurnRate;                                      // 0xB8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenRate;                                     // 0xD8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            FuelRegenDelay;                                    // 0xF8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SelfReviveActive;                                  // 0x118(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SelfReviveTime;                                    // 0x138(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SelfReviveCost;                                    // 0x158(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DamageBreaksSelfRevive;                            // 0x178(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Heal;                                              // 0x198(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealRadius;                                        // 0x1B8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealPeriod;                                        // 0x1D8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMedicPackSet* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class FortniteGame.FortMetaNavArea
class UFortMetaNavArea : public UNavAreaMeta
{
public:
	TArray<struct FNavAgentData>                 AgentData;                                         // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMetaNavArea* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortMetaNavArea_Obstacles
class UFortMetaNavArea_Obstacles : public UNavAreaMeta
{
public:
	int32                                        HealthThreshold;                                   // 0x48(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMetaNavArea_Obstacles* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class FortniteGame.FortMetaNavArea_Wall
class UFortMetaNavArea_Wall : public UFortMetaNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortMetaNavArea_Wall* GetDefaultObj();

};

// 0x20 (0x110 - 0xF0)
// Class FortniteGame.FortVisibilityComponent
class UFortVisibilityComponent : public UActorComponent
{
public:
	uint8                                        bRegisterWithVisibilityManager : 1;                // Mask: 0x1, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bObserver : 1;                                     // Mask: 0x2, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDistanceCheck2D : 1;                              // Mask: 0x4, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCheckFacing : 1;                                  // Mask: 0x8, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCheckLOS : 1;                                     // Mask: 0x10, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bRevealWithMap : 1;                                // Mask: 0x20, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_201 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_240C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortVisibilityBehavior           VisibilityBehavior;                                // 0xF4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_240D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnVisibilityChangedEvent;                          // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                        Radius;                                            // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_240E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortVisibilityComponent* GetDefaultObj();

};

// 0xB8 (0x1C8 - 0x110)
// Class FortniteGame.FortMiniMapComponent
class UFortMiniMapComponent : public UFortVisibilityComponent
{
public:
	struct FFortMiniMapData                      MiniMapData;                                       // 0x110(0x80)(Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                            LocalMinimapIconOverride;                          // 0x190(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortMiniMapIndicator>  MiniMapIndicator;                                  // 0x198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_240F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMiniMapComponent* GetDefaultObj();

	void SetupMiniMapComponent(class UTexture2D* MiniMapIcon, const struct FLinearColor& IconColor, const struct FLinearColor& PulseColor, float ColorPulsesPerSecond, float SizePulsesPerSecond);
	void SetMinimapViewableDistance(float ViewDistance);
	void SetMiniMapLocationOffset(struct FVector& LocationOffset);
	void SetMiniMapIndicatorIsVisibleOnMiniMap(bool bVisibleOnMiniMap);
	void SetMiniMapIndicatorIsVisible(bool bVisible);
	void SetMiniMapIconSizePulsesPerSecond(float SizePulsesPerSecond);
	void SetMiniMapIconScale(struct FVector2D& IconScale);
	void SetMiniMapIconPulseColor(const struct FLinearColor& PulseColor);
	void SetMiniMapIconColorPulsesPerSecond(float ColorPulsesPerSecond);
	void SetMiniMapIconColor(const struct FLinearColor& InColor);
	void SetMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OverrideLocalMiniMapIndicatorIsVisible(bool bVisible);
	void OverrideLocalMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OnRep_MiniMapData();
};

// 0x240 (0x348 - 0x108)
// Class FortniteGame.FortMiniMapTeamIndicators
class UFortMiniMapTeamIndicators : public UFortMiniMapIndicator
{
public:
	class AFortPlayerController*                 PlayerController;                                  // 0x108(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSpectating;                                       // 0x110(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2410[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerControllerSpectating*       SpectatorPC;                                       // 0x118(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlatformScale;                                     // 0x120(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2411[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x128(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           MiniMapIconBrushDBNO;                              // 0x1B0(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                          MinimapIconColorSelf;                              // 0x238(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          MinimapIconColorTeammate;                          // 0x248(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          MinimapIconColorEnemy;                             // 0x258(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           PlayerNameBackgroundBrush;                         // 0x268(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateFontInfo                        PlayerNameFontInfo;                                // 0x2F0(0x58)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortMiniMapTeamIndicators* GetDefaultObj();

};

// 0x38 (0x360 - 0x328)
// Class FortniteGame.FortMissionState
class AFortMissionState : public AActor
{
public:
	uint8                                        Pad_2412[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnUpdateUI;                                        // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionUIEvent;                                  // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bAlreadySetTimerOnce;                              // 0x350(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlreadyCalledOnAllPlayersLoadedIn;                // 0x351(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2413[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimerForOnAllPlayersLoadedIn;                      // 0x354(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2414[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortMissionState* GetDefaultObj();

	void UpdateUI();
	void SetTimerForOnAllPlayersLoadedIn(float Timer);
	void SendMissionUIEvent(struct FGameplayTagContainer& EventTags);
	void OnWorldReady();
	void OnMatchStarted();
	void OnAllPlayersLoadedInWrapper();
	void OnAllPlayersLoadedIn();
};

// 0x340 (0x6A0 - 0x360)
// Class FortniteGame.FortMission
class AFortMission : public AFortMissionState
{
public:
	uint8                                        Pad_242D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMissionInfo*                      MissionInfo;                                       // 0x370(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        MissionEnemyClasses;                               // 0x378(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortBotMissionLogic>      BotLogicClass;                                     // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortBotMissionLogic*                  BotLogic;                                          // 0x390(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionGenerator*                 MissionGenerator;                                  // 0x398(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMissionGenerationCategory        MissionCategory;                                   // 0x3A0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_242E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UIIndex;                                           // 0x3A4(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      QuestOwnerAccount;                                 // 0x3A8(0x28)(Net, SaveGame, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionEventName>         MissionEventNames;                                 // 0x3D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, AssetRegistrySearchable, AdvancedDisplay, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnObjectivesUpdated;                               // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMissionInfoSet;                                  // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionPlacementActorPreferredTagInfo> PlacementActorPreferredTagData;                    // 0x400(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bLoadedFromRecord;                                 // 0x410(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFiredParTimeEvent;                                // 0x411(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_242F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MissionActivationTime;                             // 0x414(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortMissionFocusDisplayData          CurrentFocusData;                                  // 0x418(0x20)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bSilentDestroyNextFrame;                           // 0x438(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2430[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortObjectiveBase*>            ActiveObjectives;                                  // 0x440(0x10)(Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              ParticipatingAccounts;                             // 0x450(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              ParticipatingButDisconnectedAccounts;              // 0x460(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	enum class EFortMissionStatus                MissionStatus;                                     // 0x470(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2431[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 MissionCompletionTags;                             // 0x478(0x20)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsMissionVisible;                                 // 0x498(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMissionAudibility            MissionAudibility;                                 // 0x499(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2432[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentObjectiveBlockIndex;                        // 0x49C(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMissionVisibleOverride;                         // 0x4A0(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2433[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 MissionGuid;                                       // 0x4A4(0x10)(Net, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StartingDay;                                       // 0x4B4(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortMissionTimerComponent*            TimerComponent;                                    // 0x4B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bObjectiveTimerExpireShouldFailObjectives;         // 0x4C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMissionTimerExpireShouldFailMission;              // 0x4C1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2434[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChosenRewardIdx;                                   // 0x4C4(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortBadgeCountArray                  PotentialBadgesArray;                              // 0x4C8(0xC0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2435[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGeneratedDifficultyOptions       GeneratedMissionOptions;                           // 0x640(0x40)(Protected, NativeAccessSpecifierProtected)
	struct FFortMissionInstancedConfigData       ConfigData;                                        // 0x680(0x10)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2436[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortMission* GetDefaultObj();

	void StopMissionAIEncounter(class UFortAIEncounterInfo* EncounterToStop);
	void StopEncounterSequence(class UFortAIEncounterSequence* SequenceToStop);
	class UFortAIEncounterInfo* StartMissionAIEncounterFromGeneratedProfile(int32 GeneratedEncounterProfileIndex, TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay, bool bUseAssignments);
	class UFortAIEncounterInfo* StartMissionAIEncounter(TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	TArray<class AActor*> SpawnAtPlacementActorsAsArray(class AFortMission* Mission, bool* bSucceeded);
	void SetUiVisibility(bool bInIsMissionVisible);
	void SetToSilentDestroy();
	void SendBotLogicMessage(const class FString& EventName);
	bool RemoveParticipantAccount(struct FUniqueNetIdRepl* AbandoningPlayerId);
	void RemoveGoalsFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void RemoveGoalFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, struct FFortAIGoalInfo& GoalInfo);
	void RecordResourceActorSpawn(class AActor* SpawnedActor);
	void ProvideAllPotentialBadges(TArray<struct FGameplayTag>& BadgeTags);
	void OnWaveCompleted(int32 Tier, int32 Wave, enum class EFortCompletionResult Result);
	void OnRep_UIIndex();
	void OnRep_QuestOwnerAccount();
	void OnRep_PotentialBadgesArray();
	void OnRep_MissionStatus();
	void OnRep_MissionInfo();
	void OnRep_CurrentFocusDisplayData();
	void OnRep_bIsMissionVisible();
	void OnRep_ActiveObjectives();
	bool IsPlayerParticipating(class AFortPlayerController* PlayerController);
	bool InitializeActorsForMissionMatchingItemIdentifyingQuery(class AFortMission* Mission, struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* OutActorsInitialized);
	bool InitializeActorsForMission(class AFortMission* Mission, TArray<class AActor*>* OutActorsInitialized);
	bool HasMissionPar();
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, enum class EFortRewardType RewardType);
	bool GetSpawnLocationsMatchingQuery(struct FGameplayTagQuery& TagQuery, TArray<struct FVector>* SpawnLocations);
	bool GetSpawnLocationActorsMatchingQuery(struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
	void GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems);
	int32 GetPawnDamageLootTier(class AFortPlayerController* PlayerController);
	TArray<class AFortPlayerController*> GetParticipatingMissionControllers();
	enum class EFortObjectiveStatus GetObjectiveStatusByHandle(struct FGameplayTagContainer& ObjectiveHandle);
	TArray<struct FGameplayTagContainer> GetObjectiveHandlesWithTag(const struct FGameplayTag& ObjectiveTag, int32 MaxNumberOfObjectives);
	class AFortObjectiveBase* GetObjectiveByHandle(struct FGameplayTagContainer& ObjectiveHandle);
	class FText GetMissionName();
	struct FGuid GetMissionGuid();
	float GetExpectedCompletionTime();
	int32 GetDaysRemainingBeforeOverPar();
	float GetCurrentFocusPercentage();
	class FText GetCurrentFocusDisplayText();
	int32 GetCurrentBluGloRewards();
	class UFortMissionConfigData* GetConfigData(const struct FGameplayTag& InBucketTag);
	int32 GetBuildingDamageLootTier(class AFortPlayerController* PlayerController);
	TArray<class AFortObjectiveBase*> GetAllObjectives();
	bool GetAdditionalMissionSuccessBadges(TArray<class UFortWorldItemDefinition*>* SuccessItems);
	int32 GetAdditionalMissionCompletionMissionPoints(enum class EFortMissionStatus CompletionStatus);
	bool GetActorsSpawnedMatchingQuery(struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnedActors);
	void FocusThisMission(class FText FocusDisplayText, float FocusPercentage);
	void FindGoalLocationsForEncounterAssignment(struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, TArray<struct FVector>* OutGoalLocations);
	class UFortAIEncounterSequence* CreateEncounterSequence(struct FGameplayTagContainer& SequenceTags);
	enum class EAssignmentCreationResult CreateEncounterAssignment(struct FGameplayTagContainer& AssignmentTags, class UFortAIEncounterInfo*& Encounter, class UFortAIAssignmentSettings* AssignmentSettings, TSubclassOf<class UFortAIGoalProvider> GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier);
	struct FFortMissionWeightedReward ChooseRandomReward();
	void BlueprintPostMissionLoad();
	void BlueprintOnStartPlaying();
	void BlueprintOnMissionEnd(enum class EFortMissionStatus Status);
	void BlueprintOnActivated();
	void BlueprintCustomHandleMissionEvent(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, struct FFortMissionEvent& MissionEvent);
	bool BlueprintCanPlayerParticipate(class AFortPlayerController* PlayerController);
	void AttemptMissionSave(const class FString& OptionalSaveName);
	bool AddParticipantAccount(class AFortPlayerController* PlayerController);
	void AddGoalToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, struct FFortAIGoalInfo& GoalInfo);
	void AddGoalToAssignment(class UFortAIAssignment* Assignment, struct FFortAIGoalInfo& GoalInfo);
	void AddGoalsToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo*& Encounter, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void AddGoalsToAssignment(class UFortAIAssignment* Assignment, TArray<struct FFortAIGoalInfo>& GoalInfos);
	void AddCompletionTags(const struct FGameplayTagContainer& NewCompletionTagContainer);
	void AddCompletionTag(const struct FGameplayTag& NewCompletionTag);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionConfigData
class UFortMissionConfigData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UFortMissionConfigData* GetDefaultObj();

};

// 0xD8 (0x108 - 0x30)
// Class FortniteGame.FortMissionGenerationData
class UFortMissionGenerationData : public UDataAsset
{
public:
	TArray<class UFortMissionGenerator*>         PrimaryMissionGenerators;                          // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        PrimaryMissionMinPowerPointsUsagePercentage;       // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2437[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  SecondaryMissionPowerPointsBudgetMultiplier;       // 0x48(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinSecondaryMissionPowerPointsMultiplier;          // 0x58(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSecondaryMissionPowerPointsMultiplier;          // 0x68(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinSecondaryMissions;                              // 0x78(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxSecondaryMissions;                              // 0x88(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  TertiaryMissionPowerPointsBudgetMultiplier;        // 0x98(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MinTertiaryMissionPowerPointsMultiplier;           // 0xA8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  MaxTertiaryMissionPowerPointsMultiplier;           // 0xB8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PowerPointsCurve;                                  // 0xC8(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortDifficultyOptionBudget>   EncounterDifficultyOptionBudgets;                  // 0xD8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        EncounterMinDifficultyOptionPointsUsagePercentage; // 0xE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2438[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortDifficultyOptionBudget>   MissionDifficultyOptionBudgets;                    // 0xF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MissionMinDifficultyOptionPointsUsagePercentage;   // 0x100(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2439[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMissionGenerationData* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMissionGenerationList
class UFortMissionGenerationList : public UPrimaryDataAsset
{
public:
	TArray<struct FPerDifficultyMissionGenerationInfo> PerDifficultyMissionGenerationInfos;               // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortMissionGenerationList* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class FortniteGame.FortMissionGenerationManager
class AFortMissionGenerationManager : public AActor
{
public:
	enum class EFortCheatMissionGenType          CheatMissionGenType;                               // 0x328(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortMissionGenerationManager* GetDefaultObj();

};

// 0x690 (0x6C0 - 0x30)
// Class FortniteGame.FortMissionGenerator
class UFortMissionGenerator : public UPrimaryDataAsset
{
public:
	class FText                                  MissionName;                                       // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FText                                  MissionDescription;                                // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MissionIcon;                                       // 0x60(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FFortMultiSizeBrush                   MissionIcons;                                      // 0xE8(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FZoneLoadingScreenConfig              LoadingScreenConfig;                               // 0x418(0x110)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortAthenaLTMConfig                  AthenaLTMConfig;                                   // 0x528(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseNewMissionGeneration;                          // 0x580(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_243B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     OptionalRequirementsForAllOtherMissions;           // 0x588(0x48)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMissionGenerationList> MissionGenerationList;                             // 0x5D0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MissionGenerationChance[0x4];                      // 0x5F8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortMissionInfo>       PrimaryMissionInfo;                                // 0x608(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortPossibleMission>          SecondaryMissionList;                              // 0x630(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortPossibleMission>          TertiaryMissionList;                               // 0x640(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortPossibleMission>          SurvivorMissionList;                               // 0x650(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseOverridePlayerSpawnPadPlacementData;           // 0x660(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_243C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerSpawnPadPlacementData      OverridePlayerSpawnPadPlacementData;               // 0x668(0x58)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortMissionGenerator* GetDefaultObj();

};

// 0x748 (0x778 - 0x30)
// Class FortniteGame.FortMissionInfo
class UFortMissionInfo : public UPrimaryDataAsset
{
public:
	TSoftClassPtr<class AFortMission>            MissionRef;                                        // 0x30(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortMissionType                  MissionType;                                       // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 MissionTags;                                       // 0x60(0x20)(Edit, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	float                                        TimeOfDaySpeed;                                    // 0x80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoneEndDelay;                                      // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ZoneEndDelayOverrideForFailure;                    // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortBadgeItemDefinition*              MissionRewardBadge;                                // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionRewardItemsLootTierGroup;                   // 0x98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxRewardLootTierPoints;                           // 0xA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ParTime;                                           // 0xA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortBadgeItemDefinition*              UnderParBadge;                                     // 0xA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxMissionPoints;                                  // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVictoryTileRequired;                              // 0xB4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_243F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionDescription;                                // 0xB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                   MissionIcons;                                      // 0xD0(0x330)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UMediaSource*                          EndOfMissionMediaSource;                           // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipEndOfMissionVideo;                            // 0x408(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2440[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DaysToLive;                                        // 0x40C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortObjectiveBlock>           ObjectiveBlocks;                                   // 0x410(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bShowMinimapIconsOnlyIfFocused;                    // 0x420(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2441[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExpectedCompletionTime;                            // 0x424(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissionEncounterTime;                              // 0x428(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2442[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortMissionPlacementItems            MissionPlacementInfo;                              // 0x430(0x40)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MinDistanceToOtherMissions;                        // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToAllowSpawnPad;                        // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortPlacementActorFinderInfo         PlacementActorInfo;                                // 0x478(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bStartPlayingOnLoad;                               // 0x490(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequiresActivation;                               // 0x491(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2443[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BluGloActivationRequirement;                       // 0x494(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowDifficultyIncrease;                          // 0x498(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2444[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RewardsTitleText;                                  // 0x4A0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  RewardsDescriptionText;                            // 0x4B8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  NonParticipationRewardsDescriptionText;            // 0x4D0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortMissionPopupWidgetData           PopupWidgetData;                                   // 0x4E8(0x1D0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UFortMissionWeightedRewards*           WeightedRewards;                                   // 0x6B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGroupContent;                                   // 0x6C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2445[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MissionName;                                       // 0x6C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterProfile>         EncounterProfiles;                                 // 0x6E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortEncounterSequenceSettings> EncounterSequences;                                // 0x6F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortDifficultyOptionSetMission> MissionOptions;                                    // 0x700(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 MissionDifficultyOptionTags;                       // 0x728(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMissionTaggedRewards>     TaggedRewards;                                     // 0x748(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMissionPerDifficultyProperties> PerDifficultyProperties;                           // 0x758(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortMissionConfigDataParams          ConfigParams;                                      // 0x768(0x10)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortMissionInfo* GetDefaultObj();

};

// 0x28 (0xB0 - 0x88)
// Class FortniteGame.FortMissionInfoIndicator
class UFortMissionInfoIndicator : public UFortSlateHUDIndicator
{
public:
	uint8                                        Pad_2446[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMissionInfoIndicator* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionInterface
class IFortMissionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortMissionInterface* GetDefaultObj();

};

// 0x8 (0x730 - 0x728)
// Class FortniteGame.FortMissionItemDefinition
class UFortMissionItemDefinition : public UFortWorldItemDefinition
{
public:
	uint8                                        Pad_2447[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMissionItemDefinition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionLibrary
class UFortMissionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortMissionLibrary* GetDefaultObj();

	bool UnregisterForMissionEvents(class AActor* ActorToUnregister, const struct FGuid& MissionGuid);
	void TeleportPlayerPawn(class AFortPlayerPawn* PlayerPawn, const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIgnoreCollision);
	void TeleportPawnNearLocation(class AFortPawn* Pawn, const struct FVector& DestLocation);
	void StopAIEncounterAgainstActor(class UObject* WorldContextObject, class AActor* TargetActor);
	void StopAIEncounter(class UObject* WorldContextObject, class UFortAIEncounterInfo* ActiveEncounter, enum class EFortObjectiveStatus ObjectiveStatus);
	void StartPlayingMission(class UObject* WorldContextObject, struct FGuid& MissionGuid);
	class UFortAIEncounterInfo* StartAIEncounterWithEnvironmentQuery(class UObject* WorldContextObject, class FString* AssociatedMissionName, TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	class UFortAIEncounterInfo* StartAIEncounter(class UObject* WorldContextObject, class FString* AssociatedMissionName, TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay);
	bool SpawnPlacementMissionActor(class UObject* WorldContextObject, TSubclassOf<class AActor>& ActorToSpawn, struct FVector& SpawnLocation, struct FRotator& SpawnRotation, class AActor* PlacementLocationActor, class AActor** OutSpawnedActor);
	class AFortPickup* SpawnMissionItemPickupInWorld(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount);
	class AFortPickup* SpawnMissionItemPickup(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortMissionItemDefinition* MissionItemDefinition, const struct FVector& StartPosition, class AFortPawn* TargetPawn);
	class ABuildingActor* SpawnBuildingActorAtTransform(class UObject* WorldContextObject, const struct FGuid& MissionGuid, TSubclassOf<class ABuildingActor> BuildingClass, struct FTransform& Transform);
	TArray<class AActor*> SpawnAtPlacementActorsHelper(class UObject* WorldContextObject, class UClass* Entries, bool* bSucceeded);
	void SpawnAndCollectPlayerPickups(class UObject* WorldContextObject, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, class FName LootTierGroup, int32 LootTier);
	bool ShouldUseAlternateAIDirectorBalance();
	void SetWorldSavingEnabled(class UObject* WorldContextObject, bool bEnabled);
	void SetOnlinePresenceDoNotDisturb(class UObject* WorldContextObject, bool bDoNotDisturb, class AFortPlayerController* SpecificPlayer);
	void RespawnOutlanderFragments(class UObject* WorldContextObject);
	bool RegisterMissionInfoUIActor(class AActor* AttachmentActor, const struct FGuid& MissionGuid, const struct FVector& AttachementOffset, float MaxVisibleDistance);
	bool RegisterForMissionEvents(class AActor* ActorToRegister, const struct FGuid& MissionGuid);
	int32 PollActorsInVolume(class UObject* WorldContextObject, class UBoxComponent* VolumeBoxComponent, enum class EPollActorsInVolumeTypes PollBuildingTypes, TSubclassOf<class AActor> ActorClassToPoll);
	void PingMinimap(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FLinearColor& PingColor, enum class EFortTeam RequiredTeam);
	int32 NumBluGloFromPlayerState(class AFortPlayerStateZone* PlayerState);
	int32 NumBluGloFromPlayerPawn(class AFortPlayerPawn* PlayerPawn);
	void LoadMission(class UObject* WorldContextObject, class UFortMissionInfo* MissionInfo);
	bool IsUsingNewMissionGeneration(class UObject* WorldContextObject);
	bool HasTags(struct FGameplayTagContainer& ContainerToCheck, struct FGameplayTagContainer& TagsToCheck, bool bRequireAll, bool bCountEmptyAsMatch);
	bool GiveMissionSchematicItemDirectlyToPlayer(class UObject* WorldContextObject, class AFortPlayerController* TargetPlayer, const struct FGuid& MissionGuid, class UFortSchematicItemDefinition* SchematicDefinition);
	void GiveMissionRewardsToPlayerAsPickups(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, float Radius, class FName LootTierGroup, int32 LootTier);
	void GiveMissionRewardsToPlayer(class UObject* WorldContextObject, const struct FGuid& EventGuid, class AFortPlayerController* PlayerController, class FText TitleText, class FText DescriptionText, class FName LootTierGroup, int32 LootTier, float RewardDisplayTime);
	void GetTieredWaveSet(class FName TieredWaveCollectionName, int32 Tier, struct FTieredWaveSetCollectionData* WaveCollectionInfo, TArray<struct FTieredWaveSetData>* OutWaveData);
	void GetTieredWaveBaseWaveLength(class UObject* WorldContextObject, class FName BaseWaveLengthRowName, float OverrideDifficulty, float* OutBaseWaveLength);
	void GetTieredWaveBaseNumKills(class UObject* WorldContextObject, class FName BaseNumOfKillsRowName, float OverrideDifficulty, float* OutBaseNumKills);
	void GetTieredWaveBaseNumKillPoints(class UObject* WorldContextObject, class FName BaseNumOfKillPointsRowName, float OverrideDifficulty, float* OutBaseNumKillPoints);
	float GetMissionHUDTextLineHeightEstimate(class FText Text);
	class AFortMission* GetMissionFromGuid(class UObject* WorldContextObject, struct FGuid& MissionGuid);
	TArray<class AActor*> GetMissionActorsInVectorDirection(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorSubclass, const struct FVector& StartLocation, const struct FVector& DirectionToLookForActors, float Angle, float MaxDistance);
	TArray<class AActor*> GetMissionActorsInEncounterDirection(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorSubclass, const struct FVector& StartLocation, enum class EFortEncounterDirection DirectionToLookForActors, float Angle, float MaxDistance);
	class AFortBluGloManager* GetBluGloManager(class UObject* WorldContextObject);
	TArray<class AFortMission*> GetAllLoadedMissions(class UObject* WorldContextObject);
	class AFortPlacementActor* FindOriginatingPlacementActor(class ABuildingActor* BuildingActor);
	TArray<class ABuildingActor*> FindActorsWithTags(class UObject* WorldContextObject, struct FGameplayTagContainer& Tags);
	void ExecuteMissionEventEx(class UObject* WorldContextObject, const struct FFortMissionEventName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText GenericText, const struct FGameplayTagContainer& GameplayTags);
	void ExecuteMissionEvent(class UObject* WorldContextObject, class FName EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText GenericText, const struct FGameplayTagContainer& GameplayTags);
	struct FFortMissionEvent CreateMissionEvent(class UObject* WorldContextObject, class FName EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, class FText GenericText, const struct FGameplayTagContainer& GameplayTags);
	void CreateDynamicBuildingDeconstructor(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& BoxExtent, bool bIgnoreMissionActors, bool bShrinkAndDestroy);
	void AdjustWaveBasedGameDifficulty(class UObject* WorldContextObject, float FDifficultyAddMod);
	void AddCompletionTagToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTag& NewCompletionTag);
	void AddCompletionTagsToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& NewCompletionTagContainer);
};

// 0x200 (0x528 - 0x328)
// Class FortniteGame.FortMissionManager
class AFortMissionManager : public AActor
{
public:
	TArray<struct FFortMissionEventName>         MissionEventNames;                                 // 0x328(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         PrimaryMissionGE;                                  // 0x338(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortBluGloManager*                    BluGloManager;                                     // 0x368(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AFortMission*>                  Missions;                                          // 0x370(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_246C[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortMissionUIActorHandle>     MissionUIActors;                                   // 0x3D0(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	class AFortMission*                          CurrentUIFocusedMission;                           // 0x3E0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortMission*                          MissionClosestToPar;                               // 0x3E8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnMissionsUpdated;                                 // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_246D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FEarnedBadgeEntryArray                EarnedBadgesArray;                                 // 0x418(0xC0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_246E[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShouldShowSecondaryMissionHeadersChanged;        // 0x510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDisplaySecondaryMissionHeaders;                   // 0x520(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_246F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortMissionManager* GetDefaultObj();

	bool ShouldShowSecondaryMissionHeaders();
	void OnRep_MissionUIActors();
	void OnRep_Missions();
	void OnRep_EarnedBadgesArray();
	void OnRep_CurrentUIFocusedMission();
	bool GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery(class UObject* WorldContextObject, struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
	bool GetSpawnLocationActorsMatchingEntryItemQuery(class UObject* WorldContextObject, struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortMissionOutpostConfigData
class UFortMissionOutpostConfigData : public UFortMissionConfigData
{
public:
	struct FDataTableRowHandle                   DifficultyData;                                    // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionOutpostConfigData* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionOutpostQuestConfigData
class UFortMissionOutpostQuestConfigData : public UFortMissionConfigData
{
public:
	struct FGameplayTag                          LegTag;                                            // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionOutpostQuestConfigData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionPowerPointsInterface
class IFortMissionPowerPointsInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortMissionPowerPointsInterface* GetDefaultObj();

	float GetPowerPointsCost(float LerpValue);
	float GetMaxRangeLerpValue(float PointsAvailable, float PreviousLerpValue);
	float GetInitialRangeLerpValue(float PointsAvailable);
	float GetAvailabilityWeight(float DifficultyLevel);
};

// 0x78 (0x168 - 0xF0)
// Class FortniteGame.FortMissionTimerComponent
class UFortMissionTimerComponent : public UActorComponent
{
public:
	UMulticastDelegateProperty_                  OnMissionTimerComponentUpdated;                    // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMissionTimeDisplayData>       DisplayData;                                       // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FMissionTimerData                     TimerData;                                         // 0x110(0x28)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FText                                  TimerLabelText;                                    // 0x138(0x18)(Edit, Net, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bDisplayInTimeFormat;                              // 0x150(0x1)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETimerOverrideSetting             TimerVisibilityOverrideSetting;                    // 0x151(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2471[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMissionTimerComponent* GetDefaultObj();

	void UnpauseMissionTimer();
	void SetTimerVisibilityOverrideSetting(enum class ETimerOverrideSetting NewVisibilitySetting);
	void SetTimerLabelText(class FText NewLabelText);
	void SetTimerDisplayFormat(bool bNewDisplayInTimeFormat);
	void SetMissionTimer(const class FString& FunctionName, float TimerLength, class AActor* CallbackActor);
	void ResetMissionTimer();
	void PauseMissionTimer();
	void OnRep_TimerVisibilityOverride();
	void OnRep_TimerData();
	bool IsTimerVisible();
	bool IsMissionTimerSet();
	bool IsMissionTimerPaused();
	class FText GetTimeText();
	float GetNormalizedTime();
	float GetMissionTimerTimeRemaining();
	struct FMissionTimeDisplayData GetCorrectTimeDisplayData();
	void DummyTimer();
	void ClearMissionTimer();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionTimerInterface
class IFortMissionTimerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortMissionTimerInterface* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class FortniteGame.FortUINotification
class UFortUINotification : public UObject
{
public:
	class FText                                  Title;                                             // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x40(0x18)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                         bHasAction;                                        // 0x58(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortNotificationType             NotificationType;                                  // 0x59(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2472[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      IdToRepresent;                                     // 0x60(0x28)(BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNotificationCleared;                             // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2473[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortUINotification* GetDefaultObj();

	void TakeAction();
	bool ShouldShowNotification();
	void NotificationShown();
	class UTexture2D* GetImageOverride();
	class UUserWidget* CreateWidget(class APlayerController* OwningPlayer);
	void ClearNotification();
};

// 0x8 (0xA8 - 0xA0)
// Class FortniteGame.FortMissionVoteUINotification
class UFortMissionVoteUINotification : public UFortUINotification
{
public:
	enum class EFortVoteType                     VoteType;                                          // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasVoteEnded;                                     // 0xA1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2474[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VoteResult;                                        // 0xA4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionVoteUINotification* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMissionWeightedRewards
class UFortMissionWeightedRewards : public UDataAsset
{
public:
	TArray<struct FFortMissionWeightedReward>    Rewards;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionWeightedRewards* GetDefaultObj();

};

// 0x10 (0x600 - 0x5F0)
// Class FortniteGame.FortMobileInteractionComponent
class UFortMobileInteractionComponent : public UStaticMeshComponent
{
public:
	class UMaterialInstanceDynamic*              IconMID;                                           // 0x5F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2475[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMobileInteractionComponent* GetDefaultObj();

	void StopRadialTimer();
	void StartRadialTimer(float Duration);
	void SetVisibleStartTime();
	void SetRarityColor(const struct FLinearColor& InColor);
	void SetRadialStartTime(float StartTime);
	void SetRadialOpacity(float Opacity);
	void SetRadialDuration(float Duration);
	void SetIcon(enum class EMobileInteractionIconTypes IconType);
	void SetExtents(const struct FVector& Extents);
	void SetCameraPush(float Offset);
	bool IsAvailable();
};

// 0x0 (0x3A0 - 0x3A0)
// Class FortniteGame.FortMobileLocalPlayer
class UFortMobileLocalPlayer : public UFortLocalPlayer
{
public:

	static class UClass* StaticClass();
	static class UFortMobileLocalPlayer* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMontageLookupTable
class UFortMontageLookupTable : public UPrimaryDataAsset
{
public:
	TArray<struct FMontageLookupData>            MontageLookupDataArray;                            // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortMontageLookupTable* GetDefaultObj();

};

// 0x3E0 (0xB48 - 0x768)
// Class FortniteGame.FortMovementComp_Character
class UFortMovementComp_Character : public UCharacterMovementComponent
{
public:
	float                                        LandHardSoundFallSpeedThreshold;                   // 0x768(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandSoundFallSpeedThreshold;                       // 0x76C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortPawn>                 PushBumpedPawnClass;                               // 0x770(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2476[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NetworkSmoothingVisibilityThreshold;               // 0x78C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerLodRequiredForFloorCheckWhenRendered;        // 0x790(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortAILODLevel                   AILodRequiredForFloorCheckWhenRendered;            // 0x794(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2477[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           VelocityBasedStrafeCurve;                          // 0x798(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           VelocityBasedTurnCurve;                            // 0x7A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           VelocityBasedBackupCurve;                          // 0x7A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWasUsingVelocityBasedTurnCurve;                   // 0x7B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2478[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationYawRateToRestore;                          // 0x7B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeSafeSlideAngle;                        // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeSafeSlideMaxSpeed;                     // 0x7BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeDamageScalarMin;                       // 0x7C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingSlopeSafeSlideNormalZ;                      // 0x7C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAirControlParams                     SkydivingControlParamsPassive;                     // 0x7C8(0xC8)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     SkydivingControlParamsActive;                      // 0x890(0xC8)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     ParachuteControlParamsSkydive;                     // 0x958(0xC8)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FAirControlParams                     ParachuteControlParamsJump;                        // 0xA20(0xC8)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        SlideTimeUntilReset;                               // 0xAE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideIfVelocityLessThanZ;                          // 0xAEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideIfAngleLessThan;                              // 0xAF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlideIfAngleGreaterThan;                           // 0xAF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2479[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallingStartedZ;                                   // 0xB04(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_247A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ReplicatedAcceleration;                            // 0xB30(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bTriggeredFallingFeedbackSinceLanded : 1;          // Mask: 0x1, PropSize: 0x10xB3C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_202 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bUpdatesFloorWhenNotInFullSimulation : 1;          // Mask: 0x10, PropSize: 0x10xB3C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUpdatesFloorWhenNotInFullSimulationOnlyOnNetUpdate : 1; // Mask: 0x20, PropSize: 0x10xB3C(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_247B[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMovementComp_Character* GetDefaultObj();

	bool IsPassivelySkydiving();
	bool IsActivelyStrafingInAir();
	bool IsActivelySkydiving();
};

// 0x78 (0xBC0 - 0xB48)
// Class FortniteGame.FortMovementComp_CharacterAthena
class UFortMovementComp_CharacterAthena : public UFortMovementComp_Character
{
public:
	TArray<struct FAthenaJumpPenalty>            JumpPenalties;                                     // 0xB48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        JumpPenaltyResetTime;                              // 0xB58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247C[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NetworkSmoothingThrottleProxyUpdateForPawnLOD;     // 0xB68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NetworkSkipSkyDivingCollisionForPawnLOD;           // 0xB6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NetworkSmoothingViewAngleThreshold;                // 0xB70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NetworkSmoothingViewAngleThresholdSmall;           // 0xB78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NetworkSmoothingNoThrottleWithinDistanceInMeters;  // 0xB80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_247F[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMovementComp_CharacterAthena* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class FortniteGame.FortMovementSet
class UFortMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            WalkSpeed;                                         // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            RunSpeed;                                          // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SprintSpeed;                                       // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CrouchedRunSpeed;                                  // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CrouchedSprintSpeed;                               // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            BackwardSpeedMultiplier;                           // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            JumpHeight;                                        // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            GravityZScale;                                     // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SpeedMultiplier;                                   // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMovementSet* GetDefaultObj();

	void OnRep_SpeedMultiplier();
};

// 0x50 (0x78 - 0x28)
// Class FortniteGame.FortMtxWallets
class UFortMtxWallets : public UObject
{
public:
	TMap<enum class EFortMtxPlatform, struct FFortMtxPlatformList> SharedWallets;                                     // 0x28(0x50)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortMtxWallets* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class FortniteGame.FortMusicAsset
class UFortMusicAsset : public UPrimaryDataAsset
{
public:
	struct FFortMusicSection                     Sections[0x3];                                     // 0x30(0x48)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        Priority;                                          // 0x78(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortMusicSectionStopBehavior     StopBehavior;                                      // 0x7C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsStinger;                                        // 0x7D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2480[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMusicAsset* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortMusicCombatBank
class UFortMusicCombatBank : public UPrimaryDataAsset
{
public:
	class UFortMusicAsset*                       Assets[0x4];                                       // 0x30(0x20)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMusicCombatBank* GetDefaultObj();

	class UFortMusicAsset* GetAssetFromCombatIntensity(enum class EFortMusicCombatIntensity Intensity);
};

// 0x68 (0x90 - 0x28)
// Class FortniteGame.FortMusicVoice
class UFortMusicVoice : public UObject
{
public:
	UMulticastDelegateProperty_                  OnVoiceStarted;                                    // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnVoiceFinished;                                   // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2482[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMusicVoice* GetDefaultObj();

};

// 0x60 (0x388 - 0x328)
// Class FortniteGame.FortMusicManager
class AFortMusicManager : public AActor
{
public:
	uint8                                        Pad_2486[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 ControllerOwner;                                   // 0x330(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMusicVoice*                       Voices[0x2];                                       // 0x338(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UFortMusicVoice*>               VoicesToCleanUp;                                   // 0x348(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2487[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bWorldReadyCalled : 1;                             // Mask: 0x1, PropSize: 0x10x35C(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_203 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2488[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMusicManagerBank*                 MusicBank;                                         // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2489[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortMusicManager* GetDefaultObj();

	void StopPrimaryMusic(bool bPlayOutro);
	void StopMusicVoice(class UFortMusicVoice* Voice);
	void SetPrimaryMusicVolume(float InVolumeMultiplier);
	void SetMusicBank(class UFortMusicManagerBank* Bank);
	void PlayStinger(class UFortMusicAsset* NewMusicAsset);
	class UFortMusicVoice* PlayMusicVoice(class UFortMusicAsset* Asset);
	void OnVoiceFinished(class UFortMusicVoice* Voice);
	void OnThresholdChange(enum class EFortCombatThresholds OldThreshold, enum class EFortCombatThresholds NewThreshold);
	void OnDayPhaseChanged(enum class EFortDayPhase CurrentDayPhase, enum class EFortDayPhase PreviousDayPhase, bool bAtCreation);
	float GetPrimaryMusicVolume();
	class UFortMusicManagerBank* GetMusicBank();
	float GetEventHeatPercentTotal(enum class EFortCombatEvents CombatEvent);
	float GetEventHeatPercent(enum class EFortCombatEvents CombatEvent);
	class UFortMusicVoice* ChangePrimaryMusic(class UFortMusicAsset* NewMusicAsset, bool bPlayStinger);
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortMusicManagerBank
class UFortMusicManagerBank : public UPrimaryDataAsset
{
public:
	class UFortMusicTimeOfDayBank*               TimeOfDayBank;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMusicCombatBank*                  CombatBank;                                        // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMusicManagerBank* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortMusicTimeOfDayBank
class UFortMusicTimeOfDayBank : public UPrimaryDataAsset
{
public:
	class UFortMusicAsset*                       Assets[0x4];                                       // 0x30(0x20)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMusicTimeOfDayBank* GetDefaultObj();

	class UFortMusicAsset* GetAssetFromDayPhase(enum class EFortDayPhase DayPhase);
};

// 0x20 (0xA8 - 0x88)
// Class FortniteGame.FortNameplateIndicator
class UFortNameplateIndicator : public UFortSlateHUDIndicator
{
public:
	uint8                                        Pad_248B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNameplateIndicator* GetDefaultObj();

	void OnPawnWeaponChanged(class AFortWeapon* NewWeapon, class AFortWeapon* OldWeapon);
	void OnPawnDBNOChanged(bool IsDBNO);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortNavAgentCostData
class UFortNavAgentCostData : public UPrimaryDataAsset
{
public:
	class FName                                  NavAgentName;                                      // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UNavArea>>          NavAreaStrengthBuckets;                            // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortNavAgentCostData* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class FortniteGame.FortNavArea
class UFortNavArea : public UNavArea
{
public:
	uint8                                        bObstacle : 1;                                     // Mask: 0x1, PropSize: 0x10x48(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSmashable : 1;                                    // Mask: 0x2, PropSize: 0x10x48(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNavArea* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_CheapObstacle
class UFortNavArea_CheapObstacle : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_CheapObstacle* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_ClosedDoors
class UFortNavArea_ClosedDoors : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_ClosedDoors* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_DefaultSmashable
class UFortNavArea_DefaultSmashable : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_DefaultSmashable* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_DefenderNull
class UFortNavArea_DefenderNull : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_DefenderNull* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_HuskNull
class UFortNavArea_HuskNull : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_HuskNull* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_LowJump
class UFortNavArea_LowJump : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_LowJump* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_LowSmashable
class UFortNavArea_LowSmashable : public UFortNavArea_DefaultSmashable
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_LowSmashable* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_Obstacle
class UFortNavArea_Obstacle : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_Obstacle* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_PortalOrSmash
class UFortNavArea_PortalOrSmash : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_PortalOrSmash* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class FortniteGame.FortNavArea_SmashableJump
class UFortNavArea_SmashableJump : public UFortNavArea
{
public:
	int32                                        Strength;                                          // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_248D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNavArea_SmashableJump* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_StoneWall
class UFortNavArea_StoneWall : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_StoneWall* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_TakerOnly
class UFortNavArea_TakerOnly : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_TakerOnly* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_TraceSmashable
class UFortNavArea_TraceSmashable : public UFortNavArea_DefaultSmashable
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_TraceSmashable* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_Unwalkable
class UFortNavArea_Unwalkable : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_Unwalkable* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_WalkOverWall
class UFortNavArea_WalkOverWall : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_WalkOverWall* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_WallCorner
class UFortNavArea_WallCorner : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_WallCorner* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortNavArea_WoodenWall
class UFortNavArea_WoodenWall : public UFortNavArea
{
public:

	static class UClass* StaticClass();
	static class UFortNavArea_WoodenWall* GetDefaultObj();

};

// 0x18 (0x68 - 0x50)
// Class FortniteGame.FortNavAreaAutomatic
class UFortNavAreaAutomatic : public UFortNavArea
{
public:
	struct FCurveTableRowHandle                  NavCostCurveHandle;                                // 0x50(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        NavAreaStrength;                                   // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutomaticNavCost;                                  // 0x64(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortNavAreaAutomatic* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortNavGraphGoal
class AFortNavGraphGoal : public AActor
{
public:
	uint8                                        Pad_248E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GraphRadius;                                       // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_248F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortNavGraphGoal* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationMetaFilter
class UFortNavigationMetaFilter : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass();
	static class UFortNavigationMetaFilter* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_Hunting
class UFortNavigationFilter_Hunting : public UFortNavigationMetaFilter
{
public:

	static class UClass* StaticClass();
	static class UFortNavigationFilter_Hunting* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_IgnoreSmashingCost
class UFortNavigationFilter_IgnoreSmashingCost : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass();
	static class UFortNavigationFilter_IgnoreSmashingCost* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_NoSmashing
class UFortNavigationFilter_NoSmashing : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass();
	static class UFortNavigationFilter_NoSmashing* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_NoSmashingIncludeLow
class UFortNavigationFilter_NoSmashingIncludeLow : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass();
	static class UFortNavigationFilter_NoSmashingIncludeLow* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class FortniteGame.FortNavigationFilter_TetherZone
class UFortNavigationFilter_TetherZone : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass();
	static class UFortNavigationFilter_TetherZone* GetDefaultObj();

};

// 0x118 (0x600 - 0x4E8)
// Class FortniteGame.FortNavigationGraph
class AFortNavigationGraph : public ANavigationData
{
public:
	uint8                                        Pad_2490[0x118];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortNavigationGraph* GetDefaultObj();

};

// 0x0 (0x590 - 0x590)
// Class FortniteGame.FortNavLinkBlockerComponent
class UFortNavLinkBlockerComponent : public UBoxComponent
{
public:

	static class UClass* StaticClass();
	static class UFortNavLinkBlockerComponent* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class FortniteGame.FortNavLinkContainer
class AFortNavLinkContainer : public AActor
{
public:

	static class UClass* StaticClass();
	static class AFortNavLinkContainer* GetDefaultObj();

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortNavLinkDefinition
class UFortNavLinkDefinition : public UNavLinkDefinition
{
public:
	struct FFortNavLinkPattern                   Pattern;                                           // 0x50(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortNavLinkPattern>           AdditionalPatterns;                                // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<enum class EBuildingStairsRailing>    StairsRailing;                                     // 0x68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EBuildingFloorRailing             FloorRailing;                                      // 0x78(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortNavLinkPattern               PatternType;                                       // 0x79(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2491[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNavLinkDefinition* GetDefaultObj();

};

// 0x8 (0x598 - 0x590)
// Class FortniteGame.FortNavMesh
class AFortNavMesh : public ARecastNavMesh
{
public:
	class UFortAIHotSpotManager*                 HotSpotManager;                                    // 0x590(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortNavMesh* GetDefaultObj();

};

// 0x8 (0x128 - 0x120)
// Class FortniteGame.FortNavObstacleComponent
class UFortNavObstacleComponent : public UNavRelevantComponent
{
public:
	TSubclassOf<class UNavArea>                  ObstacleAreaClass;                                 // 0x120(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortNavObstacleComponent* GetDefaultObj();

};

// 0x8 (0x730 - 0x728)
// Class FortniteGame.FortNeverPersistItemDefinition
class UFortNeverPersistItemDefinition : public UFortWorldItemDefinition
{
public:
	uint8                                        bAccumulateOnPlayerState : 1;                      // Mask: 0x1, PropSize: 0x10x728(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2492[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNeverPersistItemDefinition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortniteAutomationBlueprintLibrary
class UFortniteAutomationBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortniteAutomationBlueprintLibrary* GetDefaultObj();

	bool ResetFPSChartsData();
	bool ResetForcedAthenaCosmetics();
	TArray<struct FGameplayTag> GetVariantNames(class UAthenaCosmeticItemDefinition* ItemDefinition, const struct FGameplayTag& VariantChannel);
	TArray<struct FGameplayTag> GetVariantChannels(class UAthenaCosmeticItemDefinition* ItemDefinition);
	TArray<class UFortVariantTokenType*> GetAllFortVariantTokens();
	TArray<class UAthenaCosmeticItemDefinition*> GetAllAthenaCosmetics_MultipleType(const TArray<enum class EFortItemType>& Types);
	TArray<class UAthenaCosmeticItemDefinition*> GetAllAthenaCosmetics(enum class EFortItemType Type);
	bool ForceAthenaCosmetic(class UAthenaCosmeticItemDefinition* ItemDefinition);
	bool DumpFPSChartsData(const class FString& EntryName);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortNotificationMessage
class UFortNotificationMessage : public ULocalMessage
{
public:

	static class UClass* StaticClass();
	static class UFortNotificationMessage* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortNotificationQueue
class UFortNotificationQueue : public UObject
{
public:
	TArray<struct FFortDialogDescription>        NotificationQueue;                                 // 0x28(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2496[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortNotificationQueue* GetDefaultObj();

};

// 0x98 (0x3F8 - 0x360)
// Class FortniteGame.FortObjectiveBase
class AFortObjectiveBase : public AFortMissionState
{
public:
	class UFortBadgeItemDefinition*              ObjectiveRewardBadge;                              // 0x360(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItemDefinition*>      ItemsToGiveOnObjectiveStart;                       // 0x368(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bStartPlayingOnMissionStart;                       // 0x378(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAcceptsMissionEventsWhenFinished;                 // 0x379(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_249B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ObjectiveHandle;                                   // 0x380(0x20)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, NativeAccessSpecifierPublic)
	class FString                                ObjectiveAnalyticsName;                            // 0x3A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortObjectiveRequirement         MissionRequirement;                                // 0x3B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsObjectiveVisible;                               // 0x3B1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMissionVisibilityOverride    VisibilityOverride;                                // 0x3B2(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsProgressBarHidden;                              // 0x3B3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortMissionAudibility            ObjectiveAudiblity;                                // 0x3B4(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRelevantToSpecificTeam;                           // 0x3B5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         RelevantTeam;                                      // 0x3B6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortObjectiveStatus              ObjectiveStatus;                                   // 0x3B7(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_249C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortMissionTimerComponent*            TimerComponent;                                    // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                  OnObjectiveStatusChanged;                          // 0x3C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnObjectiveVisibilityChanged;                      // 0x3D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnObjectiveVisibilityOverrideChanged;              // 0x3E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortObjectiveBase* GetDefaultObj();

	void UnpauseObjectiveTimer();
	void StopObjective(enum class EFortObjectiveStatus Status, const class FString& Description, class UFortBadgeItemDefinition* ExtraBadgeToGrant);
	bool StartPlayingObjective();
	void SetUIVisibilityOverride(enum class EFortMissionVisibilityOverride InVisibilityOverride);
	void SetUiVisibility(bool bInIsObjectiveVisible);
	void SetObjectiveTimer(const class FString& FunctionName, float TimerLength, bool bStartPaused);
	void PauseObjectiveTimer();
	void OnRep_ObjectiveVisibilityOverride();
	void OnRep_ObjectiveStatus();
	void OnRep_bIsObjectiveVisible();
	void OnGenericObjectiveEvent();
	bool IsRelevantToTeam(enum class EFortTeam Team);
	bool IsRelevantToASpecificTeam();
	bool IsObjectiveTimerPaused();
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, enum class EFortRewardType RewardType);
	class UFortMissionTimerComponent* GetTimerComponent();
	void GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems);
	float GetObjectiveTimerTimeRemaining();
	class FText GetObjectiveDisplayString();
	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
	void EnableTick(bool bEnabled);
	void ClearObjectiveTimer();
	void BlueprintPostObjectiveLoad();
	void BlueprintOnStartPlaying();
	void BlueprintOnObjectiveEnd(enum class EFortObjectiveStatus Status);
	void BlueprintOnActivated();
	class FText BlueprintGetProgressBarText(int32 ProgressBarIdx);
	float BlueprintGetProgressBarPercentage(int32 ProgressBarIdx);
	struct FLinearColor BlueprintGetProgressBarColor(int32 ProgressBarIdx);
	class FText BlueprintGetObjectiveDisplayText();
	int32 BlueprintGetNumProgressBars();
	void AttemptMissionSave(const class FString& OptionalSaveName);
};

// 0x150 (0x7F0 - 0x6A0)
// Class FortniteGame.FortOnlineAccount
class UFortOnlineAccount : public UOnlineAccountCommon
{
public:
	uint8                                        Pad_249D[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RecommendChatFailureDelay;                         // 0x6F4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecommendChatRandomWindow;                         // 0x6F8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecommendChatBackoffMultiplier;                    // 0x6FC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RecommendChatFailureCountCap;                      // 0x700(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_249E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldRequestGeneralChatRooms;                    // 0x70A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAthenaGlobalChatEnabled;                        // 0x70B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldJoinGlobalChat;                             // 0x70C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldJoinFounderChat;                            // 0x70D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldCheckIfPlatformAllowed;                     // 0x70E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldAthenaQueryRecentPlayers;                   // 0x70F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHadLoginPurchaseCheckFailure;                     // 0x710(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_249F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        IgnoreProducts;                                    // 0x718(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FRestrictedCountry> RestrictedCountries;                               // 0x728(0x50)(Edit, ZeroConstructor, Config, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24A0[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortOnlineAccount* GetDefaultObj();

};

// 0x0 (0x408 - 0x408)
// Class FortniteGame.FortOnlineBeaconHost
class AFortOnlineBeaconHost : public AOnlineBeaconHost
{
public:

	static class UClass* StaticClass();
	static class AFortOnlineBeaconHost* GetDefaultObj();

};

// 0x110 (0x2A0 - 0x190)
// Class FortniteGame.FortOnlineSessionClient
class UFortOnlineSessionClient : public UOnlineSessionClient
{
public:
	uint8                                        Pad_24A1[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortOnlineSessionClient* GetDefaultObj();

};

// 0x0 (0xBB0 - 0xBB0)
// Class FortniteGame.FortOutpostBuilding
class AFortOutpostBuilding : public ABuildingProp
{
public:

	static class UClass* StaticClass();
	static class AFortOutpostBuilding* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortOutpostContext
class UFortOutpostContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnBuildingLevelChanged;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnItemsNeedRefresh;                                // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnGooContentNeedRefresh;                           // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCraftingTableActivationBonusChanged;             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortOutpostContext* GetDefaultObj();

	void UpgradePOST();
	void UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* BuildingToUpgrade);
	void UpgradeBuilding(enum class EOutpostBuildings OutpostBuilding);
	void LeaveOutpostAsParty();
	float GetPOSTBuildingHealthMod(int32 POSTLevel);
	int32 GetOutpostCoreLevel();
	TArray<class UOutpostPOSTRequirementData*> GetNextPOSTLevelRequirements();
	class UFortWorldItemDefinition* GetHarvestingToolForLevel(int32 InHarvestingOptimizerLevel);
	void GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	void GetBuildingUpgradeCost(enum class EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int32 GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingMaxLevel(enum class EOutpostBuildings OutpostBuilding);
	int32 GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingLevel(enum class EOutpostBuildings OutpostBuilding);
	void DepositPOSTResource(class UFortItemDefinition* ResourceItem, int32 Count);
	bool CanUpgradePOST();
	bool CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog);
	bool CanUpgradeBuilding(enum class EOutpostBuildings OutpostBuilding, bool bLog);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.OutpostPOSTRequirementData
class UOutpostPOSTRequirementData : public UObject
{
public:
	class UFortItemDefinition*                   RequirementItemDefinition;                         // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalRequired;                                     // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AlreadyDeposited;                                  // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountOwned;                                       // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasEnough;                                        // 0x3C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AmountToDeposit;                                   // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOutpostPOSTRequirementData* GetDefaultObj();

};

// 0x1C8 (0x1F8 - 0x30)
// Class FortniteGame.FortOutpostData
class UFortOutpostData : public UDataAsset
{
public:
	int32                                        StructureLimitNotificationThreshold;               // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOutpostBuildingData                  StormShieldData;                                   // 0x38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FCraftingTableBuildingData            CraftingTableData;                                 // 0x60(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FFabricatorBuildingData               FabricatorData;                                    // 0x98(0x70)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FHarvestingOptimizerBuildingData      HarvestingOptimizerData;                           // 0x108(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FStorageVaultBuildingData             StorageVaultData;                                  // 0x130(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FOutpostUpgradeAndPrestigeBuildingData OutpostUpgradeAndPrestigeData;                     // 0x168(0x90)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortOutpostData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortOutpostFunctionLibrary
class UFortOutpostFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortOutpostFunctionLibrary* GetDefaultObj();

	void TransferItemToStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int32 Count);
	void TransferItemFromStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int32 Count);
	void SetOutpostGameDifficultyRow(class UObject* WorldContextObject, struct FDataTableRowHandle& GameDifficultyInfo);
	void SetOutpostDefenseActive(class UObject* WorldContextObject, bool bActive);
	void SetCriticalMissionJoinability(class UObject* WorldContextObject, bool bJoinable);
	struct FGameplayTag GetPlacementTagFromOutpostBuildingTag(class UObject* WorldContextObject, struct FGameplayTag& BuildingTag);
	class UFortMissionConfigData* GetOutpostQuestMissionConfigData(class UObject* WorldContextObject, const struct FGameplayTag& ConfigTag);
	class AFortPlayerControllerOutpost* GetOutpostOwner(class UObject* WorldContextObject);
	struct FGameplayTag GetOutpostBuildingTagFromPlacementTag(class UObject* WorldContextObject, struct FGameplayTag& PlacementTag);
	class UFortOutpostItemDefinition* GetOutpostBuildingItemDefinition(class UObject* WorldContextObject, enum class EOutpostBuildings Building);
	void FlushTransferRequests(class AFortPlayerController* Player);
	bool DeployOutpostBuildingTagOnPlacementTag(class UObject* WorldContextObject, struct FGameplayTag& BuildingTag, struct FGameplayTag& PlacementTag);
	void DeactivateCraftingTable(class AFortPlayerControllerOutpost* FortPC);
	void ActivateCraftingTable(class AFortPlayerControllerOutpost* FortPC);
};

// 0x20 (0xE8 - 0xC8)
// Class FortniteGame.FortOutpostItem
class UFortOutpostItem : public UFortCloudSaveItem
{
public:
	struct FFortOutpostCoreInfo                  Outpost_core_info;                                 // 0xC8(0x20)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortOutpostItem* GetDefaultObj();

};

// 0x28 (0x2F0 - 0x2C8)
// Class FortniteGame.FortOutpostItemDefinition
class UFortOutpostItemDefinition : public UFortCloudSaveItemDefinition
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   StaticGameplayEffectsByLevel;                      // 0x2C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class FText                                  LongDescription;                                   // 0x2D8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortOutpostItemDefinition* GetDefaultObj();

	class FText GetLongDescription();
};

// 0xE0 (0x110 - 0x30)
// Class FortniteGame.FortPackPersonality
class UFortPackPersonality : public UDataAsset
{
public:
	class USoundCue*                             TickleVOSound;                                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             TickleSFXSound;                                    // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             HoverVOSound;                                      // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             BuySFXSound;                                       // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGenericVO_Sound;                               // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGenericSFX_Sound;                              // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeSilverVO_Sound;                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeSilverSFX_Sound;                            // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenSilverVO_Sound;                                // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenSilverSFX_Sound;                               // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeGoldVO_Sound;                               // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             UpgradeGoldSFX_Sound;                              // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGoldVO_Sound;                                  // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenGoldSFX_Sound;                                 // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetGenericVO_Sound;                              // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetAxeVO_Sound;                                  // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetBaseballBatVO_Sound;                          // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetGardenHoeVO_Sound;                            // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetGardenRakeVO_Sound;                           // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetHockeyStickVO_Sound;                          // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetPickAxeVO_Sound;                              // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetPitchforkVO_Sound;                            // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetScytheVO_Sound;                               // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetSledgehammerVO_Sound;                         // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             GreetSwordVO_Sound;                                // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             PreHitVO_Sound;                                    // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             DropMusic_Sound;                                   // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                             OpenMusic_Sound;                                   // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPackPersonality* GetDefaultObj();

};

// 0x250 (0x480 - 0x230)
// Class FortniteGame.FortParty
class UFortParty : public UParty
{
public:
	bool                                         bTutorialCompleted;                                // 0x230(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsLeavingConsoleSession;                          // 0x231(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasKickedFromLastParty;                           // 0x232(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMissingConsoleSession;                            // 0x233(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMissingXmppConnection;                            // 0x234(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24B3[0x23B];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowCreateSessionToFail;                         // 0x470(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CreateSessionRetryDelaySeconds;                    // 0x474(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        JoinSessionRetryDelaySeconds;                      // 0x478(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24B5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortParty* GetDefaultObj();

};

// 0x88 (0x4D8 - 0x450)
// Class FortniteGame.FortPartyBeaconClient
class AFortPartyBeaconClient : public APartyBeaconClient
{
public:
	struct FEmptyServerReservation               PendingEmptyReservation;                           // 0x450(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_24B6[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReconnectionInitialTimeout;                        // 0x4C8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReconnectionTimeout;                               // 0x4CC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasReconnected;                                   // 0x4D0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24B7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPartyBeaconClient* GetDefaultObj();

	void ServerReconnectExistingReservation(const class FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ServerEmptyServerReservationRequest(const class FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation);
	void ServerAbandonExistingReservation(const class FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ClientReconnectResponse(enum class EPartyReservationResult ReservationResponse);
	void ClientAllowedToProceedFromReservationTimeout();
	void ClientAllowedToProceedFromReservation();
	void ClientAbandonResponse(enum class EPartyReservationResult ReservationResponse);
};

// 0x38 (0x3F0 - 0x3B8)
// Class FortniteGame.FortPartyBeaconHost
class AFortPartyBeaconHost : public APartyBeaconHost
{
public:
	uint8                                        Pad_24B8[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPartyBeaconHost* GetDefaultObj();

};

// 0xA0 (0x118 - 0x78)
// Class FortniteGame.FortPartyBeaconState
class UFortPartyBeaconState : public UPartyBeaconState
{
public:
	struct FUniqueNetIdRepl                      GameSessionOwner;                                  // 0x78(0x28)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FEmptyServerReservation               ReservationData;                                   // 0xA0(0x58)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_24B9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPartyBeaconState* GetDefaultObj();

};

// 0x890 (0x8B8 - 0x28)
// Class FortniteGame.FortPartyContext
class UFortPartyContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnPartyTransitionStarted;                          // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyTransitionCompleted;                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyJoined;                                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyLeft;                                       // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientPartyStateChanged;                         // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientPlaylistChanged;                           // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClientSquadFillChanged;                          // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnMemberLocationChanged;                           // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyFunctionalityDegradedChanged;               // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyTypeChanged;                                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLeaderFriendsOnlyChanged;                        // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnCrossplayPreferenceChanged;                      // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLeaderInvitesOnlyChanged;                        // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLocalPlayerStateChanged;                         // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPlayerStateChanged;                              // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyDataChanged;                                // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAthenaNumAliveChanged;                           // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAthenaTimeSpentInMatch;                          // 0x138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAthenaReadyTypeChanged;                          // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSlatePartyJoinRequested;                         // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActiveFriendsCountUpdated;                       // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnActiveFriendsUpdated;                            // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyInvitesCountChanged;                        // 0x188(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartyInvitesUpdated;                             // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  RejectInviteComplete;                              // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSocialListChanged;                               // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSentPartyInvite;                                 // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFriendPresenceUpdated;                           // 0x1D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLFGChanged;                                      // 0x1E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartySuggestionAdded;                            // 0x1F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartySuggestionChanged;                          // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartySuggestionUpdated;                          // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPartySuggestionRemoved;                          // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24DD[0xE8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> ActiveMcpFriendsMap;                               // 0x320(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> ActiveConsoleFriendsMap;                           // 0x370(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> AllFriendsMap;                                     // 0x3C0(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> PartyInvitesMap;                                   // 0x410(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24DE[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> FriendsNeedingPartyUpdate;                         // 0x500(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24DF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFortSocialItemHeaderType, class UFortSocialItem*> SocialItemCategories;                              // 0x568(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFortTeam, class UFortUITeamInfo*> TeamsMap;                                          // 0x5C0(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<struct FUniqueNetIdRepl, class AFortPlayerState*> UnassignedPlayerStatesByID;                        // 0x610(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortUITeamInfo*                       LocalPlayerTeam;                                   // 0x680(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E2[0x160];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<struct FFortTeamMemberInfo>             PendingChangedMemberInfos;                         // 0x7E8(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E3[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPartyContext* GetDefaultObj();

	void UnmutePartyMember(struct FUniqueNetIdRepl& PartyMemberId);
	void ShowLocalPlayerExternalProfile();
	void ShowExternalProfile(struct FUniqueNetIdRepl& ProfileToShow);
	void ShowExternalFriendsUI();
	void ShowCrossplaySelectionDialog();
	bool ShouldShowMainMenuFriendsListButton();
	bool ShouldShowHeroPortraits();
	bool ShouldShowCrossplayWarningDialog();
	bool ShouldMcpPartyInvitesBeEnabled();
	void SetPartyProgression(enum class EFortPartyState NewState);
	void SetPartyPrivacySetting(enum class EPartyType PartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void SetMcpPartyInvitesEnabled(bool bEnabled);
	void SetMcpFriendInvitesEnabled(bool bEnabled);
	void SetLocalPlayerLFG(bool bInLFG);
	void SetLocalPartyMemberLocation(enum class EFortPartyMemberLocation Location);
	void SetLocalPartyMemberEmoting();
	void SetChatWhisperTarget(struct FUniqueNetIdRepl& FriendId);
	void SendTeamMemberFriendRequest(struct FFortTeamMemberInfo& TeamMemberInfo);
	void SendPartyInviteNetID(struct FUniqueNetIdRepl& PlayerID);
	void SendPartyInvite(class UFortSocialItem* SocialItem);
	void SendMcpFriendRequest(struct FUniqueNetIdRepl& PlayerID);
	void SendConsoleFriendRequest(struct FUniqueNetIdRepl& PlayerID);
	void RejectPartyInvite(class UFortSocialItem* PartyInvite);
	void PromotePartyMemberToLeader(struct FUniqueNetIdRepl& PartyMemberId);
	void ProcessPendingChangedMemberInfos();
	void OnTimeSpentInMatchChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, class FText& Mins, class FText& Seconds);
	void OnSocialListChangedDelegate__DelegateSignature(TArray<class UFortSocialItem*>& SocialItems);
	void OnSlatePartyJoinRequested__DelegateSignature();
	void OnSendInviteCompleteDelegate__DelegateSignature();
	void OnRejectInviteComplete__DelegateSignature();
	void OnPlayerStateChangedDelegate__DelegateSignature(struct FFortTeamMemberInfo& PlayerInfo);
	void OnPartyTypeChanged__DelegateSignature(enum class EPartyType PartyType);
	void OnPartyTransitionStartedDelegate__DelegateSignature(enum class EFortPartyTransition PartyTransition);
	void OnPartyTransitionCompleteDelegate__DelegateSignature(enum class EFortPartyTransition PartyTransition);
	void OnPartySuggestionRemoved__DelegateSignature(int32 Index);
	void OnPartySuggestionChanged__DelegateSignature(int32 Index, struct FFortPartySuggestion& PartySuggestion);
	void OnPartySuggestionAdded__DelegateSignature(int32 Index, struct FFortPartySuggestion& PartySuggestion);
	void OnPartyLeftDelegate__DelegateSignature();
	void OnPartyJoinedDelegate__DelegateSignature();
	void OnPartyInvitesUpdatedDelegate__DelegateSignature(TArray<class UFortSocialItem*>& ActiveFriends);
	void OnPartyInvitesCountUpdatedDelegate__DelegateSignature(int32 PartyInvitesCount);
	void OnPartyFunctionalityDegradedChanged__DelegateSignature(bool bDegradedFunctionality);
	void OnPartyDataChanged__DelegateSignature(struct FPartyState& PartyData);
	void OnNumAliveChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, int32 NumAlive);
	void OnMemberLocationStateChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, enum class EFortPartyMemberLocation Location);
	void OnLFGChanged__DelegateSignature(bool bLFG);
	void OnLeaderInvitesOnlyChanged__DelegateSignature(bool bLeaderInviteOnly);
	void OnLeaderFriendsOnlyChanged__DelegateSignature(bool bLeaderFriendsOnly);
	void OnFriendsCountChangedDelegate__DelegateSignature(int32 ActiveFriendsCount);
	void OnFriendsChangedDelegate__DelegateSignature(TArray<class UFortSocialItem*>& ActiveFriends);
	void OnFriendPresenceUpdated__DelegateSignature(struct FUniqueNetIdRepl& FriendId);
	void OnCrossplayPreferenceChanged__DelegateSignature();
	void OnClientSquadFillChanged__DelegateSignature(bool bSquadFill);
	void OnClientPlaylistChanged__DelegateSignature(class FName PlaylistChanged);
	void OnClientPartyStateChanged__DelegateSignature(enum class EFortPartyState PartyState);
	void MutePartyMember(struct FUniqueNetIdRepl& PartyMemberId);
	bool LeavePartyForReplay(const class FString& ReplayName, TArray<class FString>& ReplayOptions);
	void LeaveParty();
	void LeaveAction();
	void KickPartyMember(struct FUniqueNetIdRepl& PartyMemberId);
	void JoinParty(class UFortSocialItem* PartyItem, bool bIsRetrying);
	bool IsValidNetID(struct FUniqueNetIdRepl& UniqueNetId);
	bool IsTeamMemberFriend(struct FFortTeamMemberInfo& TeamMemberInfo);
	bool IsPlayerInOurParty(struct FUniqueNetIdRepl& PlayerIdToCheck);
	bool IsPlayerBlocked(struct FUniqueNetIdRepl& PlayerID);
	bool IsPartyMemberMuted(struct FUniqueNetIdRepl& PartyMemberId);
	bool IsPartyFunctionalityDegraded();
	bool IsNetIdFromLocalPlayersPlatform(struct FUniqueNetIdRepl& PlayerID);
	bool IsLocalPlayerPartyLeader();
	bool IsLocalPlayerLFG();
	bool IsLocalPlayerInPersistentParty();
	bool IsLocalPlayerInParty(class UFortSocialItem* SocialItem);
	bool IsInLocalPlayersParty(struct FUniqueNetIdRepl& PlayerID);
	bool IsInCrossplatformParty(bool* bAllPlatformsKnown);
	bool IsEntirePartyInFrontEnd();
	bool IsAthenaPartyMemberReady(struct FUniqueNetIdRepl& MemberId);
	void InviteOrJoinPartySuggestion(struct FFortPartySuggestion& PartySuggestion);
	void InviteOrJoin(class UFortSocialItem* SocialItem);
	bool HasPendingMcpPartyInvitation(struct FUniqueNetIdRepl& PlayerID);
	bool HasPendingFriendRequest();
	void HandlePendingInvites();
	class UFortUITeamInfo* GetTeamInfo(enum class EFortTeam Team);
	void GetSocialItemCategories(TArray<class UFortSocialItem*>* OutSocialCategoryItems);
	class FText GetPlayAgainstWatermarkText();
	void GetPartyTextForPlayer(struct FUniqueNetIdRepl& UniqueNetId, class FText* OutText);
	void GetPartySuggestions(TArray<struct FFortPartySuggestion>* OutSuggestions);
	bool GetPartySuggestionForPlayer(struct FUniqueNetIdRepl& UniqueNetId, struct FFortPartySuggestion* OutPartySuggestion);
	bool GetPartySuggestionActionText(struct FFortPartySuggestion& PartySuggestion, class FText* ActionText);
	bool GetPartySuggestion(int32 Index, struct FFortPartySuggestion* OutSuggestion);
	bool GetPartyPrivacySetting(enum class EPartyType* OutPartyType, bool* OutLeaderFriendsOnly, bool* OutLeaderInvitesOnly);
	bool GetPartyMemberLocation(struct FUniqueNetIdRepl& MemberId, enum class EFortPartyMemberLocation* LocationOut);
	enum class EFortPartyMemberDisplayState GetPartyMemberDisplayState(struct FFortTeamMemberInfo& PartyMemberInfo);
	void GetPartyInvites(TArray<class UFortSocialItem*>* OutPartyInvites);
	int32 GetNumPlayersInLocalParty();
	void GetNonMcpActiveFriends(TArray<class UFortSocialItem*>* OutPlatformActiveFriends);
	enum class EFortFriendRequestStatus GetMcpFriendRequestStatusForPlayer(struct FUniqueNetIdRepl& PlayerID);
	int32 GetMaxTeamSizeForSelectedTheater();
	bool GetLocalTeamTeamMemberInfo(class AFortPlayerState* TeamMemberState, struct FFortTeamMemberInfo* TeamMemberInfo);
	void GetLocalPlayerTeamMemberInfo(struct FFortTeamMemberInfo* LocalPlayerInfo);
	class UFortUITeamInfo* GetLocalPlayerTeam();
	class FString GetLocalPlayerDisplayName();
	bool GetLocalPartyTeamFill();
	enum class EFortPartyState GetLocalPartyProgression();
	class FName GetLocalPartyPlaylist();
	bool GetLocalPartyMemberLocation(enum class EFortPartyMemberLocation* Location);
	enum class EFortFriendRequestStatus GetFriendRequestStatusForTeamMember(struct FFortTeamMemberInfo& TeamMemberInfo, struct FUniqueNetIdRepl* UniqueIdUsed, bool* bIsMcpId);
	class FText GetFillWithWatermarkText();
	int32 GetCurrentPartyMaxSize();
	bool GetConsoleFriendRichPresenceText(struct FUniqueNetIdRepl& FriendId, class FText* RichPresenceText);
	enum class EFortFriendRequestStatus GetConsoleFriendRequestStatusForPlayer(struct FUniqueNetIdRepl& PlayerID);
	void GetAthenaPartyMemberTimeSpentInMatch(struct FUniqueNetIdRepl& MemberId, class FText* OutMinsText, class FText* OutSecondsText);
	enum class EAthenaPartyMemberReadyType GetAthenaPartyMemberReadyType(struct FUniqueNetIdRepl& MemberId);
	class FText GetAthenaPartyMemberReadyText(struct FUniqueNetIdRepl& MemberId);
	int32 GetAthenaNumPlayersAlive(struct FUniqueNetIdRepl& MemberId);
	void GetAllFriendsList(TArray<class UFortSocialItem*>* OutAllFriends);
	void GetActiveFriendsList(TArray<class UFortSocialItem*>* OutActiveFriends);
	void FinishSlatePartyJoinRequested(bool bShouldJoin);
	void ClearPendingInvites();
	bool CanShowExternalProfile(const class FString& TargetPlatform);
	bool CanDisplayFriendsActionNotifications();
	bool CanBeJoined(class UFortSocialItem* SocialItem, enum class EFortPartyRestriction* FailReason);
	bool CanBeInvitedNetID(struct FUniqueNetIdRepl& PlayerID, enum class EFortPartyRestriction* FailReason);
	bool CanBeInvited(class UFortSocialItem* SocialItem, enum class EFortPartyRestriction* FailReason);
	void AttemptRefreshConsoleFriendsList();
	void AthenaPartyMemberReadyTypeChanged__DelegateSignature(struct FUniqueNetIdRepl& UniqueId, enum class EAthenaPartyMemberReadyType MemberReadyType);
	void AcceptMcpFriendRequest(struct FUniqueNetIdRepl& PlayerID);
};

// 0x320 (0x5E0 - 0x2C0)
// Class FortniteGame.FortPartyGameState
class UFortPartyGameState : public UPartyGameState
{
public:
	struct FFortPartyRepState                    PartyState;                                        // 0x2C0(0xA8)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E4[0x278];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPartyGameState* GetDefaultObj();

};

// 0x158 (0x1E0 - 0x88)
// Class FortniteGame.FortPartyMemberState
class UFortPartyMemberState : public UPartyMemberState
{
public:
	struct FFortPartyMemberRepState              MemberState;                                       // 0x88(0x140)(Transient, NativeAccessSpecifierPrivate)
	class UFortHeroType*                         HeroType;                                          // 0x1C8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        NumAliveDiffUpdate;                                // 0x1D0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NumAliveUpdateTimer;                               // 0x1D4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPartyMemberState* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class FortniteGame.FortPathCostEstimator
class UFortPathCostEstimator : public UObject
{
public:
	class AActor*                                GoalActor;                                         // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortNavigationGraph*                  NavGraph;                                          // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24E7[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPathCostEstimator* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPatrolWardInterface
class IFortPatrolWardInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortPatrolWardInterface* GetDefaultObj();

	enum class EWardAffectType GetAffectingType();
	float GetAffectingDistance();
};

// 0x0 (0xF10 - 0xF10)
// Class FortniteGame.FortPawn_FeedbackAnnouncer
class AFortPawn_FeedbackAnnouncer : public AFortPawn
{
public:

	static class UClass* StaticClass();
	static class AFortPawn_FeedbackAnnouncer* GetDefaultObj();

};

// 0x0 (0x1AC0 - 0x1AC0)
// Class FortniteGame.FortPawn_Flinger
class AFortPawn_Flinger : public AFortAIPawn
{
public:

	static class UClass* StaticClass();
	static class AFortPawn_Flinger* GetDefaultObj();

};

// 0x10 (0x1AD0 - 0x1AC0)
// Class FortniteGame.FortPawn_InteractablePawn
class AFortPawn_InteractablePawn : public AFortAIPawn
{
public:
	struct FGuid                                 MyGuid;                                            // 0x1AC0(0x10)(SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortPawn_InteractablePawn* GetDefaultObj();

	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
};

// 0x20 (0x1AE0 - 0x1AC0)
// Class FortniteGame.FortPawn_Taker
class AFortPawn_Taker : public AFortAIPawn
{
public:
	uint8                                        bUseClimbLinks : 1;                                // Mask: 0x1, PropSize: 0x10x1AC0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_204 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_24E9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBuildingHitTime>              BuildingCollisions;                                // 0x1AC8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPawn_Taker* GetDefaultObj();

};

// 0xA90 (0x19A0 - 0xF10)
// Class FortniteGame.FortPlayerPawn
class AFortPlayerPawn : public AFortPawn
{
public:
	uint8                                        Pad_24F2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CrouchMeshOffset;                                  // 0xF28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SelfReviveGameplayEffect;                          // 0xF30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           TeammateReviveGameplayEffect;                      // 0xF38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        SetByCallerReviveHealth;                           // 0xF40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                  DBNOInteractionCollisionProfile;                   // 0xF68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DBNOInteractionBoxExtent;                          // 0xF70(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DBNODeferTime;                                     // 0xF7C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         DBNOInteractCollisionComponent;                    // 0xF80(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          EventReviveTag;                                    // 0xF88(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AggroRangeOverride;                                // 0xF90(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortPawnStasisMode               StasisMode;                                        // 0xF94(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPawnStasisMode               PreviousStasisMode;                                // 0xF95(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSprintJump;                                     // 0xF96(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SprintCancelTime;                                  // 0xF98(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUsingJetpack;                                   // 0xF9C(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanPredictJumpApex;                               // 0xF9D(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F5[0x22];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          UnableToPerformActionMontage;                      // 0xFC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveSoundStimulusBroadcastInterval;                // 0xFC8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24F6[0xE4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayingDriverToPassengerAnimation;                // 0x10B0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F7[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayingPassengerToDriverAnimation;                // 0x10C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F8[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCameraLockedForVehicleSeatTransition;             // 0x10D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F9[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleSpeedAtTimeOfJump;                          // 0x10E0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehiclePawnState                     VehicleStateRep;                                   // 0x10E8(0x10)(Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FVehiclePawnState                     VehicleStateLocal;                                 // 0x10F8(0x10)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVehiclePawnState                     VehicleStateLastTick;                              // 0x1108(0x10)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bShowingOverdriveEffect;                           // 0x1118(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortBuildingState                BuildingState;                                     // 0x1119(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTargeting;                                      // 0x111A(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FB[0x45];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 LastEquippedWeaponGUID;                            // 0x1160(0x10)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24FC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputComponent*                       VehicleInputComponent;                             // 0x1180(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24FD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          BluePrintPlaceAnimation;                           // 0x1190(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          BluePrintEditAnimation;                            // 0x1198(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AnimTrailDisableFlashCount;                        // 0x11A0(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bPawnLODDirty : 1;                                 // Mask: 0x1, PropSize: 0x10x11AC(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_205 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_24FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPartChanged;                                     // 0x11B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              BlueprintPaperMID;                                 // 0x11C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             BlueprintPaperPulseTimeline;                       // 0x11C8(0x98)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCustomColorComponent*                 AccessoryColorSwatchHandler[0x6];                  // 0x1260(0x30)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UFortHero>              Hero;                                              // 0x1290(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomPlayerComponent*                HACK_CustomPRIComponent;                           // 0x1298(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCustomGender                 CharacterGender;                                   // 0x12A0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortCustomBodyType               CharacterBodyType;                                 // 0x12A1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2500[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  CharacterParts[0x6];                               // 0x12A8(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomColorSwatch*                    CharacterColorSwatches[0x2];                       // 0x12D8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomColorSwatch*                    CharacterPartColorSwatches[0x6];                   // 0x12E8(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCharacterPartsCastIndirectShadows;                // 0x1318(0x1)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2501[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                CharacterPartSkeletalMeshComponents[0x6];          // 0x1320(0x30)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomCharacterPart*                  PreviousCharacterParts[0x6];                       // 0x1350(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACustomCharacterPartModifier*          CharacterPartModifiers[0x6];                       // 0x1380(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortCharacterPartsRepMontageInfo     RepCharPartAnimMontageInfo;                        // 0x13B0(0x20)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2502[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAnimInstance>             AnimBPOverride;                                    // 0x13D8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimInstance>             OriginalAnimBP;                                    // 0x13E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortFootstepAudioBank*                FootstepBankOverride;                              // 0x13E8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortFootstepAudioBank*                OriginalFootstepBank;                              // 0x13F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2503[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CarriedObjectAttachmentSocket;                     // 0x1410(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PickupSpeedMultiplier;                             // 0x1418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2504[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x1420(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AboveBelowMiniMapIconBrush;                        // 0x14A8(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           FarOffMiniMapIconBrush;                            // 0x1530(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           DBNOMiniMapIconBrush;                              // 0x15B8(0x88)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorSelf;                              // 0x1640(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorTeammate;                          // 0x1650(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorEnemy;                             // 0x1660(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIndicatorVisibilityDistForEnemies;              // 0x1670(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIndicatorVisibilityDistForAllies;               // 0x1674(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2505[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint16                                       PackedReplicatedSlopeAngles;                       // 0x1690(0x2)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBeingRepossessed;                                 // 0x1692(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitAbilitySystemComponentFromPlayerState;        // 0x1693(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2506[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnFinishedCharacterCustomization;                  // 0x1698(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortCustomizationAssetLoader*         CustomizationAssetLoader;                          // 0x16A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2507[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SpawnParticles;                                    // 0x16B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SpawnSound;                                        // 0x16C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NumSecondsOnGroundBeforeStoppingRagdoll;           // 0x16C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2508[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        BitPad_206 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsLocalPlayer : 1;                                // Mask: 0x4, PropSize: 0x10x16D0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_207 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsInCharacterCustomization : 1;                   // Mask: 0x10, PropSize: 0x10x16D0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDamagedEnemy : 1;                                 // Mask: 0x20, PropSize: 0x10x16D0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_208 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2509[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       PlayerStatus;                                      // 0x16E8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint16                                       AccelerationPack;                                  // 0x16EC(0x2)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AccelerationZPack;                                 // 0x16EE(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ReplicatedViewYaw;                                 // 0x16EF(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAnimNotifyState_RootMotionInterrupt*> RootMotionInterruptNotifyStack;                    // 0x16F0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UAnimMontage*>                  RootMotionInterruptMontageStack;                   // 0x1700(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_250A[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortVisibilityComponent*              VisibilityComponent;                               // 0x1738(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 BlendablesPostProcessComp;                         // 0x1740(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_250B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUseControllerRotationYawToRestore : 1;            // Mask: 0x1, PropSize: 0x10x1750(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_209 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_250C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnBeginSkydivingEvent;                             // 0x1758(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USoundBase*                            CurrentGliderOpenSound;                            // 0x1768(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            CurrentGliderCloseSound;                           // 0x1770(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_250D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRepFortMeshAttachment                AttachmentMesh;                                    // 0x1780(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                AttachmentMeshComponent;                           // 0x1790(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortPawnScriptedBehavior*             BotScriptedBehavior;                               // 0x1798(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsScriptedBot;                                    // 0x17A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSkydiving;                                      // 0x17A1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLocalIsSkydiving;                                 // 0x17A2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsParachuteOpen;                                  // 0x17A3(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsParachuteForcedOpen;                            // 0x17A4(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSkydivingFromBus;                               // 0x17A5(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPendingSkydiveLaunch;                             // 0x17A6(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBelowAutoDeployTestHeight;                      // 0x17A7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSlopeSliding;                                   // 0x17A8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_250E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerParachute*                  ParachuteAttachment;                               // 0x17B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParachuteAttachSocket;                             // 0x17B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ParachuteDeployTraceForGroundDistance;             // 0x17C0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LaunchPadParachuteDeployTraceForGroundDistance;    // 0x17E8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LaunchPadParachuteDeployTraceForDownwardSpeed;     // 0x1810(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        ParachuteDeployVelocityBlend;                      // 0x1838(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        ParachuteCooldownToOpen;                           // 0x1860(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParachuteCooldownToClose;                          // 0x1864(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bParachuteDeployFixedVerticalDistance;             // 0x1868(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_250F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAnimInstance>             PreDrivingAnimBP;                                  // 0x1870(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ParachuteAudioLoop;                                // 0x1878(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       SkydiveAudioLoop;                                  // 0x1880(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SkydivingLoop1P;                                   // 0x1888(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            SkydivingLoop3P;                                   // 0x1890(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ParachuteOpenLoop1P;                               // 0x1898(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            ParachuteOpenLoop3P;                               // 0x18A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2510[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        DriverExitLaunchScalar;                            // 0x18B0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        DriverExitLaunchUpScalar;                          // 0x18D8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PassengerExitLaunchScalar;                         // 0x1900(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FScalableFloat                        PassengerExitLaunchUpScalar;                       // 0x1928(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2511[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              ReplayViewRotation;                                // 0x1974(0xC)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        LastQuickBarSwitchRequestTime;                     // 0x1980(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AFortRemoteControlledPawnAthena> ControlledRCPawn;                                  // 0x1984(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         CachedTeamControllingRC;                           // 0x198C(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2512[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              StoredControlRotation;                             // 0x1990(0xC)(Net, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2513[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerPawn* GetDefaultObj();

	void VerifySkydivingMatchesServer();
	void UpdateAimbotDetectionStatus();
	void UnlockCameraAfterVehicleSeatTransition();
	void UnableToPerformAction(bool bPlayMontage, struct FGameplayTagContainer& FailedReason);
	void ToggleGender();
	void ToggleBodyType();
	float TimeFromJumpApex();
	void SwitchToPreviousPart(const class FString& PartName);
	void SwitchToNextPart(const class FString& PartName);
	void SetStasisMode(enum class EFortPawnStasisMode InStasisMode);
	void SetPendingSkydiveLaunch(bool bPending);
	void SetHomeActor(class AActor* NewActor);
	void SetFootstepBankOverride(class UFortFootstepAudioBank* InFootstepBankOverride);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void SetAnimBPOverride(TSubclassOf<class UAnimInstance> InAnimBPOverride);
	void ServerToggleGender();
	void ServerToggleBodyType();
	void ServerSetAttachment(const struct FRepFortMeshAttachment& Attachment);
	void ServerSetAimbotDetection(bool bEnableDetection);
	void ServerSendAimbotDetectionStatus(TArray<uint8>& Payload);
	void ServerRootMotionInterruptNotifyStopMontage(class UAnimMontage* MontageToStop);
	void ServerReviveFromDBNO(class AController* EventInstigator);
	void ServerRespawnFromDBNO();
	void ServerPlayUnableToPerformActionMontage();
	class AFortAthenaVehicle* ServerOnExitVehicle();
	void ServerHandlePickupWithSwap(class AFortPickup* Pickup, const struct FGuid& Swap, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerHandlePickup(class AFortPickup* Pickup, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerCyclePart(enum class EFortCustomPartType Part, bool bNextPart);
	void ServerCycleColorSwatch(enum class EColorSwatchType SwatchType, bool bNext);
	void ServerCycleAccessoryColorSwatch(enum class EFortCustomPartType Part, bool bNext);
	void ServerChoosePart(enum class EFortCustomPartType Part, class UCustomCharacterPart* ChosenCharacterPart);
	void ServerChooseGender(enum class EFortCustomGender Gender);
	void ReviveFromDBNO(class AController* EventInstigator);
	void RemoveAttachment();
	void RandomizeCharacter(const class FString& GenderString);
	void PassengerToDriverAnimationStopped();
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation);
	void OnSlidingStateChanged(bool bNewSlidingState);
	void OnRep_ParachuteAttachment();
	void OnRep_IsTargeting();
	void OnRep_IsSlopeSliding();
	void OnRep_IsSkydivingFromBus();
	void OnRep_IsSkydiving(bool bPreviousState);
	void OnRep_IsParachuteOpen(bool bPreviousState);
	void OnRep_IsDBNO();
	void OnRep_InVehicle();
	void OnRep_FootstepBankOverride();
	void OnRep_ControlledRCPawn();
	void OnRep_CharPartAnimMontageInfo();
	void OnRep_AttachmentMesh();
	void OnRep_AnimTrailDisableFlashCount();
	void OnRep_AnimBPOverride();
	void OnRep_AccelerationZPack();
	void OnRep_AccelerationPack();
	void OnOpenParachute(bool* bConsumeEvent);
	void OnCharacterPartsReinitialized();
	void NotifyTeammateSkydivedFromBus();
	void ListCharacterParts(const class FString& GenderAndOrPartString);
	bool IsUsingUmbrella();
	bool IsUsingPersonalVehicle();
	bool IsSprinting();
	bool IsSkydivingFromLaunchPad();
	bool IsSkydivingFromBus();
	bool IsSkydiving();
	bool IsPassivelySkydiving();
	bool IsParachuteOpen();
	bool IsParachuteForcedOpen();
	bool IsInVehicle();
	bool IsInCharacterCustomization();
	bool IsDrivingVehicle();
	bool IsActivelyStrafingInAir();
	bool IsActivelySkydiving();
	void HandleInStasis();
	uint8 GetVehicleSeatIndex();
	class AFortAthenaVehicle* GetVehicle();
	enum class EFortPawnStasisMode GetStasisMode();
	float GetStamina();
	struct FVector GetSlopeSlidingNormal();
	void GetSlopeSlidingAngles(float* LocalPitch, float* LocalRoll);
	class USkeletalMeshComponent* GetSkeletalMeshForPartType(enum class EFortCustomPartType PartType);
	float GetSimulatedAttributeValue(struct FGameplayAttribute& Attribute, float DefaultValue);
	bool GetPendingSkydiveLaunch();
	int32 GetPawnLOD();
	float GetMaxStamina();
	bool GetIsSlopeSliding();
	class AActor* GetHomeActor();
	void GetGender(bool* IsMale, bool* IsFemale);
	int32 GetExtraLives();
	class UParticleSystem* GetContrailParticleSystem();
	enum class EFortCustomGender GetCharacterGender();
	enum class EFortCustomBodyType GetCharacterBodyType();
	void ForceDetachFromRemoteControlledPawn();
	void EndHovering();
	void DriverToPassengerAnimationStopped();
	void DebugDestroyVehicle();
	void ClientNotifyAbilityFailed(class UGameplayAbility* FailedAbility, struct FGameplayTagContainer& FailedReason);
	void ClearFootstepBankOverride(class UFortFootstepAudioBank* InFootstepBankOverride);
	void ClearAnimBPOverride(TSubclassOf<class UAnimInstance> InAnimBPOverride);
	bool CanPredictJumpApex();
	void BeginSkydiving(bool bFromBus);
	void BeginHovering();
	void AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, class FName FirstSocketName, class FName SecondSocketName, float Width);
	void AnimTrailsNotify(bool bActive);
	void AnimTrailsDisable();
	void AddAttachment(class USkeletalMesh* Attachment, class UAnimBlueprint* InAnimBP);
};

// 0xD0 (0xF8 - 0x28)
// Class FortniteGame.FortPawnScriptedBehavior
class UFortPawnScriptedBehavior : public UObject
{
public:
	uint8                                        Pad_2514[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FScriptedAction>               ActionTemplates;                                   // 0x48(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FScriptedBehavior>             ScriptedBehaviors;                                 // 0x58(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FScriptedBehavior                     CurrentBehavior;                                   // 0x68(0x20)(Protected, NativeAccessSpecifierProtected)
	struct FScriptedAction                       CurrentCommand;                                    // 0x88(0x70)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortPawnScriptedBehavior* GetDefaultObj();

	void PlaceStructure();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPermaniteStructureInterface
class IFortPermaniteStructureInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortPermaniteStructureInterface* GetDefaultObj();

	void OnBoundariesChanged(int32 MinLevel, int32 MaxLevel, int32 CurrentLevel);
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortPersistentResourceItemDefinition
class UFortPersistentResourceItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                         bIsEventItem;                                      // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2515[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPersistentResourceItemDefinition* GetDefaultObj();

	bool IsEventItem();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortItemTypeFunctionLibrary
class UFortItemTypeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortItemTypeFunctionLibrary* GetDefaultObj();

	class FText ToText(enum class EFortItemType ItemType, bool UsePlural);
	enum class EFortItemType GetTemplateType(enum class EFortItemType ItemType);
};

// 0x0 (0xE0 - 0xE0)
// Class FortniteGame.FortPersonalVehicleItem
class UFortPersonalVehicleItem : public UFortAccountItem
{
public:

	static class UClass* StaticClass();
	static class UFortPersonalVehicleItem* GetDefaultObj();

};

// 0xB0 (0x3E0 - 0x330)
// Class FortniteGame.FortPersonalVehicleItemDefinition
class UFortPersonalVehicleItemDefinition : public UFortAccountItemDefinition
{
public:
	TSoftClassPtr<class UFortGameplayAbility>    PersonalVehicleAbility;                            // 0x330(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MountTime;                                         // 0x358(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2517[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USkeletalMesh>          SkeletalMesh;                                      // 0x360(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAnimInstance>             AnimClass;                                         // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             ActivateSound;                                     // 0x390(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             DeactivateSound;                                   // 0x3B8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortPersonalVehicleItemDefinition* GetDefaultObj();

};

// 0x28 (0x6D0 - 0x6A8)
// Class FortniteGame.FortPhysicsBall
class AFortPhysicsBall : public ABuildingGameplayActor
{
public:
	bool                                         bDetachRootChildrenOnServer;                       // 0x6A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2518[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      SphereCollision;                                   // 0x6B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       RotationPivot;                                     // 0x6B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URotatingMovementComponent*            RotatingMovementComponent;                         // 0x6C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVehicleAudioVoice*                RollingAudioComponent;                             // 0x6C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortPhysicsBall* GetDefaultObj();

};

// 0x0 (0x5A0 - 0x5A0)
// Class FortniteGame.FortPickupAthena
class AFortPickupAthena : public AFortPickup
{
public:

	static class UClass* StaticClass();
	static class AFortPickupAthena* GetDefaultObj();

};

// 0x0 (0x5A0 - 0x5A0)
// Class FortniteGame.FortPickupBackpack
class AFortPickupBackpack : public AFortPickup
{
public:

	static class UClass* StaticClass();
	static class AFortPickupBackpack* GetDefaultObj();

};

// 0x50 (0x378 - 0x328)
// Class FortniteGame.FortPickupEffect
class AFortPickupEffect : public AActor
{
public:
	class UStaticMesh*                           StaticMesh;                                        // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortAlterationItemDefinition*> ActiveAlterations;                                 // 0x338(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*              ItemDefinition;                                    // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotShowSpawnParticles;                          // 0x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotTickSkeletalMeshComponents;                  // 0x351(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PickupColor;                                       // 0x354(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackpackWorldPosition;                             // 0x360(0x10)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOwnedByALocalPlayer : 1;                          // Mask: 0x1, PropSize: 0x10x370(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOwnedByPlayer : 1;                                // Mask: 0x2, PropSize: 0x10x370(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_20A : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_251B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRandomRotation;                                   // 0x374(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_251C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPickupEffect* GetDefaultObj();

	void OnTossed();
	void OnPickedUp();
	void OnAttached();
	void OnAboutToEnterBackpack(class AFortPawn* PickupTarget);
	void EnableBacchusHighlight();
	void DisableBacchusHighlight();
	class UMaterialInstanceDynamic* ApplyCosmeticOverridesToMaterial(class UMeshComponent* MeshComponent, int32 MatIndex);
};

// 0x0 (0x350 - 0x350)
// Class FortniteGame.FortPlacedPawnMarker
class AFortPlacedPawnMarker : public ANavigationObjectBase
{
public:

	static class UClass* StaticClass();
	static class AFortPlacedPawnMarker* GetDefaultObj();

};

// 0x8 (0x5E8 - 0x5E0)
// Class FortniteGame.FortPlacementActor
class AFortPlacementActor : public ABuildingActor
{
public:
	TWeakObjectPtr<class AActor>                 OccupyingActor;                                    // 0x5E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortPlacementActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPlacementActorDataProviderInterface
class IFortPlacementActorDataProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortPlacementActorDataProviderInterface* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortPlacementActorTagTest
class UFortPlacementActorTagTest : public UObject
{
public:
	struct FGameplayTagContainer                 TagsToApplyOnSuccess;                              // 0x28(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TagsToApplyOnFailure;                              // 0x48(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlacementActorTagTest* GetDefaultObj();

	bool ShouldApplyTagsToPlacementActor(class AFortPlacementActor* FocusPlacementActor, struct FVector& AveragePlacementActorLocation);
	bool LineTraceByChannel(class AFortPlacementActor* PlacementActor, const struct FVector& Start, const struct FVector& End, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, TArray<class AActor*>& ActorsToIgnore, struct FHitResult* OutHit, bool bIgnoreSelf);
};

// 0x2B38 (0x2F18 - 0x3E0)
// Class FortniteGame.FortPlayerAnimInstance
class UFortPlayerAnimInstance : public UFortAnimInstance
{
public:
	uint8                                        Pad_2522[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeltaTime;                                         // 0x3E8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2523[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       FortPlayerPawn;                                    // 0x3F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomBodyType               BodyType;                                          // 0x3F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortPlayerAnimBodyType           AnimBodyType;                                      // 0x3F9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCustomGender                 Gender;                                            // 0x3FA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2524[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallAnimDuration;                                  // 0x3FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallPlayRate;                                      // 0x400(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2525[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawnAthena*                 FortPlayerPawnAthena;                              // 0x408(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_SpeedWarping           SpeedWarping;                                      // 0x410(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        JogStartSpeedWarpingAlpha;                         // 0x430(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2526[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_SpeedWarping           JogStartSpeedWarping;                              // 0x438(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_HoverBoard             HoverBoardInput;                                   // 0x458(0x68)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_ShoppingCart           ShoppingCartInput;                                 // 0x4C0(0x78)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SlopeWarpingAlpha;                                 // 0x538(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DBNOSlopeWarpingAlpha;                             // 0x53C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DBNOSlopeRotation;                                 // 0x540(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DBNOTurnPlayRate;                                  // 0x54C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_TurnInPlace            TurnInPlaceInput;                                  // 0x550(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRotator                              TurnPelvisRotationOffset;                          // 0x5A8(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2527[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAnimInput_AdjustedAim            AdjustedAimBase;                                   // 0x5B8(0x1B0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_AdjustedAim            AdjustedAimAthena;                                 // 0x768(0x1B0)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_AdjustedAim            AdjustedAim;                                       // 0x918(0x1B0)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ADSToNonADSBlendTime;                              // 0xAC8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightHandIKAlpha;                                  // 0xACC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftHandIKAlpha;                                   // 0xAD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftHandFKAlpha;                                   // 0xAD4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHandIK;                                     // 0xAD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2528[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SnapWeapon_LHandAlpha;                             // 0xADC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LegIKAlpha;                                        // 0xAE0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_Skydiving              Skydiving;                                         // 0xAE4(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsSlopeSliding;                                   // 0xB2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2529[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SlopeSlidingPitch;                                 // 0xB30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlopeSlidingRoll;                                  // 0xB34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpAdditiveLayerAlpha;                            // 0xB38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCachedAnimStateData                  JumpAdditiveLayerPassthrough;                      // 0xB40(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCachedAnimStateArray                 JumpAdditiveLeanOverride;                          // 0xB60(0x18)(Edit, NativeAccessSpecifierPublic)
	float                                        JumpAdditiveLeanAlpha;                             // 0xB78(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisableArmsHeadAdditiveCurveAlpha;                 // 0xB7C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        CurrentAnimSet;                                    // 0xB80(0xA0)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        DefaultAnimSetMale;                                // 0xC20(0xA0)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        DefaultAnimSetFemale;                              // 0xCC0(0xA0)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        MaleAnimSetOverrides[0x19];                        // 0xD60(0xFA0)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortAnimInput_PlayerAnimAsset        FemaleAnimSetOverrides[0x19];                      // 0x1D00(0xFA0)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AimPitchAdjustment;                                // 0x2CA0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimYawAdjustment;                                  // 0x2CA4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LastFramePawnTransform;                            // 0x2CB0(0x30)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MaxAimYawAdjustment;                               // 0x2CE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitch;                                          // 0x2CE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYaw;                                            // 0x2CE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReticleAimDistance;                                // 0x2CEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimAdjustmentInterpSpeed;                          // 0x2CF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AimTwistCorrectionExponent;                        // 0x2CF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              WeaponAimingFreezeInterpScale;                     // 0x2CF8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_252C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponAimingCurveName;                             // 0x2D08(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeaponAimingFreezeCurveName;                       // 0x2D10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAimWeaponTowardsReticle : 1;                      // Mask: 0x1, PropSize: 0x10x2D18(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDebugWeaponAiming : 1;                            // Mask: 0x2, PropSize: 0x10x2D18(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCachedPawnTransform : 1;                          // Mask: 0x4, PropSize: 0x10x2D18(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasValidWeaponMuzzleSocket : 1;                   // Mask: 0x8, PropSize: 0x10x2D18(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsOnGround : 1;                                   // Mask: 0x10, PropSize: 0x10x2D18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x20, PropSize: 0x10x2D18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPlayingRootMotion : 1;                            // Mask: 0x40, PropSize: 0x10x2D18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsStunned : 1;                                    // Mask: 0x80, PropSize: 0x10x2D18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMontagePlaying : 1;                             // Mask: 0x1, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsPlayingMeleeAnim : 1;                           // Mask: 0x2, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsGoingCommando : 1;                              // Mask: 0x4, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTempIsRelaxedLevel1 : 1;                          // Mask: 0x8, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCrouching : 1;                                  // Mask: 0x10, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsCrouchSprinting : 1;                            // Mask: 0x20, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsingHoverboard : 1;                              // Mask: 0x40, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x80, PropSize: 0x10x2D19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAccelerating2D : 1;                             // Mask: 0x1, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsMoving2D : 1;                                   // Mask: 0x2, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsAboveMinimumLocomotionSpeed : 1;                // Mask: 0x4, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsBackpedaling : 1;                               // Mask: 0x8, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldWalkRightFootFwd : 1;                       // Mask: 0x10, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayJogStartTransition : 1;                 // Mask: 0x20, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayJogStopTransition : 1;                  // Mask: 0x40, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayJogPivotTransition : 1;                 // Mask: 0x80, PropSize: 0x10x2D1A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartTransitionActive : 1;                        // Mask: 0x1, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopTransitionActive : 1;                         // Mask: 0x2, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPivotTransitionActive : 1;                        // Mask: 0x4, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldPlayPostPivotTransition : 1;                // Mask: 0x8, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEarlyOutStartState : 1;                     // Mask: 0x10, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEarlyOutStopState : 1;                      // Mask: 0x20, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldEarlyOutPivotState : 1;                     // Mask: 0x40, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsDBNO : 1;                                       // Mask: 0x80, PropSize: 0x10x2D1B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingJetpack : 1;                               // Mask: 0x1, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsUsingRemoteControlPawn : 1;                     // Mask: 0x2, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInVehicle : 1;                                  // Mask: 0x4, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsInShoppingCart : 1;                             // Mask: 0x8, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsShoppingCartFrontPassenger : 1;                 // Mask: 0x10, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsShoppingCartSidePassenger : 1;                  // Mask: 0x20, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasFacialAnimationData : 1;                       // Mask: 0x40, PropSize: 0x10x2D1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStopJogDoOnceTriggered : 1;                       // Mask: 0x80, PropSize: 0x10x2D1C(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStartJogDoOnceTriggered : 1;                      // Mask: 0x1, PropSize: 0x10x2D1D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPivotTransitionDoOnceTriggered : 1;               // Mask: 0x2, PropSize: 0x10x2D1D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPostPivotTransitionDoOnceTriggered : 1;           // Mask: 0x4, PropSize: 0x10x2D1D(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_20B : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EFortBuildingState                BuildingState;                                     // 0x2D1E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetingWeight;                                   // 0x2D20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeTwistCurveValue;                              // 0x2D24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpUpperBodyBlendWeight;                          // 0x2D28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightArmMaskWeight;                                // 0x2D2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocomotionAdditiveAlpha;                           // 0x2D30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelYawAngle;                                // 0x2D34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelYawAngleLastTick;                        // 0x2D38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelDeltaYawAngle;                           // 0x2D3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x2D40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityZ;                                         // 0x2D44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed2D;                                           // 0x2D48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityYawAngle;                             // 0x2D4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityYawAngleMinusJogBlendSpaceRotation;   // 0x2D50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalVelocityYawAngleMinusMeleeTwist;              // 0x2D54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalAccelVelocityYawDelta;                        // 0x2D58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAdjustedPlayRate;                             // 0x2D5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAdditiveAlpha;                                 // 0x2D60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAngle;                                         // 0x2D64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawAngle;                                    // 0x2D68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocomotionTransitionAdditiveAlpha;                 // 0x2D6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartStateWeight;                                  // 0x2D70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartStateRotationMultiplier;                      // 0x2D74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleNorth;                          // 0x2D78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleEast;                           // 0x2D7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleSouth;                          // 0x2D80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartAnimDeltaAngleWest;                           // 0x2D84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopStateRotationMultiplier;                       // 0x2D88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopStateWeight;                                   // 0x2D8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopAnimDeltaAngle;                                // 0x2D90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JogPrePivotTimer;                                  // 0x2D94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PivotStateWeight;                                  // 0x2D98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrePivotAnimDeltaAngle;                            // 0x2D9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostPivotAnimDeltaAngle;                           // 0x2DA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TransitionPlayRate;                                // 0x2DA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawDeltaCurrentTick;                               // 0x2DA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawDeltaLastTick;                                  // 0x2DAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawDeltaSmoothed;                                  // 0x2DB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbsYawDeltaSmoothed;                               // 0x2DB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldAcceleration;                                 // 0x2DB8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalAcceleration;                                 // 0x2DC4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldVelocity;                                     // 0x2DD0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocalVelocity;                                     // 0x2DDC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ActorSpaceVelocityDirPreTurn;                      // 0x2DE8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              ActorRotationLastTick;                             // 0x2DF4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortWeaponCoreAnimation          WeaponCoreAnim;                                    // 0x2E00(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            LocomotionCardinalDirection;                       // 0x2E01(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            StartTransitionInitialDirection;                   // 0x2E02(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            StopCardinalDirection;                             // 0x2E03(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PrePivotCardinalDirection;                         // 0x2E04(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortCardinalDirection            PostPivotCardinalDirection;                        // 0x2E05(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2531[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetingSpeed;                                    // 0x2E08(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpUpperBodyBlendSpeed;                           // 0x2E0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetingWeightInLocomotion;                       // 0x2E10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumLocomotionSpeed;                            // 0x2E14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BackpedalSpeedThresholdAngle;                      // 0x2E18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedAdjustedPlayratePivotSpeed;                   // 0x2E1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredCrouchSprintSpeed;                         // 0x2E20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredCrouchWalkSpeed;                           // 0x2E24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredCrouchJogSpeed;                            // 0x2E28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredSprintSpeed;                               // 0x2E2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredWalkSpeed;                                 // 0x2E30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredJogBwdSpeed;                               // 0x2E34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredJogFwdSpeed;                               // 0x2E38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AuthoredJogStrafeSpeed;                            // 0x2E3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanFadeInSpeed;                                   // 0x2E40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanFadeOutSpeed;                                  // 0x2E44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAngleMultiplier;                               // 0x2E48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeanAngleBackpedalMultiplier;                      // 0x2E4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawAngleInterpSpeed;                         // 0x2E50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintYawAngleFadeOutSpeed;                        // 0x2E54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocomotionDeadZoneAngle;                           // 0x2E58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartStateRotationFadeInSpeed;                     // 0x2E5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopStateRotationFadeOutSpeed;                     // 0x2E60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JogPivotTimeToPivot;                               // 0x2E64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostPivotAnimInterpSpeed;                          // 0x2E68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAllowedPivotRotation;                           // 0x2E6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MeleeTwistCurveValueName;                          // 0x2E70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MeleeAnimCurveValueName;                           // 0x2E78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AdditiveLayerCurveValueName;                       // 0x2E80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaskRightArmCurveValueName;                        // 0x2E88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StartAnimCurveValueName;                           // 0x2E90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StopAnimCurveValueName;                            // 0x2E98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PivotAnimCurveValueName;                           // 0x2EA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableAdditiveLayer : 1;                          // Mask: 0x1, PropSize: 0x10x2EA8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShouldDisableJogTransitions : 1;                  // Mask: 0x2, PropSize: 0x10x2EA8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_20C : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2533[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HeadTrackingReticleSocketName;                     // 0x2EB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             HeadTrackingReticleSocketLookAtAxis;               // 0x2EB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2535[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeadTrackingReticleInterpSpeed;                    // 0x2EBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              HeadTrackingReticleAdjustment;                     // 0x2EC0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HeadTrackingReticlePitchAlpha;                     // 0x2ECC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadTrackingReticleAimDistance;                    // 0x2ED0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadTrackingReticleAimDistanceDownsights;          // 0x2ED4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagAnimations                GameplayTagAnimations;                             // 0x2ED8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector                               StandardIdlePelvisOffset;                          // 0x2EE8(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LargeFemaleIdlePelvisOffset;                       // 0x2EF4(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IdlePelvisOffset;                                  // 0x2F00(0xC)(Edit, BlueprintVisible, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IdlePelvisOffsetAlpha;                             // 0x2F0C(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PawnLOD;                                           // 0x2F10(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_Sprinting : 1;                // Mask: 0x1, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_Stunned : 1;                  // Mask: 0x2, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_DBNOMove : 1;                 // Mask: 0x4, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_FullBody_DBNOTurn : 1;                 // Mask: 0x8, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_Fullbody_LaunchpadTakeOff : 1;         // Mask: 0x10, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEarlyOut_Lowerbody_Turns : 1;                     // Mask: 0x20, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_LowerBody_Shuffle : 1;                 // Mask: 0x40, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_LowerBody_Movement : 1;                // Mask: 0x80, PropSize: 0x10x2F14(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bTransition_LocomotionAdditive_CrouchTurning : 1;  // Mask: 0x1, PropSize: 0x10x2F15(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_253A[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerAnimInstance* GetDefaultObj();

	void OnPlayMontageFromGameplayTagQuery(struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
	void HandleBeginSkydiving();
	float GetRelativeAngle(float MovementAngle, enum class EFortCardinalDirection Direction, bool bMirrorBackside);
	enum class EFortCardinalDirection GetCardinalDirectionFromAngle(float Angle, float DeadZoneAngle);
	void AnimNotify_StopFireFX(class UAnimNotify* Notify);
	void AnimNotify_SkydiveAdditiveEnd(class UAnimNotify* Notify);
	void AnimNotify_PlaySecondaryFireFX(class UAnimNotify* Notify);
	void AnimNotify_PlayFireFX(class UAnimNotify* Notify);
};

// 0x8 (0x2F20 - 0x2F18)
// Class FortniteGame.FortPlayerAnimInstance_Gauntlet
class UFortPlayerAnimInstance_Gauntlet : public UFortPlayerAnimInstance
{
public:
	float                                        FullBodyOverrideWeight;                            // 0x2F18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bCarmineJumpCharge : 1;                            // Mask: 0x1, PropSize: 0x10x2F1C(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2540[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerAnimInstance_Gauntlet* GetDefaultObj();

};

// 0xC8 (0x2FE0 - 0x2F18)
// Class FortniteGame.FortPlayerAnimInstance_ShoppingCartDriver
class UFortPlayerAnimInstance_ShoppingCartDriver : public UFortPlayerAnimInstance
{
public:
	struct FFortAnimInput_VelocityImpact         VelocityImpact;                                    // 0x2F18(0xB8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ImpactDisplacement;                                // 0x2FD0(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsInAirFarFromGround;                             // 0x2FDC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardVelocityGT400;                             // 0x2FDD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardSpeedKmHLT5;                               // 0x2FDE(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2547[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerAnimInstance_ShoppingCartDriver* GetDefaultObj();

};

// 0x60 (0x388 - 0x328)
// Class FortniteGame.FortPlayerAttributesProxyActor
class AFortPlayerAttributesProxyActor : public AActor
{
public:
	uint8                                        Pad_254A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortPlayerAttributeSets              AttributeSets;                                     // 0x330(0x50)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortPlayerAttributesProxyActor* GetDefaultObj();

};

// 0x340 (0x370 - 0x30)
// Class FortniteGame.FortPlayerAttrSet
class UFortPlayerAttrSet : public UFortAttributeSet
{
public:
	uint8                                        Pad_2551[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            Stamina;                                           // 0x38(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StaminaRegenRate;                                  // 0x58(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StaminaRegenDelay;                                 // 0x78(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxStamina;                                        // 0x98(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            StaminaCost;                                       // 0xB8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            SprintCost;                                        // 0xD8(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_2552[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            ItemRegenMaxStack;                                 // 0x100(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ItemRegenCooldown;                                 // 0x120(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ItemMaxStack;                                      // 0x140(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DoubleLootRollChance;                              // 0x160(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DoubleItemLootChance;                              // 0x180(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            DoubleCraftChance;                                 // 0x1A0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CraftingTimeMultiplier;                            // 0x1C0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CraftItemLevelBonusMin;                            // 0x1E0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CraftItemLevelBonusMax;                            // 0x200(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ResourceHarvesting;                                // 0x220(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HarvestingTool;                                    // 0x240(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ExtraLives;                                        // 0x260(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ResurrectTeammateDuration;                         // 0x280(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Fortitude_Team;                                    // 0x2A0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Offense_Team;                                      // 0x2C0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Tech_Team;                                         // 0x2E0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            Resistance_Team;                                   // 0x300(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ActiveEffectDuration;                              // 0x320(0x20)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2553[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerAttrSet* GetDefaultObj();

	void OnRep_Tech_Team();
	void OnRep_StaminaRegenRate();
	void OnRep_StaminaRegenDelay();
	void OnRep_StaminaCost();
	void OnRep_Stamina();
	void OnRep_SprintCost();
	void OnRep_ResurrectTeammateDuration();
	void OnRep_ResourceHarvesting();
	void OnRep_Resistance_Team();
	void OnRep_Offense_Team();
	void OnRep_MaxStamina();
	void OnRep_ItemRegenMaxStack();
	void OnRep_ItemRegenCooldown();
	void OnRep_ItemMaxStack();
	void OnRep_HarvestingTool();
	void OnRep_Fortitude_Team();
	void OnRep_ExtraLives();
	void OnRep_DoubleLootRollChance();
	void OnRep_DoubleItemLootChance();
	void OnRep_DoubleCraftChance();
	void OnRep_CraftItemLevelBonusMin();
	void OnRep_CraftItemLevelBonusMax();
	void OnRep_CraftingTimeMultiplier();
};

// 0x0 (0x25F0 - 0x25F0)
// Class FortniteGame.FortPlayerCameraSpectator
class AFortPlayerCameraSpectator : public APlayerCameraManager
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerCameraSpectator* GetDefaultObj();

};

// 0x10 (0x2C10 - 0x2C00)
// Class FortniteGame.FortPlayerCameraZone
class AFortPlayerCameraZone : public AFortPlayerCameraBase
{
public:
	uint8                                        Pad_2556[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerCameraZone* GetDefaultObj();

};

// 0x260 (0x1AC8 - 0x1868)
// Class FortniteGame.FortPlayerControllerZone
class AFortPlayerControllerZone : public AFortPlayerControllerGameplay
{
public:
	UMulticastDelegateProperty_                  OnBeginSkydiving;                                  // 0x1868(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndSkydiving;                                    // 0x1878(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnStartedRespawn;                                  // 0x1888(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDontChangeReticleColorForEnemy;                   // 0x1898(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_257C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastVehicleSeatSwitchTime;                         // 0x189C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                 GadgetTrackedAttributeItemInstanceId;              // 0x18A0(0x10)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       DeathInputComponent;                               // 0x18B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       RemoteControlledPawnInputComponent;                // 0x18B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortPlayerDeathReport                PlayerDeathReport;                                 // 0x18C0(0x50)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfPawnDied;                         // 0x1910(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnterCameraModeOnDeath;                           // 0x1911(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_257D[0xC6];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TScriptInterface<class IFortHUDTargetUnderReticleInterface> HUDTargetUnderReticle;                             // 0x19D8(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<struct FUniqueNetIdRepl>              RejoinablePartyMembers;                            // 0x19E8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_257E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastScoreEarnedTime;                               // 0x1A08(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_257F[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VoiceChatPlayerName;                               // 0x1A40(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VoiceChatChannel;                                  // 0x1A50(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoiceChatJoinFailCount;                            // 0x1A60(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VoiceChatReconnectCount;                           // 0x1A64(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVoiceChatBanned;                                  // 0x1A68(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2580[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bJetpackExecuteToggle;                             // 0x1A7C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2581[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAbilitySetHandle                 AppliedInGameModifierAbilitySetHandle;             // 0x1A80(0x28)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2582[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerZone* GetDefaultObj();

	void TestVehicleVelocity(const class FString& Command);
	void SpawnVehicle(const class FString& Command);
	void ServerVoiceChatRejoinChannel();
	void ServerVoiceChatReconnected();
	void ServerTriggerSetupTeleportCameraEvent();
	void ServerSubmitGameplayVote(enum class EFortVoteType VoteType, int32 VoteDecision);
	void ServerSetShouldDisablePlayerTeleportingDuringMissionResults();
	void ServerSendPlayerList(int32 PlayerID, int32 DeviceTokenLength, TArray<uint8>& PlayerListPart1, TArray<uint8>& PlayerListPart2, int32 PlayerType);
	void ServerSendPartyJoinInfoToPlayer(struct FUniqueNetIdRepl& RecipientId, const class FString& JoinInfoStr);
	void ServerSendLoadoutConfig(int32 LoadoutSeed, TArray<uint8>& Loadout);
	void ServerRequestSeatChange();
	void ServerEndGameplayVote(enum class EFortVoteType VoteType);
	void ServerDetachFromRemoteControlledPawn();
	void ServerDestroyFromRemoteControlledPawn();
	void ServerBeginGameplayVote(enum class EFortVoteType VoteType, float VoteDuration, float FailedVoteLockOutDuration, enum class EFortVoteArbitratorType VoteArbitratorType);
	void ServerAttemptExitVehicle();
	void RewindVehicle(const class FString& Command);
	void ResetExecuteJetpackToggle();
	void PushDeathInputComponent();
	void PopDeathInputComponent();
	void OnPlayerStartedRespawn__DelegateSignature();
	void KillAllVehicles(const class FString& Command);
	bool IsClientNotifiedOfPawnDied();
	void DumpPhysicsVehicleBuffer(const class FString& Command);
	void ClientVoiceChatLogin(const class FString& InVoiceChatPlayerName, const class FString& LoginToken);
	void ClientVoiceChatChannelJoin(const class FString& InVoiceChatPlayerName, const class FString& InVoiceChatChannel, const class FString& JoinToken);
	void ClientSendPartyJoinInfoToPlayer(const class FString& JoinInfoStr);
	void ClientOnZoneEndScoreReports(TArray<struct FFortPlayerScoreReport>& ScoreReports);
	void ClientOnPawnSpawned();
	void ClientOnPawnRevived(class AController* EventInstigator);
	void ClientOnPawnDied(const struct FFortPlayerDeathReport& DeathReport);
};

// 0x0 (0x1AC8 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerPvP
class AFortPlayerControllerPvP : public AFortPlayerControllerZone
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerControllerPvP* GetDefaultObj();

	void ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect);
	void ClientShowGameOverWidget(enum class EFortPvPGameResult GameResult);
	void ClientReceiveKillNotification(class AFortPlayerStateZone* Killer, class AFortPlayerStateZone* Killed);
};

// 0x588 (0x2050 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerAthena
class AFortPlayerControllerAthena : public AFortPlayerControllerPvP
{
public:
	float                                        FireAbilityToWeaponSwitchTime;                     // 0x1AC8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnAircraftStateChange;                             // 0x1AD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*              SwappingItemDefinition;                            // 0x1AE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WinScreenDelayTime;                                // 0x1AF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasHadValidPawn;                                  // 0x1AF4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfWin;                              // 0x1AF5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfTeamWin;                          // 0x1AF6(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientNotifiedOfLoss;                             // 0x1AF7(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25CE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        CurrentlyHighlightedActors;                        // 0x1B18(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FString                                VoiceChat3DPlayerName;                             // 0x1B28(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                VoiceChat3DChannel;                                // 0x1B38(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMutedPositionalVoiceChatForNoPawn;                // 0x1B48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PlayersTalking;                                    // 0x1B50(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D0[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  TalkingPlayersChanged;                             // 0x1BB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDeferringStartRecordingHighlights;                // 0x1BC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HighlightGroupId;                                  // 0x1BC8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CachedHighlightCount;                              // 0x1BD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighlightFirstKillTime;                            // 0x1BDC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightKillMultiple;                             // 0x1BE0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightDownMultiple;                             // 0x1BE4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighlightKillCooldown;                             // 0x1BE8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HighlightKillRewindTime;                           // 0x1BEC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D2[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseNewPickupSwapLogic;                            // 0x1C10(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpectatorLevelStreamDistance;                      // 0x1C14(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  SpectatorStreamingChanged;                         // 0x1C18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  InGameMatchmakingComplete;                         // 0x1C28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bNoInGameMatchmaking;                              // 0x1C38(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            AudioOnExitAircraft;                               // 0x1C40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            AudioOnExitAircraftHornDoppler;                    // 0x1C48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            AudioOnMapIndicatorPlaced;                         // 0x1C50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinQuickChatCooldown;                              // 0x1C58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickChatOffCooldownTime;                          // 0x1C5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAthenaLoadout                    CustomizationLoadout;                              // 0x1C60(0xA0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bMarkedAlive;                                      // 0x1D00(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DD[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSettingsHUDVisibilityAndText> HUDVisibilityGameplayTags;                         // 0x1D10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortGamepadSettings>   GamepadSettingsAssetPtr;                           // 0x1D20(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MapCursor;                                         // 0x1D48(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapCursorSpeed;                                    // 0x1D54(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapCursorSpeedGamepad;                             // 0x1D58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E1[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          TeamMemberIndicatorColor;                          // 0x1DA8(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRevertPlayerListenerChange;                       // 0x1DC8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowNoShadows;                                   // 0x1DC9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowNoDOF;                                       // 0x1DCA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadInputYawScale;                              // 0x1DCC(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadInputPitchScale;                            // 0x1DD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GamepadInputRollScale;                             // 0x1DD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFPS;                                          // 0x1DD8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnShowFPSChange;                                   // 0x1DE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FQuickBarData                         QuickBarDefinitions[0x2];                          // 0x1DF0(0x20)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHero*                             StrongMyHero;                                      // 0x1E20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VoiceChatUpdateLimiter;                            // 0x1E28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStartWarmup*                WarmupPlayerStart;                                 // 0x1E30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       AircraftInputComponent;                            // 0x1E38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputComponent*                       FullScreenMapInputComponent;                       // 0x1E40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25E9[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseTrapPicker;                                    // 0x1EF8(0x1)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EB[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 PlayerToSpectateOnDeath;                           // 0x1F18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovementCancellableActionLeashLength;              // 0x1F28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MovementCancellableActionLeashLocation;            // 0x1F2C(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaPlayerMatchReport*              MatchReport;                                       // 0x1F48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F0[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerStateAthena*>        TeamMembers;                                       // 0x1F98(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerStateAthena*>        SquadMembers;                                      // 0x1FA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortMiniMapTeamIndicators> MinimapIndicatorClass;                             // 0x1FB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AFortPlayerMarkerBase>     SquadMarkerActorClass;                             // 0x1FC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AFortPlayerStateAthena*, class AFortPlayerMarkerBase*> SquadMarkers;                                      // 0x1FC8(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AFortPlayerMarkerBase*>         SquadMarkerPool;                                   // 0x2018(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBuildingEditAnalyticEvent>    BuildingAnalyticsArray;                            // 0x2028(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	float                                        TimeStartedTrackingBuildingAnalytics;              // 0x2038(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F1[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerAthena* GetDefaultObj();

	void WriteCreateBuildingAnalytics();
	void UpdateRichPresenceTimer();
	class FString TryToFilterNameOfPlayerForStreamerMode(class AFortPlayerState* OtherPlayerState);
	void StopRecordingHighlights();
	void SpectateOnDeath();
	void ShowHighlightSummary();
	void ServerSendSquadFriend(class AFortPlayerStateAthena* FriendInSquad);
	void ServerRemoveMapCursor();
	void ServerPlaySquadQuickChatMessage(const struct FAthenaQuickChatActiveEntry& ChatEntry, const struct FUniqueNetIdRepl& SenderID);
	void ServerPlaceMapCursor(const struct FVector_NetQuantize& CursorPos);
	void ServerGenerateMockMatchReport();
	void ServerFollow(enum class EFollow Follow);
	void ServerEnableStreamerMode();
	void ServerDBNOReviveStarted(class AFortPlayerPawnAthena* DBNOPawn);
	void ServerDBNOReviveInterrupted(class AFortPlayerPawnAthena* DBNOPawn);
	void ServerAttemptAircraftJump(const struct FRotator& ClientRotation);
	void RespawnPlayerAfterDeath();
	void RecordTeamStats();
	void RecordMatchStats();
	void PlayWinEffects(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, enum class EDeathCause DeathCause);
	void OnPlayersLeftChanged(int32 NumPlayersLeft);
	void MultiKillExpired();
	bool IsUsingStreamerMode();
	bool IsTeamDead();
	bool IsSquadDead();
	bool IsLocalPlayerFriendsWithSquadMember(class AFortPlayerState* SquadMember);
	bool IsInAircraft();
	bool IsClientNotifiedOfWin();
	bool IsClientNotifiedOfTeamWin();
	bool IsClientNotifiedOfLoss();
	void HighlightNumberReturned(int32 NumHighlights);
	void GetSquadKills(TArray<int32>* Kills);
	class FString GetSpectatingPlayerName();
	bool GetRevertPlayerListenerChangeFlag();
	class UAthenaPlayerMatchReport* GetMatchReport();
	struct FVector2D GetMapIndicatorLocation();
	int32 GetFPSForHUD();
	int32 GetCachedHighlightCount();
	void FullscreenMapCursorRemove();
	void FullscreenMapCursorPlaceAtLocation(const struct FVector& Coords);
	void FollowSpecialActor();
	void FollowPreviousTeammate();
	void FollowNextTeammate();
	void ClientVoiceChat3DChannelJoin(const class FString& InVoiceChatPlayerName, const class FString& InVoiceChatChannel, const class FString& JoinToken);
	void ClientSendTeamStatsForPlayer(struct FAthenaMatchTeamStats& TeamStats);
	void ClientSendStateEncryptionKey(struct FPlayerStateEncryptionKey& Key);
	void ClientSendMatchStatsForPlayer(struct FAthenaMatchStats& Stats);
	void ClientSendEndBattleRoyaleMatchForPlayer(bool bSuccess, struct FAthenaRewardResult& Result);
	void ClientSendDebugPoiVolumeData(const class FString& PoiVolumes);
	void ClientSendDebugPoiLocationTags(struct FGameplayTagContainer& InPoiTags);
	void ClientReceiveSquadQuickChatMessage(const struct FAthenaQuickChatActiveEntry& ChatEntry, class AFortPlayerController* SenderPC);
	void ClientNotifyWon(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, enum class EDeathCause DeathCause);
	void ClientNotifyTeamWon(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, enum class EDeathCause DeathCause);
	void ClientNotifyLost(class APawn* WinningPawn, enum class EEndOfMatchReason LostReason);
	void ClientEquipItem(const struct FGuid& ItemGuid, bool bForceExecution);
	void ClientBotStopDogpile();
	void ClientBotStartDogpile(const struct FVector& DogpilePosition);
	bool CanFollowTeammate();
};

// 0x0 (0x1AC8 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerPvE
class AFortPlayerControllerPvE : public AFortPlayerControllerZone
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerControllerPvE* GetDefaultObj();

};

// 0x68 (0x1B30 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerDeployableBase
class AFortPlayerControllerDeployableBase : public AFortPlayerControllerPvE
{
public:
	class ADeployableBasePlot*                   CurrentPlot;                                       // 0x1AC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADeployableBasePlot*                   PreviousPlot;                                      // 0x1AD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2602[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerDeployableBase* GetDefaultObj();

	void ServerMoveItemToDeployableBase(struct FGuid& ItemOnPlayer, int32 Count, class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveItemFromDeployableBase(struct FGuid& ItemOnPlot, int32 Count, class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveAllItemsToDeployableBase(class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveAllItemsFromDeployableBase(class ADeployableBasePlot* ExpectedPlot);
	void MoveItemToDeployableBase(struct FGuid& ItemOnPlayer, int32 Count);
	void MoveItemFromDeployableBase(struct FGuid& ItemOnPlot, int32 Count);
	void MoveAllItemsToDeployableBase();
	void MoveAllItemsFromDeployableBase();
	void ClientOnHordeWaveComplete(int32 Wave, TArray<struct FItemAndCount>& Rewards);
	void ClientOnHordeTierInitialized(TArray<struct FItemAndCount>& Items);
	void ClientOnHordeTierComplete(enum class EFortCompletionResult Result);
};

// 0x8 (0x1AD0 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerFOB
class AFortPlayerControllerFOB : public AFortPlayerControllerPvE
{
public:
	uint8                                        Pad_2604[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerFOB* GetDefaultObj();

	void ServerSaveFOB(class ABuildingFOBConfigActor* FOBToSave);
	void ServerResetFOB(class ABuildingFOBConfigActor* FOBToReset);
	void ServerReloadFOB(class ABuildingFOBConfigActor* FOBToReload);
	void ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect);
};

// 0x60 (0x1890 - 0x1830)
// Class FortniteGame.FortPlayerControllerFrontEnd
class AFortPlayerControllerFrontEnd : public AFortPlayerController
{
public:
	uint8                                        Pad_2607[0x59];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUnlockAllZones;                                   // 0x1889(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2608[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerFrontEnd* GetDefaultObj();

	bool IsXboxPlatform();
	bool IsVoiceChatPlayerMuted(struct FUniqueNetIdRepl& UniqueNetId);
	bool IsInVoiceChat();
};

// 0x18 (0x1AE0 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerKeep
class AFortPlayerControllerKeep : public AFortPlayerControllerPvE
{
public:
	uint8                                        Pad_2609[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WorkshopPickedItems;                               // 0x1ACC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ArmoryPickedItems;                                 // 0x1AD0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_260A[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerKeep* GetDefaultObj();

	void StreamOutStuff();
	void StreamInStuff();
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreContainers();
	void ResetContainers();
	void DumpItemData();
	void ClientUnloadFoundations();
	void ClientSetPermaniteAvailability(bool bAvailable);
};

// 0x38 (0x1B00 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerManor
class AFortPlayerControllerManor : public AFortPlayerControllerPvE
{
public:
	uint8                                        Pad_260B[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerManor* GetDefaultObj();

	void ServerOnUnlockPortalComplete(class AManorPortal* ManorPortal);
	void ClientOpenManorPortalUnlockMenu(class AManorPortal* ManorPortal);
};

// 0x78 (0x1B40 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerOutpost
class AFortPlayerControllerOutpost : public AFortPlayerControllerPvE
{
public:
	UMulticastDelegateProperty_                  OnItemFabricated;                                  // 0x1AC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFortOutpostItemDefinition*            BuildingBeingUpgraded;                             // 0x1AD8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        LevelBeforeUpgrade;                                // 0x1AE0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOutpostRefundDialogPending;                       // 0x1AE4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2621[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItemDefinition*              ItemPendingToFabricate;                            // 0x1AE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2622[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortWorldItem*                        FabricatedItemPendingForNotification;              // 0x1B00(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2624[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        DisintegrationStartTime;                           // 0x1B10(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        QuantumGooCompleted;                               // 0x1B18(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        QuantumGooIncoming;                                // 0x1B1C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2625[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortDepositedResources>       PostDepositedResources;                            // 0x1B28(0x10)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsOutpostOwnerInPIE;                              // 0x1B38(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2626[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerOutpost* GetDefaultObj();

	void UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	void UpgradeBuilding(enum class EOutpostBuildings OutpostBuilding);
	void ToggleOwnerInPIE();
	void ServerUpgradePOST();
	void ServerUpgradeBuilding(class UFortOutpostItemDefinition* BuildingToUpgrade);
	void ServerNotifyPendingFabricationCompleted();
	void ServerMoveItemToStorageVault(struct FFortItemEntry& NewlyStoredItem);
	void ServerMoveItemFromStorageVault(struct FFortItemEntry& NewlyCollectedItem);
	void ServerLeaveOutpostAsParty();
	void ServerFabricateItem(class UFortWorldItemDefinition* ItemDef);
	void ServerDisintegrateItem(const struct FGuid& ItemGuid, int32 Count);
	void ServerDepositPOSTResource(const struct FGuid& ItemGuid, int32 Count);
	void ServerDeactivateCraftingTable();
	void ServerActivateCraftingTable();
	void ServerAbortDisintegration();
	void OnRep_QuantumGooIncoming();
	void OnRep_QuantumGooCompleted();
	void OnRep_PostDepositedResources();
	void OnRep_DisintegrationStartTime();
	bool IsOutpostOwner();
	bool IsFabricationPending();
	class UFortWorldItemDefinition* GetPendingItemToFabricate();
	float GetPendingFabricationProgress();
	int32 GetOutpostCoreLevel();
	void GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	void GetBuildingUpgradeCost(enum class EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int32 GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingMaxLevel(enum class EOutpostBuildings OutpostBuilding);
	int32 GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int32 GetBuildingLevel(enum class EOutpostBuildings OutpostBuilding);
	void DumpInventory();
	void ClientOnOutpostRefundOccurred();
	void ClientOnBuildingLevelChanged(class UFortOutpostItemDefinition* UpgradedBuilding, int32 InLevelBeforeUpgrade);
	bool CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog);
	bool CanUpgradeBuilding(enum class EOutpostBuildings OutpostBuilding, bool bLog);
};

// 0x8 (0x1AD0 - 0x1AC8)
// Class FortniteGame.FortPlayerControllerPvPBaseDestruction
class AFortPlayerControllerPvPBaseDestruction : public AFortPlayerControllerPvP
{
public:
	uint8                                        Pad_262E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerControllerPvPBaseDestruction* GetDefaultObj();

};

// 0x350 (0x6F8 - 0x3A8)
// Class FortniteGame.FortPlayerInput
class UFortPlayerInput : public UPlayerInput
{
public:
	class FString                                CampaignDefaultKBMPresetName;                      // 0x3A8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AthenaDefaultKBMPresetName;                        // 0x3B8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CampaignKBMResetToDefaultPresetName;               // 0x3C8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AthenaKBMResetToDefaultPresetName;                 // 0x3D8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultGamepadPresetName;                          // 0x3E8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DefaultGamepadPresetNameAthena;                    // 0x3F8(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CustomGamepadPresetNameAthena;                     // 0x408(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        FortPlayerInputSettingsNames;                      // 0x418(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	uint8                                        Pad_2632[0x138];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bApplyGamepadDownsightsLookScale;                  // 0x560(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2633[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AthenaTargetingMultiplier;                         // 0x564(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaScopedMultiplier;                            // 0x568(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaGamepadTargetingMultiplier;                  // 0x56C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AthenaGamepadScopedMultiplier;                     // 0x570(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2635[0x12C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortPlayerInputSettings*>      AllPlayerInputSettings;                            // 0x6A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortPlayerInputSettings*              DesiredKBMPlayerInputSettings;                     // 0x6B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortPlayerInputSettings*              DesiredGamepadPlayerInputSettings;                 // 0x6B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2636[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          InputActionTypeFriendlyNames;                      // 0x6D0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FFortInputActionGroupContext>  InputActionGroupContexts;                          // 0x6E0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2637[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerInput* GetDefaultObj();

};

// 0x128 (0x820 - 0x6F8)
// Class FortniteGame.FortPlayerInputAthena
class UFortPlayerInputAthena : public UFortPlayerInput
{
public:
	bool                                         bIsTargeting;                                      // 0x6F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsScoped;                                         // 0x6F9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2638[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortGamepadSettings*                  GamepadSettings;                                   // 0x700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2639[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseAthenaAimAssist;                               // 0x810(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReduceAimAssistWhileScoped;                       // 0x811(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_263A[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerInputAthena* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.FortPlayerInputSettings
class UFortPlayerInputSettings : public UObject
{
public:
	class FText                                  FriendlyName;                                      // 0x28(0x18)(Config, NativeAccessSpecifierPublic)
	TArray<struct FInputActionKeyMapping>        ActionMappings;                                    // 0x40(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FFortInputActionKeyAlias>      ActionKeyAliases;                                  // 0x50(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                        HoldInputTime;                                     // 0x60(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldCraftAmmoTime;                                 // 0x64(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HoldHudChatTime;                                   // 0x68(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBuildingPickerOnlyChoosesCategories;              // 0x6C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponPickerShowOnlySlottedItems;                 // 0x6D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTrapPickerUsesRadial;                             // 0x6E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRadialClosesOnRelease;                            // 0x6F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NumActiveTrapSlots;                                // 0x70(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponSlotsAreSharedWhenUsingGamepad;             // 0x74(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEditModeUsableFromCombatMode;                     // 0x75(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyShowNextPrevBuildingSlotKeybinds;             // 0x76(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabledForCampaign;                               // 0x77(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnabledForAthena;                                 // 0x78(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_263B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPlayerInputSettings* GetDefaultObj();

};

// 0x190 (0x540 - 0x3B0)
// Class FortniteGame.FortPlayerMannequin
class AFortPlayerMannequin : public ASkeletalMeshActor
{
public:
	uint8                                        Pad_264E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHeroType*                         FortHeroType;                                      // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomCharacterPart*                  CharacterParts[0x7];                               // 0x3C0(0x38)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLightingChannels                     MannequinLightingChannels;                         // 0x3F8(0x1)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_264F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MannequinBoundsScale;                              // 0x3FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMannequinVisible;                               // 0x400(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMannequinCastsHiddenShadow;                       // 0x401(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2650[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  CharacterPartList[0x6];                            // 0x408(0x30)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    CharacterPartColorSwatches[0x7];                   // 0x438(0x38)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    ColorSwatchesForCharacterParts[0x6];               // 0x470(0x30)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorComponent*                 AccessoryColorSwatchHandler[0x6];                  // 0x4A0(0x30)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    ColorSwatches[0x2];                                // 0x4D0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         WeaponSkeletalMesh;                                // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WeaponAttachSocket;                                // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2651[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMorphValuePair>               MorphTargets;                                      // 0x528(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bInitialized;                                      // 0x538(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2652[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerMannequin* GetDefaultObj();

	void UpdateMorphTargets();
	void ToggleGenderBP();
	bool SetWeaponSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	void SetSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	bool SetPart(enum class EFortCustomPartType Part, class UCustomCharacterPart* PartAsset);
	void SetHeroType(class UFortHeroType* NewHeroType);
	bool RemovePart(enum class EFortCustomPartType Part);
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent(enum class EFortCustomPartType Part);
	enum class EFortCustomGender GetGender();
	void GetAllPartSkeletalMeshComponents(TArray<class USkeletalMeshComponent*>* SkeletalMeshComponents);
	bool CyclePartBP(enum class EFortCustomPartType Part, bool bNextPart);
	void ApplyCosmeticVariant(class UAthenaCosmeticItemDefinition* CosmeticDefinition, const struct FGameplayTag& InVariantChannelTag, const struct FGameplayTag& InVariantTag);
};

// 0x48 (0x370 - 0x328)
// Class FortniteGame.FortPlayerMarkerBase
class AFortPlayerMarkerBase : public AActor
{
public:
	float                                        MinimumHeight;                                     // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeightOffset;                                      // 0x32C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaMapMarkerItemDefinition*        CustomMarkerItemDefinition;                        // 0x330(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPlayerMarkerData                     Data;                                              // 0x340(0x20)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               MarkerPosition2D;                                  // 0x360(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2654[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerMarkerBase* GetDefaultObj();

	void OnSetupMarker(struct FPlayerMarkerData& MarkerData);
	void OnMarkerPlaced();
	void OnMarkerHidden();
};

// 0x80 (0x3A8 - 0x328)
// Class FortniteGame.FortPlayerParachute
class AFortPlayerParachute : public AActor
{
public:
	uint8                                        Pad_2659[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            CurrentGliderOpenSound;                            // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            CurrentGliderCloseSound;                           // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerPawn*                       PlayerPawn;                                        // 0x358(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAthenaGliderItemDefinition*           ParachuteItemDef;                                  // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParachuteHiddenAnimFinishTime;                     // 0x368(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bGliderFullyDeployed : 1;                          // Mask: 0x1, PropSize: 0x10x36C(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bChuteOpened : 1;                                  // Mask: 0x2, PropSize: 0x10x36C(0x1)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsFrontEndPreview : 1;                            // Mask: 0x4, PropSize: 0x10x36C(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_20D : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	bool                                         bParachuteVisible;                                 // 0x36D(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateTrailOnRationalMovement;                  // 0x36E(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_265B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              LastRotationalMovement;                            // 0x370(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_265C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ParachuteTrailParameterName;                       // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                ParachuteMesh;                                     // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TrailParticles;                                    // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerParachute* GetDefaultObj();

	void SetChuteMeshVisibility(bool bParachuteVisiblity);
	void OnRep_PlayerPawn();
	void OnRep_ParachuteItemDef();
	void OnParachuteTrailUpdated(float MovementLengthSquared, float ForwardDot, float RightDot, float RotationalMovementAcceleration);
	bool IsGliderFullyDeployedAccordingToAnim();
	void InitalizeFromItemDef(class UAthenaGliderItemDefinition* InParachuteItemDef);
	class USkeletalMeshComponent* GetParachuteRootMesh();
	class AFortPlayerPawn* GetFortPlayerPawn();
	void DisableTrailParticles();
};

// 0x730 (0x20D0 - 0x19A0)
// Class FortniteGame.FortPlayerPawnAthena
class AFortPlayerPawnAthena : public AFortPlayerPawn
{
public:
	uint8                                        Pad_2660[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentPawnSpeedXY;                                // 0x19CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CurrentPawnVelXYRot;                               // 0x19D0(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               PreviousVelocityXY;                                // 0x19DC(0xC)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            OnReviveSound;                                     // 0x19E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReviveFromDBNOTime;                                // 0x19F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DBNOStartTime;                                     // 0x19F4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DBNOInvulnerableTime;                              // 0x19F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        DBNORevivalStacking;                               // 0x19FC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2661[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DirectionalSpeedMultiplierCurve;                   // 0x1A08(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemSpecialActorID;                                // 0x1A10(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemSpecialActorCategoryID;                        // 0x1A18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2662[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BecameSpecialActorTime;                            // 0x1A24(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ParachuteDirectionalSpeedMultiplierCurve;          // 0x1A28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SkydivingDirectionalSpeedMultiplierCurve;          // 0x1A30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2663[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnUIGameplayCue;                                   // 0x1A40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDBNOStateChanged;                                // 0x1A50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         bPlaytestWithNoMouse;                              // 0x1A60(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2664[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNetMovementPrioritized;                           // 0x1A68(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2665[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapsuleRadiusAthena;                               // 0x1A6C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfHeightAthena;                           // 0x1A70(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeshHeightAdjustAthena;                            // 0x1A74(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAbilityRepAnimMontage        RepAnimMontageInfo;                                // 0x1A78(0x30)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        RepAnimMontageStartSection;                        // 0x1AA8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2666[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAbilityRepAnimMontage        ReplayRepAnimMontageInfo;                          // 0x1AB0(0x30)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	struct FMinimalGameplayCueReplicationProxy   SimulatedProxyGameplayCues;                        // 0x1AE0(0x1D0)(Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FReplicatedMontagePair                LandingMontagePair;                                // 0x1CB0(0x28)(Net, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2667[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           CurrQuickChatBrush;                                // 0x1CE0(0x88)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         WeaponActivated;                                   // 0x1D68(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bADSWhileNotOnGround;                              // 0x1D69(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2668[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            DefaultCrouchedFootstepSound;                      // 0x1D70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            DefaultCrouchSprintFootstepSound;                  // 0x1D78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinimumTimeBetweenSteps;                           // 0x1D80(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastStepTime;                                      // 0x1D84(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnFootstepEvent;                                   // 0x1D88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsOutsideSafeZone;                                // 0x1D98(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayingSafeZoneEffects;                           // 0x1D99(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2669[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 KillerForSpectatorRotation;                        // 0x1DA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_266A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEffectDistanceQuality            DamageFXSignificance;                              // 0x1DAC(0x18)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_266B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponHitNotifyAudioBank*             DefaultHitNotifyAudioBank;                         // 0x1DD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayerPawnReady;                                // 0x1DD8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDoSafeZoneCleanup;                                // 0x1DD9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_266C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAthenaLoadout                    CustomizationLoadout;                              // 0x1DE0(0xA0)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             LastBuildingMetadata;                              // 0x1E80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            PrototypeShootingModel;                            // 0x1E88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           FallInstigator;                                    // 0x1E90(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      LastFloorBeforeFalling;                            // 0x1E98(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastFallDistance;                                  // 0x1EA0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeCombatSlowSpeedMultiplier;                    // 0x1EA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeCombatSlowDuration;                           // 0x1EA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_266D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAthenaPawnReplayData                 EncryptedPawnReplayData;                           // 0x1EB0(0x30)(Net, Transient, NativeAccessSpecifierPublic)
	TArray<class AFortPickup*>                   QueuedAutoPickups;                                 // 0x1EE0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<class UFortMobileInteractionComponent*> MobileInteractionComponents;                       // 0x1EF0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          MinimapIconColorFiftyFiftyPlayer;                  // 0x1F00(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIndicatorVisibilityDistForReplays;              // 0x1F10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_266E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        AutoPickupDropRepickupDelay;                       // 0x1F18(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_266F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OutsideSafeZoneBlendSpeed;                         // 0x1F48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentOutsideSafeZonePPVBlend;                    // 0x1F4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetOutsideSafeZonePPVBlend;                     // 0x1F50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2670[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPostProcessComponent*                 OutsideSafeZonePPComponent;                        // 0x1F58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           SafeZoneAppliedGE;                                 // 0x1F60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                       ConsumableUseAudio;                                // 0x1F68(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAthenaBatchedDamageGameplayCues      AccumulatedBatchData;                              // 0x1F70(0x58)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueParameters                BatchedGameplayCueParameters;                      // 0x1FC8(0xB8)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2671[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastHealthPostProcessWeight;                       // 0x2098(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPostProcessStartTime;                        // 0x209C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPostProcessMuteTime;                         // 0x20A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2672[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerPawnAthena* GetDefaultObj();

	void TeleportToSkyDive(float HeightAboveGround);
	void StopConsumableUseAudio();
	void StartConsumableUseAudio(class USoundBase* Sound);
	void SetMeshHeightAdjustAthena(float HeightAdjust);
	void SetFallInstigator(class AController* NewFallInstigator);
	void SetCapsuleRadiusAthena(float Radius);
	void SetCapsuleHalfHeightAthena(float HalfHeight);
	void SetBushEnabled(bool bEnableBush);
	void SafeZoneStatusChanged();
	void OnSignificantTick(float Significance);
	void OnResInDuringWarmup();
	void OnRep_WeaponActivated();
	void OnRep_ReplicatedAnimMontage();
	void OnRep_ReplayRepAnimMontageInfo();
	void OnRep_RepAnimMontageStartSection();
	void OnRep_NetMovementPrioritized();
	void OnRep_MeshHeightAdjustAthena();
	void OnRep_IsOutsideSafeZone();
	void OnRep_CustomizationLoadout();
	void OnRep_CapsuleRadiusAthena();
	void OnRep_CapsuleHalfHeightAthena();
	void OnPawnLODChanged(int32 NewLOD);
	void OnLeftReplayRelevancy();
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void OnEnteredReplayRelevancy();
	void OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NetMulticast_InvokeGameplayCuesExecuted_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCuesExecuted(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueExecuted(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec(struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueAdded_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& Parameters);
	void NetMulticast_InvokeGameplayCueAdded(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_Athena_BatchedDamageCues(const struct FAthenaBatchedDamageGameplayCues& BatchData);
	void MarkSafe(TSubclassOf<class UGameplayEffect> GEtoApply);
	bool IsBackpackEquipped(enum class EBackpackType BackpackType);
	float GetDefaultReviveFromDBNOTime();
	void GameplayCue_Damage(enum class EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void FastSharedReplication(struct FSharedRepMovement& RepMovement);
	void CancelMeleeCombatSlow();
	void BushStateChanged(bool bNewBushState);
	void ActivateMeleeCombatSlow();
};

// 0x20 (0xB80 - 0xB60)
// Class FortniteGame.FortPlayerSpawnPad
class AFortPlayerSpawnPad : public ABuildingSMActor
{
public:
	TArray<class UStaticMeshComponent*>          Chests;                                            // 0xB60(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2673[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerSpawnPad* GetDefaultObj();

	void PrestreamChestTextures();
	void InitializeChestProgression();
	int32 GetRewardedChestIndex();
	void GetPossessedPlayerPawnsByID(TArray<class AFortPlayerPawn*>* SortedPlayerPawns);
	void ChestProgressionUpdate(const struct FVector& PrimaryChestOffset, const struct FVector& ChestOffset);
};

// 0x8 (0x360 - 0x358)
// Class FortniteGame.FortPlayerStart
class AFortPlayerStart : public APlayerStart
{
public:
	class UParticleSystemComponent*              StartParticleComponent;                            // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortPlayerStart* GetDefaultObj();

};

// 0x8 (0x360 - 0x358)
// Class FortniteGame.FortPlayerStartWarmup
class AFortPlayerStartWarmup : public APlayerStart
{
public:
	uint8                                        Pad_2674[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerStartWarmup* GetDefaultObj();

};

// 0x590 (0x980 - 0x3F0)
// Class FortniteGame.FortPlayerState
class AFortPlayerState : public APlayerState
{
public:
	uint8                                        Pad_2676[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsWorldDataOwner : 1;                             // Mask: 0x1, PropSize: 0x10x408(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsGameSessionOwner : 1;                           // Mask: 0x2, PropSize: 0x10x408(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_20E : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2677[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsGameSessionAdmin : 1;                           // Mask: 0x1, PropSize: 0x10x440(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsReadyToContinue : 1;                            // Mask: 0x2, PropSize: 0x10x440(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasFinishedLoading : 1;                           // Mask: 0x4, PropSize: 0x10x440(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasStartedPlaying : 1;                            // Mask: 0x8, PropSize: 0x10x440(0x1)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowHeroBackpack : 1;                             // Mask: 0x10, PropSize: 0x10x440(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowHeroHeadAccessories : 1;                      // Mask: 0x20, PropSize: 0x10x440(0x1)(Net, Transient, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bRepFlag1 : 1;                                     // Mask: 0x40, PropSize: 0x10x440(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_20F : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2678[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortPlayerRole                   PlayerRole;                                        // 0x444(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PartyOwnerUniqueId;                                // 0x448(0x28)(Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldPlayerId;                                     // 0x470(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2679[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeroId;                                            // 0x478(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHeroType*                         HeroType;                                          // 0x488(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeroSquadId;                                       // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_267A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentCharXP;                                     // 0x4B0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_267B[0x4C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPickup>            MyBackpackPickup;                                  // 0x500(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialExperienceLevel;                            // 0x508(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitialExperienceAmount;                           // 0x50C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortExperienceDelta>          ExperienceDeltas;                                  // 0x510(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	TArray<class UFortAwardItemDefinition*>      Awards;                                            // 0x520(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_267C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Platform;                                          // 0x558(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_267D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortCustomGender                 CharacterGender;                                   // 0x580(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomBodyType               CharacterBodyType;                                 // 0x581(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_267E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  CharacterParts[0x6];                               // 0x588(0x30)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    CharacterColorSwatches[0x2];                       // 0x5B8(0x10)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomGender                 LocalCharacterGender;                              // 0x5C8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortCustomBodyType               LocalCharacterBodyType;                            // 0x5C9(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_267F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomCharacterPart*                  LocalCharacterParts[0x6];                          // 0x5D0(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    LocalCharacterColorSwatches[0x2];                  // 0x600(0x10)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomPlayerComponent*                CustomPRIComponent;                                // 0x610(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AFortPlayerPawn>        CachedPawn;                                        // 0x618(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    CharacterPartColorSwatches[0x6];                   // 0x620(0x30)(Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomColorSwatch*                    LocalCharacterPartColorSwatches[0x6];              // 0x650(0x30)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTeamInfo*                         PlayerTeam;                                        // 0x680(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTeamPrivateInfo*                  PlayerTeamPrivate;                                 // 0x688(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSkipReplicatedStats;                              // 0x690(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2680[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 ReplicatedStats_Campaign[0x22];                    // 0x694(0x110)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FReplicatedStatValues                 ReplicatedStats_Zone[0x22];                        // 0x7A4(0x110)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2681[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAreZoneStatsFinalized;                            // 0x8B8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReadyCheckState                  ReadyCheckState;                                   // 0x8B9(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2682[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HomeActor;                                         // 0x8C0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortPlayerAttributeSets              AttributeSets;                                     // 0x8C8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x918(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerOSSName;                                     // 0x920(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETrustedPlatformType              TrustedPlatformType;                               // 0x928(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2683[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUniqueNetIdRepl                      PlatformUniqueNetId;                               // 0x930(0x28)(Net, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2684[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvitedToConsoleSession;                          // 0x968(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInitializedPlayerCustomizationOptionsFromClientSettings; // 0x969(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2685[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               PawnDeathLocation;                                 // 0x96C(0xC)(Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CachedPreviousWorldPlayerId;                       // 0x978(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2686[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerState* GetDefaultObj();

	void UpdateScoreStatChanged();
	void ServerSetShowHeroHeadAccessories(bool bShow);
	void ServerSetShowHeroBackpack(bool bShow);
	void OnRep_ShowHeroHeadAccessories();
	void OnRep_ShowHeroBackpack();
	void OnRep_SessionOwner();
	void OnRep_ScoreStatChanged();
	void OnRep_PlayerTeam();
	void OnRep_PlatformUniqueNetId();
	void OnRep_Platform();
	void OnRep_PartyOwner();
	void OnRep_HomeActor(class AActor* OldHomeActor);
	void OnRep_HeroType();
	void OnRep_HeroId();
	void OnRep_CurrentCharXP();
	void OnRep_CharacterParts();
	void OnRep_CharacterGender();
	void OnRep_CharacterColorSwatches();
	void OnRep_CharacterBodyType();
	void OnRep_bHasStartedPlaying();
	void OnRep_AccessoryColorSwatches();
	bool IsConsolePlayer();
	struct FUniqueNetIdRepl GetUniqueID();
	class FName GetPlayerOSSName();
	struct FUniqueNetIdRepl GetPlatformUniqueNetId();
	class FString GetPlatform();
	class AFortPlayerPawn* GetCurrentPawn();
	void ClientNotifyAwardGranted(class UFortAwardItemDefinition* AwardDefinition);
	bool AreUniqueIDsIdentical(struct FUniqueNetIdRepl& A, struct FUniqueNetIdRepl& B);
};

// 0x1B8 (0xB38 - 0x980)
// Class FortniteGame.FortPlayerStateZone
class AFortPlayerStateZone : public AFortPlayerState
{
public:
	UMulticastDelegateProperty_                  OnCurrentPawnChanged;                              // 0x980(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2688[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReplicatedStatValues                 RS_Zone_Old[0x22];                                 // 0x9AC(0x110)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2689[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortCarriedObject*                    CarriedObject;                                     // 0xAC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRejoins;                                        // 0xAC8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OldTotalScoreStat;                                 // 0xACC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_268A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInvincibleDueToUI;                                // 0xAE8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentHealth;                                     // 0xAEC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealth;                                         // 0xAF0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentShield;                                     // 0xAF4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxShield;                                         // 0xAF8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAccumulatedItemEntry>         AccumulatedItems;                                  // 0xB00(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnAccumulatedItemsChanged;                         // 0xB10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSimulatedAttributeEntry>      SimulatedAttributes;                               // 0xB20(0x10)(Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFortGadgetItemDefinition*             PendingDestroyedGadgetItemDefinition;              // 0xB30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortPlayerStateZone* GetDefaultObj();

	void OnRep_NumRejoins();
	void OnRep_CharacterParts();
	void OnRep_AccumulatedItems();
	void MulticastTriggerOnGadgetTrackedAttributeDestroyedFX(class UFortGadgetItemDefinition* GadgetItemDefinition);
	float GetSimulatedAttributeValue(struct FGameplayAttribute& Attribute, float DefaultValue);
	int32 GetNumOfAccumulatedItem(class UFortWorldItemDefinition* ItemDefinition);
};

// 0x20 (0xB58 - 0xB38)
// Class FortniteGame.FortPlayerStatePvP
class AFortPlayerStatePvP : public AFortPlayerStateZone
{
public:
	uint8                                        Pad_268D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalQuantum;                                      // 0xB50(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_268E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPlayerStatePvP* GetDefaultObj();

	void OnRep_TotalQuantum(int32 PrevTotalQuantum);
};

// 0x448 (0xFA0 - 0xB58)
// Class FortniteGame.FortPlayerStateAthena
class AFortPlayerStateAthena : public AFortPlayerStatePvP
{
public:
	uint8                                        Pad_268F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETeamMemberState                  ReplicatedTeamMemberState;                         // 0xB5C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETeamMemberState                  TeamMemberState;                                   // 0xB5D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2690[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TeamMemberStateRepTime;                            // 0xB60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2691[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTeam                         TeamIndex;                                         // 0xB88(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasWonAGame;                                      // 0xB89(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2692[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeamScorePlacement;                                // 0xB8C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamScore;                                         // 0xB90(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Place;                                             // 0xB94(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamKillScore;                                     // 0xB98(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2693[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UAthenaGadgetItemDefinition*, int32> KillsWhileAthenaGadgetEquippedMap;                 // 0xBA0(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        DownScore;                                         // 0xBF0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2694[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        KillScore;                                         // 0xBF8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2695[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumChestsOpened;                                   // 0xC00(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2696[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumAmmoCansOpened;                                 // 0xC08(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2697[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSupplyDropsOpened;                              // 0xC10(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2698[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumLlamasOpened;                                   // 0xC18(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2699[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumForagedItemsConsumed;                           // 0xC20(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumMinutesAlive;                                   // 0xC28(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumBronzeCoinsCollected;                           // 0xC30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSilverCoinsCollected;                           // 0xC38(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumGoldCoinsCollected;                             // 0xC40(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TotalPlayerScore;                                  // 0xC48(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_269F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerStateAthena*                SpectatingTarget;                                  // 0xC50(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSpectatorAthenaArray             Spectators;                                        // 0xC58(0xC8)(Net, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnSpectatorsRemovedEvent;                          // 0xD30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpectatorCountChangedEvent;                      // 0xD40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnSpectatingTargetChangedEvent;                    // 0xD50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  PointsAddedToScore;                                // 0xD68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TeamScoreChanged;                                  // 0xD78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  TeamPlacementChanged;                              // 0xD88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AFortPlayerStateAthena*>        FriendsInSquad;                                    // 0xD98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TSet<class AFortPlayerStateAthena*>          HostilePlayersDamaged;                             // 0xDA8(0x50)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        SquadId;                                           // 0xDF8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bInAircraft : 1;                                   // Mask: 0x1, PropSize: 0x10xDF9(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUsingStreamerMode : 1;                            // Mask: 0x2, PropSize: 0x10xDF9(0x1)(Net, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_210 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26A2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MapIndicatorPos;                                   // 0xDFC(0x8)(BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapIndicatorServerTime;                            // 0xE04(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTalking;                                        // 0xE08(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMuted;                                          // 0xE09(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerBannerInfo                     Banner;                                            // 0xE10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A4[0x120];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SecondsAlive;                                      // 0xF58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDisconnected;                                   // 0xF5C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26A5[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDeathInfo                            DeathInfo;                                         // 0xF78(0x28)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortPlayerStateAthena* GetDefaultObj();

	void ServerSetInAircraft(bool bNewInAircraft);
	void OnRep_TeamScorePlacement();
	void OnRep_TeamScore();
	void OnRep_SquadId();
	void OnRep_SpectatingTarget();
	void OnRep_ReplicatedTeamMemberState();
	void OnRep_Place();
	void OnRep_NumSupplyDropsOpened();
	void OnRep_NumSilverCoinsCollected();
	void OnRep_NumMinutesAlive();
	void OnRep_NumLlamasOpened();
	void OnRep_NumGoldCoinsCollected();
	void OnRep_NumForagedItemsConsumed();
	void OnRep_NumChestsOpened();
	void OnRep_NumBronzeCoinsCollected();
	void OnRep_NumAmmoCansOpened();
	void OnRep_MapIndicatorPos();
	void OnRep_Kills();
	void OnRep_Downs();
	void OnRep_DeathInfo();
	void OnRep_BannerInfo();
	bool IsDisconnected();
	int32 GetSpectatorCount();
	void ClientReportKill(class AFortPlayerStateAthena* Player);
	void ClientReportDBNO(class AFortPlayerStateAthena* Player);
};

// 0x0 (0xB38 - 0xB38)
// Class FortniteGame.FortPlayerStateFOB
class AFortPlayerStateFOB : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerStateFOB* GetDefaultObj();

};

// 0x0 (0x980 - 0x980)
// Class FortniteGame.FortPlayerStateFrontEnd
class AFortPlayerStateFrontEnd : public AFortPlayerState
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerStateFrontEnd* GetDefaultObj();

};

// 0x0 (0xB38 - 0xB38)
// Class FortniteGame.FortPlayerStateKeep
class AFortPlayerStateKeep : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerStateKeep* GetDefaultObj();

};

// 0x0 (0xB38 - 0xB38)
// Class FortniteGame.FortPlayerStateManor
class AFortPlayerStateManor : public AFortPlayerStateZone
{
public:

	static class UClass* StaticClass();
	static class AFortPlayerStateManor* GetDefaultObj();

};

// 0x8 (0xB40 - 0xB38)
// Class FortniteGame.FortPlayerStateOutpost
class AFortPlayerStateOutpost : public AFortPlayerStateZone
{
public:
	bool                                         bCanEditOutpost;                                   // 0xB38(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CraftingTableItemsRemaing;                         // 0xB3C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortPlayerStateOutpost* GetDefaultObj();

	void SetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void ServerSetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void OnRep_CraftingTableItemsRemaing();
	void OnRep_CanEditOutpost();
	bool IsOutpostOwner();
	bool CanEditOutpost();
};

// 0x200 (0x230 - 0x30)
// Class FortniteGame.FortPlaylist
class UFortPlaylist : public UPrimaryDataAsset
{
public:
	class FName                                  PlaylistName;                                      // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinPlayers;                                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayers;                                        // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTeamCount;                                      // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTeamSize;                                       // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSocialPartySize;                                // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSquadSize;                                      // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnforceSquadFill;                                  // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UWorld>>         AdditionalLevels;                                  // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	enum class EFortTeam                         DefaultFirstTeam;                                  // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTeam                         DefaultLastTeam;                                   // 0x69(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTagContainer;                              // 0x70(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFriendlyFireType                 FriendlyFireType;                                  // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LootLevel;                                         // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     LootTagQuery;                                      // 0x98(0x48)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	int32                                        BuildingLevelOverride;                             // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoDBNO;                                           // 0xE4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UFortGameplayModifierItemDefinition>> ModifierList;                                      // 0xE8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItemDefinition*>      ItemsToFullyLoad;                                  // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsDefaultPlaylist;                                // 0x108(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  UIDisplayName;                                     // 0x110(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  UIDescription;                                     // 0x128(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 HUDElementsToHide;                                 // 0x140(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             LootTierData;                                      // 0x160(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             LootPackages;                                      // 0x188(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             RangedWeapons;                                     // 0x1B0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveTable>            GameData;                                          // 0x1D8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveTable>            ResourceRates;                                     // 0x200(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GarbageCollectionFrequency;                        // 0x228(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerPerformanceEventFrequency;                   // 0x22C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlaylist* GetDefaultObj();

};

// 0x1C0 (0x3F0 - 0x230)
// Class FortniteGame.FortPlaylistAthena
class UFortPlaylistAthena : public UFortPlaylist
{
public:
	int32                                        PlaylistId;                                        // 0x230(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRewardsTrackPlacement;                            // 0x234(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRewardsAllowXPProgression;                        // 0x235(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERewardPlacementBonusType         RewardPlacementBonusType;                          // 0x236(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AE[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RewardsPlacementThreshold;                         // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceSquadFill;                                   // 0x23C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateMMR;                                        // 0x23D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26AF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RatingType;                                        // 0x240(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaWinCondition               WinConditionType;                                  // 0x250(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        TimedWinConditionTime;                             // 0x258(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        FinalWinConditionTime;                             // 0x280(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FWinConditionScoreData                ScoringData;                                       // 0x2A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        TimedSafeZonePhaseTime;                            // 0x308(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bIsLargeTeamGame;                                  // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaRespawnType                RespawnType;                                       // 0x331(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAthenaRespawnLocation            RespawnLocation;                                   // 0x332(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDefaultQuests;                              // 0x333(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisallowMultipleWeaponsOfType;                    // 0x334(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAirCraftBehavior                 AirCraftBehavior;                                  // 0x335(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCustomAircraftPathSelection;                   // 0x336(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AircraftPathOffsetFromMapCenterMin;                // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftPathOffsetFromMapCenterMax;                // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftPathMidpointSelectionRadiusMin;            // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AircraftPathMidpointSelectionRadiusMax;            // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortMissionGenerator>     PlaylistMissionGen;                                // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceLTMLoadingScreenBackground;                  // 0x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlaylistUIExtension>          UIExtensions;                                      // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSubclassOf<class UFortGameUIExtenderAthena> UIExtenderClass;                                   // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MissionIcon;                                       // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  UIDisplaySubName;                                  // 0x378(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bLimitedTimeMode;                                  // 0x390(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IndicatorDisplayModeFlags;                         // 0x394(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IndicatorDisplayTime;                              // 0x398(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayScoreInHUD;                                // 0x39C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESafeZoneStartUp                  SafeZoneStartUp;                                   // 0x39D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWarmUpInStorm;                                    // 0x39E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StormEffectDelay;                                  // 0x3A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayFinalStormPosition;                        // 0x3A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawLineToStormCircleIfOutside;                   // 0x3A5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastSafeZoneIndex;                                 // 0x3A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseDefaultSupplyDrops;                            // 0x3AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26B6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSupplyDropModifierData>       SupplyDropModifierList;                            // 0x3B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortSupplyDropInfo>> SupplyDropInfoList;                                // 0x3C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UFortSpawnActorInfo>> SpawnActorInfoList;                                // 0x3D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int32                                        PlaylistStatId;                                    // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAccumulateToProfileStats;                         // 0x3E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSaveToRecentGameList;                             // 0x3E5(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAthenaAISettings*                     AISettings;                                        // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortPlaylistAthena* GetDefaultObj();

	void CreateCalendarPayload_RegionalOverride();
	void CreateCalendarPayload_Enabling();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlaylistManager
class UFortPlaylistManager : public UObject
{
public:
	TArray<class UFortPlaylistAthena*>           AthenaPlaylists;                                   // 0x28(0x10)(BlueprintVisible, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortPlaylistManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPlayMontageForGameplayTagQueryInterface
class IFortPlayMontageForGameplayTagQueryInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortPlayMontageForGameplayTagQueryInterface* GetDefaultObj();

};

// 0x160 (0x6C0 - 0x560)
// Class FortniteGame.FortPoiCollisionComponent
class UFortPoiCollisionComponent : public UPrimitiveComponent
{
public:
	struct FBodyInstance                         PoiBodyInstance;                                   // 0x560(0x158)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_26B8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPoiCollisionComponent* GetDefaultObj();

};

// 0x28 (0x350 - 0x328)
// Class FortniteGame.FortPoiManager
class AFortPoiManager : public AActor
{
public:
	TArray<class AFortPoiVolume*>                SmallTickUpdatedPoi;                               // 0x328(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AFortPoiVolume*>                AllPoiVolumes;                                     // 0x338(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        TestPlayerIndex;                                   // 0x348(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxNumTestsPerFrame;                               // 0x34C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortPoiManager* GetDefaultObj();

};

// 0x30 (0x390 - 0x360)
// Class FortniteGame.FortPoiVolume
class AFortPoiVolume : public AVolume
{
public:
	float                                        LargeGameVolume;                                   // 0x360(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 LocationTags;                                      // 0x368(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortPoiCollisionComponent*            PoiCollisionComp;                                  // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortPoiVolume* GetDefaultObj();

};

// 0x50 (0xBD0 - 0xB80)
// Class FortniteGame.FortPooledSkelMeshComponent
class UFortPooledSkelMeshComponent : public USkeletalMeshComponent
{
public:
	uint8                                        Pad_26BA[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            SavedMaterials;                                    // 0xBB0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26BB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPooledSkelMeshComponent* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class FortniteGame.FortProceduralFoliageComponent
class UFortProceduralFoliageComponent : public UProceduralFoliageComponent
{
public:

	static class UClass* StaticClass();
	static class UFortProceduralFoliageComponent* GetDefaultObj();

};

// 0x560 (0x588 - 0x28)
// Class FortniteGame.FortProfileGo
class UFortProfileGo : public UObject
{
public:
	uint8                                        Pad_26BC[0xE8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FProfileGoScenario>            ProfileGoScenarios;                                // 0x110(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FProfileGoCollection>          ProfileGoCollections;                              // 0x120(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TArray<struct FProfileGoCommand>             AllCommands;                                       // 0x130(0x10)(ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	float                                        DefaultSettleTime;                                 // 0x140(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BD[0x444];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortProfileGo* GetDefaultObj();

};

// 0x10 (0x6D8 - 0x6C8)
// Class FortniteGame.FortProjectile_MOBATurret
class AFortProjectile_MOBATurret : public AFortProjectileBase
{
public:
	TArray<struct FHitResult>                    ForcedHitResults;                                  // 0x6C8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortProjectile_MOBATurret* GetDefaultObj();

	void OnHomingTargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
};

// 0xF0 (0x7B8 - 0x6C8)
// Class FortniteGame.FortProjectileAthena
class AFortProjectileAthena : public AFortProjectileBase
{
public:
	struct FVector_NetQuantize                   FireStartLoc;                                      // 0x6C8(0xC)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBulletWhipTrackerComponentBase*       BulletWhipTrackerComponent;                        // 0x6D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26C2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            PawnHitResult;                                     // 0x6F0(0x88)(Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UBulletWhipTrackerComponentBase> BulletWhipTrackerComponentClass;                   // 0x778(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortProjectileAthena* GetDefaultObj();

	void ServerNotifyPawnHit(const struct FHitResult& Hit);
	void OnRep_PawnHitResult();
	void OnRep_FireStart();
	void KillAfterNoPawnHit();
};

// 0x8 (0x6D0 - 0x6C8)
// Class FortniteGame.FortProjectileFallingTrap
class AFortProjectileFallingTrap : public AFortProjectileBase
{
public:
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x6C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortProjectileFallingTrap* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class FortniteGame.FortProjectileTrajectory
class AFortProjectileTrajectory : public AActor
{
public:

	static class UClass* StaticClass();
	static class AFortProjectileTrajectory* GetDefaultObj();

	void SetTrajectoryFromNative(TArray<struct FVector>& SplinePoints, TArray<struct FVector>& SplineTangents);
};

// 0x48 (0x70 - 0x28)
// Class FortniteGame.FortPrototypingContext
class UFortPrototypingContext : public UBlueprintContextBase
{
public:
	UMulticastDelegateProperty_                  OnPrototypingStatusChangedEvent;                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C4[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPrototypingContext* GetDefaultObj();

	void OnPrototypingStatusChanged__DelegateSignature();
	enum class EFortPrototypingStatus GetPrototypingStatus();
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPushNotificationManager
class UFortPushNotificationManager : public UObject
{
public:
	uint8                                        Pad_26C5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPushNotificationManager* GetDefaultObj();

};

// 0x138 (0x7E0 - 0x6A8)
// Class FortniteGame.StrategicBuildingActor
class AStrategicBuildingActor : public ABuildingGameplayActor
{
public:
	float                                        HealthBarVisibilityDistance;                       // 0x6A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthBarVisibilityDistanceSquared;                // 0x6AC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         TouchBoxComponent;                                 // 0x6B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortStrategicBuildingCategory    StrategicBuildingCategory;                         // 0x6B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortAbilitySet*>               PermanentInherentAbilitySets;                      // 0x6C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FStrategicBuildingLevelInformation> LevelInfo;                                         // 0x6D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        ProximityPulseInterval;                            // 0x6E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortGameplayAbility>      DeathPenaltyAbility;                               // 0x6E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DeathParticles;                                    // 0x6F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                            DeathSound;                                        // 0x6F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortGadgetItemDefinition*             SpawnedFromItemDefinition;                         // 0x700(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamStrategicBuildingHandle          SBAHandle;                                         // 0x708(0x4)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FStrategicBuildingActiveConstructionInfo ConstructionProgress;                              // 0x70C(0x10)(Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStrategicBuildingLevelActiveCriteriaProgress> LevelProgress;                                     // 0x720(0x10)(Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         StrategicBuildingAbilitySets;                      // 0x730(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAbilitySetHandle>         PersistentlyAppliedAbilitySets;                    // 0x740(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        DeferredTouchActorsToProcess;                      // 0x750(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CB[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsActive : 1;                                     // Mask: 0x1, PropSize: 0x10x7B8(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnTouch : 1;                         // Mask: 0x2, PropSize: 0x10x7B8(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasGEsToApplyOnPulseTimer : 1;                    // Mask: 0x4, PropSize: 0x10x7B8(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_211 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26CC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortVisibilityComponent*              VisibilityComponent;                               // 0x7C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            MiniMapIcon;                                       // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AStrategicBuildingActor* GetDefaultObj();

	void SetupVisibilityComponent();
	void SetupIndicators();
	void ProcessDeferredTouchActors();
	void OnRep_ConstructionProgress();
	void OnRep_bIsActive();
	void OnConstructionTickPlayEffects(float DeltaTime, float ElapsedPct, int32 ConstructionLvl);
	void OnConstructionStartedPlayEffects(float ServerStartTime, float ServerEndTime, float CurrentServerTime, float ElapsedPct, int32 ConstructionLvl);
	void OnConstructionEndedPlayEffects(int32 ConstructionLevel);
	void OnActiveStatusChanged(bool bNewActiveStatus);
	bool IsActive();
	void GiveItemFromStrategicBuildingToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive);
	float GetMaxLevelUnlockProgress(int32 InLevel);
	struct FVector GetDeathEffectsScale();
	struct FRotator GetDeathEffectsRotation();
	struct FVector GetDeathEffectsLocation();
	float GetCurrentLevelUnlockProgress(int32 InLevel);
	bool AttemptIncrementLevelUnlockProgress(int32 InLevel, float InProgressDelta);
	void ApplyProximityPulseEffects();
};

// 0x30 (0x810 - 0x7E0)
// Class FortniteGame.FortPvPBaseCornerstone
class AFortPvPBaseCornerstone : public AStrategicBuildingActor
{
public:
	uint8                                        bInvincible : 1;                                   // Mask: 0x1, PropSize: 0x10x7E0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_212 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnCornerstoneDamaged;                              // 0x7E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnCornerstoneOutOfHealth;                          // 0x7F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPvPBaseCornerstone* GetDefaultObj();

	void SetInvincibility(bool bInInvincible);
	void OnRep_bInvincible();
	void OnInvincibilityChanged(bool bIsInvincible);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortPvPFunctionLibrary
class UFortPvPFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortPvPFunctionLibrary* GetDefaultObj();

	void SetMatchLevel(class UObject* WorldContextObject, int32 MatchLevel);
	class AStrategicBuildingActor* GetTeamStrategicBuildingActor(class UObject* WorldContextObject, enum class EFortTeam Team, struct FTeamStrategicBuildingHandle& SBAHandle);
	class AFortPvPBaseCornerstone* GetTeamCornerstone(class UObject* WorldContextObject, enum class EFortTeam Team);
	int32 GetRoundTimeAccumulated(class UObject* WorldContextObject);
	int32 GetMatchLevel(class UObject* WorldContextObject);
	void GetDifficultyRowNamesFromPvPRating(TArray<class FName>* OutDifficultyRows, float InPvPRating);
	class AFortTeamInfoPvPBaseDestruction* GetBaseDestructionTeamInfo(class UObject* WorldContextObject, enum class EFortTeam Team);
	int32 GetBaseBuildingCost(class ABuildingActor* BuildingActor);
	void FirePvPVictoryMissionEvent(class UObject* WorldContextObject, enum class EFortTeam InWinningTeam);
	void DestroyAllFortPickupsWithItem(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinitionToCheck);
};

// 0x10 (0x6B0 - 0x6A0)
// Class FortniteGame.FortPvPMission
class AFortPvPMission : public AFortMission
{
public:
	class AFortPlayerStatePvP*                   WinningPlayerState;                                // 0x6A0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortTeamInfo*                         WinningTeam;                                       // 0x6A8(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortPvPMission* GetDefaultObj();

};

// 0x28 (0x6D8 - 0x6B0)
// Class FortniteGame.FortPvPMission_3PtDomination
class AFortPvPMission_3PtDomination : public AFortPvPMission
{
public:
	TArray<class ABuildingCapturePointActor*>    CapturePoints;                                     // 0x6B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                TeamScores;                                        // 0x6C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        ScoreToWin;                                        // 0x6D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPvPMission_3PtDomination* GetDefaultObj();

	void CapturePointSetterHackTimer();
};

// 0x18 (0x6C8 - 0x6B0)
// Class FortniteGame.FortPvPMission_CTF
class AFortPvPMission_CTF : public AFortPvPMission
{
public:
	TArray<int32>                                TeamCaptureTotals;                                 // 0x6B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	int32                                        TotalCapturesToWin;                                // 0x6C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPvPMission_CTF* GetDefaultObj();

};

// 0x0 (0x6B0 - 0x6B0)
// Class FortniteGame.FortPvPMission_EnemyBaseDestruction
class AFortPvPMission_EnemyBaseDestruction : public AFortPvPMission
{
public:

	static class UClass* StaticClass();
	static class AFortPvPMission_EnemyBaseDestruction* GetDefaultObj();

	class AFortPvPBaseCornerstone* GetCornerstoneForTeam(enum class EFortTeam InTeam);
};

// 0x0 (0x528 - 0x528)
// Class FortniteGame.FortPvPMissionManager
class AFortPvPMissionManager : public AFortMissionManager
{
public:

	static class UClass* StaticClass();
	static class AFortPvPMissionManager* GetDefaultObj();

};

// 0x8 (0x400 - 0x3F8)
// Class FortniteGame.FortPvPObjective
class AFortPvPObjective : public AFortObjectiveBase
{
public:
	enum class EFortTeam                         Team;                                              // 0x3F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPvPObjective* GetDefaultObj();

};

// 0x0 (0x400 - 0x400)
// Class FortniteGame.FortPvPObjective_3PtDomination
class AFortPvPObjective_3PtDomination : public AFortPvPObjective
{
public:

	static class UClass* StaticClass();
	static class AFortPvPObjective_3PtDomination* GetDefaultObj();

};

// 0x0 (0x400 - 0x400)
// Class FortniteGame.FortPvPObjective_CTF
class AFortPvPObjective_CTF : public AFortPvPObjective
{
public:

	static class UClass* StaticClass();
	static class AFortPvPObjective_CTF* GetDefaultObj();

};

// 0x0 (0x400 - 0x400)
// Class FortniteGame.FortPvPObjective_EnemyBaseDestruction
class AFortPvPObjective_EnemyBaseDestruction : public AFortPvPObjective
{
public:

	static class UClass* StaticClass();
	static class AFortPvPObjective_EnemyBaseDestruction* GetDefaultObj();

};

// 0x10 (0x368 - 0x358)
// Class FortniteGame.FortPvPPlayerStart
class AFortPvPPlayerStart : public APlayerStart
{
public:
	uint8                                        Pad_26DD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTeam                         Team;                                              // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bDynamicStartLocation : 1;                         // Mask: 0x1, PropSize: 0x10x364(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortPvPPlayerStart* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AllEnemies
class UFortQueryContext_AllEnemies : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_AllEnemies* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AllGoals
class UFortQueryContext_AllGoals : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_AllGoals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_AllPlayers
class UFortQueryContext_AllPlayers : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_AllPlayers* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterFallbackTarget
class UFortQueryContext_EncounterFallbackTarget : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterFallbackTarget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterGoalsCenterLocation
class UFortQueryContext_EncounterGoalsCenterLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterGoalsCenterLocation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterGoalsOnGround
class UFortQueryContext_EncounterGoalsOnGround : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterGoalsOnGround* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterPrimaryAssignmentGoals
class UFortQueryContext_EncounterPrimaryAssignmentGoals : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterPrimaryAssignmentGoals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterQueryActor
class UFortQueryContext_EncounterQueryActor : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterQueryActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterRandomDirection
class UFortQueryContext_EncounterRandomDirection : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterRandomDirection* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_EncounterTargetObjective
class UFortQueryContext_EncounterTargetObjective : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_EncounterTargetObjective* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_Goal
class UFortQueryContext_Goal : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_Goal* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_GoalProviderRootAssignmentGoals
class UFortQueryContext_GoalProviderRootAssignmentGoals : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_GoalProviderRootAssignmentGoals* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_NearbyFriends
class UFortQueryContext_NearbyFriends : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_NearbyFriends* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_TwoPointSolverPointA
class UFortQueryContext_TwoPointSolverPointA : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_TwoPointSolverPointA* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortQueryContext_TwoPointSolverRotationA
class UFortQueryContext_TwoPointSolverRotationA : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class UFortQueryContext_TwoPointSolverRotationA* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortQueryData_CurvesAroundLine
class UFortQueryData_CurvesAroundLine : public UDataAsset
{
public:
	struct FFortPointsOnCurve                    PointsOnSideA;                                     // 0x30(0x38)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FFortPointsOnCurve                    PointsOnSideB;                                     // 0x68(0x38)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryData_CurvesAroundLine* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class FortniteGame.FortQueryGenerator_ActorsAround
class UFortQueryGenerator_ActorsAround : public UEnvQueryGenerator_ActorsOfClass
{
public:

	static class UClass* StaticClass();
	static class UFortQueryGenerator_ActorsAround* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortQueryGenerator_AssignmentGoal
class UFortQueryGenerator_AssignmentGoal : public UEnvQueryGenerator
{
public:

	static class UClass* StaticClass();
	static class UFortQueryGenerator_AssignmentGoal* GetDefaultObj();

};

// 0x158 (0x1A8 - 0x50)
// Class FortniteGame.FortQueryGenerator_Buildings
class UFortQueryGenerator_Buildings : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          BuildingGridVolumeCenter;                          // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               HorizontalBuildingCellRadius;                      // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               BuildingCellsAbove;                                // 0x88(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               BuildingCellsBelow;                                // 0xB8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeWalls;                                     // 0xE8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeFloors;                                    // 0x118(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeCenterCell;                                // 0x148(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderIntValue               MaxBuildingActorsPerVolumeCenterToCollect;         // 0x178(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_Buildings* GetDefaultObj();

};

// 0x98 (0xE8 - 0x50)
// Class FortniteGame.FortQueryGenerator_BuildingsOnCachedPath
class UFortQueryGenerator_BuildingsOnCachedPath : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          CachedPathSource;                                  // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeWalls;                                     // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeFloors;                                    // 0x88(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bIncludeCenterCell;                                // 0xB8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_BuildingsOnCachedPath* GetDefaultObj();

};

// 0x38 (0x88 - 0x50)
// Class FortniteGame.FortQueryGenerator_Enemies
class UFortQueryGenerator_Enemies : public UEnvQueryGenerator
{
public:
	bool                                         bPerceivedEnemiesOnly;                             // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSleepCapableAIUsePerceivedEnemiesOnly;            // 0x51(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIgnoreSleepingAIs;                                // 0x52(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26E0[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             MaxTimeSincePerceived;                             // 0x58(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_Enemies* GetDefaultObj();

};

// 0x8 (0x1F0 - 0x1E8)
// Class FortniteGame.FortQueryGenerator_GoalOnCircle
class UFortQueryGenerator_GoalOnCircle : public UEnvQueryGenerator_OnCircle
{
public:
	bool                                         bIncludeCenterActorInGeneratedGoals;               // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryGenerator_GoalOnCircle* GetDefaultObj();

};

// 0x48 (0x98 - 0x50)
// Class FortniteGame.FortQueryGenerator_HotspotSlots
class UFortQueryGenerator_HotspotSlots : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             Radius;                                            // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bUseTetherZone : 1;                                // Mask: 0x1, PropSize: 0x10x88(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_213 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26E2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AFortAIHotSpot>            HotspotClass;                                      // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_HotspotSlots* GetDefaultObj();

};

// 0x40 (0xC0 - 0x80)
// Class FortniteGame.FortQueryGenerator_InfluenceMapPoints
class UFortQueryGenerator_InfluenceMapPoints : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue               Density;                                           // 0x80(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bOnlyFlatSurface : 1;                              // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_214 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_InfluenceMapPoints* GetDefaultObj();

};

// 0x48 (0x98 - 0x50)
// Class FortniteGame.FortQueryGenerator_MissionPlacementActors
class UFortQueryGenerator_MissionPlacementActors : public UEnvQueryGenerator
{
public:
	struct FGameplayTagQuery                     MissionPlacementActorTagQuery;                     // 0x50(0x48)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_MissionPlacementActors* GetDefaultObj();

};

// 0x90 (0x110 - 0x80)
// Class FortniteGame.FortQueryGenerator_PointsAroundLine
class UFortQueryGenerator_PointsAroundLine : public UEnvQueryGenerator_ProjectedPoints
{
public:
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIDataProviderIntValue               MaxPointsPerClusterLocation;                       // 0x88(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ClusterRadius;                                     // 0xB8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortQueryData_CurvesAroundLine> CurvesAroundLineAsset;                             // 0xE8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_PointsAroundLine* GetDefaultObj();

};

// 0x128 (0x1A8 - 0x80)
// Class FortniteGame.FortQueryGenerator_PointsFromNavGraph
class UFortQueryGenerator_PointsFromNavGraph : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderFloatValue             MinPathDistance;                                   // 0x80(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             MaxPathDistance;                                   // 0xB0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue               Density;                                           // 0xE0(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             ExploreDirectionYaw;                               // 0x110(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FEnvDirection                         ExploreDirection;                                  // 0x140(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ExploreAngleDot;                                   // 0x160(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             ExploreInnerRadius;                                // 0x168(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bLimitExplorationDirection : 1;                    // Mask: 0x1, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOnlyFlatSurface : 1;                              // Mask: 0x2, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseParameterizedDirection : 1;                    // Mask: 0x4, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowTerrain : 1;                           // Mask: 0x8, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowBuildings : 1;                         // Mask: 0x10, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowDropdown : 1;                          // Mask: 0x20, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowClimbup : 1;                           // Mask: 0x40, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowSmash : 1;                             // Mask: 0x80, PropSize: 0x10x198(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortPointsFromNavGraphGoalPathDistanceFilterOperator PathDistanceFilterOperator;                        // 0x19C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0x1A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_PointsFromNavGraph* GetDefaultObj();

};

// 0x40 (0x90 - 0x50)
// Class FortniteGame.FortQueryGenerator_PointsInVolume
class UFortQueryGenerator_PointsInVolume : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue               NumberOfPoints;                                    // 0x50(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	enum class EFortNamedNavmesh                 NavMeshToUse;                                      // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateIn;                                        // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_PointsInVolume* GetDefaultObj();

};

// 0x70 (0xF0 - 0x80)
// Class FortniteGame.FortQueryGenerator_PointsOnBuildingGrid
class UFortQueryGenerator_PointsOnBuildingGrid : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue               HorizontalGridSize;                                // 0x80(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue               VerticalGridSize;                                  // 0xB0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bStartGridFromBottom;                              // 0xE0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePointInVerticalCenterOfCell;                   // 0xE1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          GenerateAround;                                    // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_PointsOnBuildingGrid* GetDefaultObj();

};

// 0x40 (0x90 - 0x50)
// Class FortniteGame.FortQueryGenerator_SpecificAssignmentGoals
class UFortQueryGenerator_SpecificAssignmentGoals : public UEnvQueryGenerator
{
public:
	struct FFortAIAssignmentIdentifier           AssignmentIdentifier;                              // 0x50(0x30)(Edit, Protected, NativeAccessSpecifierProtected)
	class UFortAIAssignmentSettings*             AssignmentSettings;                                // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortAIGoalProvider>       GoalProvider;                                      // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_SpecificAssignmentGoals* GetDefaultObj();

};

// 0xD0 (0x120 - 0x50)
// Class FortniteGame.FortQueryGenerator_TerrainDonut
class UFortQueryGenerator_TerrainDonut : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          Center;                                            // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             Radius;                                            // 0x58(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             RadiusWidth;                                       // 0x88(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             SpacingArc;                                        // 0xB8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderIntValue               NumRings;                                          // 0xE8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowTerrain : 1;                           // Mask: 0x1, PropSize: 0x10x118(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bFilterAllowBuildings : 1;                         // Mask: 0x2, PropSize: 0x10x118(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryGenerator_TerrainDonut* GetDefaultObj();

};

// 0x30 (0x80 - 0x50)
// Class FortniteGame.FortQueryGenerator_ValidSpawnRiftActors
class UFortQueryGenerator_ValidSpawnRiftActors : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue               NumAIForGroup;                                     // 0x50(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryGenerator_ValidSpawnRiftActors* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortQueryItemType_Goal
class UFortQueryItemType_Goal : public UEnvQueryItemType_ActorBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryItemType_Goal* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortQueryItemType_PointOrSlot
class UFortQueryItemType_PointOrSlot : public UEnvQueryItemType_Point
{
public:

	static class UClass* StaticClass();
	static class UFortQueryItemType_PointOrSlot* GetDefaultObj();

};

// 0x18 (0x1D8 - 0x1C0)
// Class FortniteGame.FortQueryTest_GoalBase
class UFortQueryTest_GoalBase : public UEnvQueryTest
{
public:
	uint8                                        bScoreEnemies : 1;                                 // Mask: 0x1, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScoreEncounterGoals : 1;                          // Mask: 0x2, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScoreWorldGoals : 1;                              // Mask: 0x4, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScoreSpecificAssignments : 1;                     // Mask: 0x8, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_215 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAIAssignmentIdentifier>   AssignmentIDs;                                     // 0x1C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalBase* GetDefaultObj();

};

// 0x180 (0x358 - 0x1D8)
// Class FortniteGame.FortQueryTest_AssignmentTypeInterest
class UFortQueryTest_AssignmentTypeInterest : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             InvalidTypeStartInterest;                          // 0x1D8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             InvalidTypeEndInterest;                            // 0x208(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             InvalidTypeTimeBeforeLerp;                         // 0x238(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             InvalidTypeLerpDuration;                           // 0x268(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeStartInterest;                            // 0x298(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeEndInterest;                              // 0x2C8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeTimeBeforeLerp;                           // 0x2F8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValidTypeLerpDuration;                             // 0x328(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_AssignmentTypeInterest* GetDefaultObj();

};

// 0x300 (0x4D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_BuildingCriteria
class UFortQueryTest_BuildingCriteria : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             ScoreForGroundSupportedFloor;                      // 0x1D8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForBeingGroundSupported;                      // 0x208(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForTraps;                                     // 0x238(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForWalls;                                     // 0x268(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForNavigableOpening;                          // 0x298(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FFortAIAssignmentIdentifier           RootAssignmentID;                                  // 0x2C8(0x30)(Edit, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bPreferCloserToRootAssignment;                     // 0x2F8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ScoreForDistanceFromClosestRootAssignmentGoal;     // 0x328(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MinDistanceForDistanceScoring;                     // 0x358(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxDistanceForDistanceScoring;                     // 0x388(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxHealthScore;                                    // 0x3B8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bPreferHigherHealth;                               // 0x3E8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ClampMaxHealthValue;                               // 0x418(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             ClampMinHealthValue;                               // 0x448(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue              bPreferHigherHealthPercentage;                     // 0x478(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxHealthPercentageScore;                          // 0x4A8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryTest_BuildingCriteria* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_CanAttackTarget
class UFortQueryTest_CanAttackTarget : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_CanAttackTarget* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_CanBeDamaged
class UFortQueryTest_CanBeDamaged : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_CanBeDamaged* GetDefaultObj();

};

// 0x30 (0x1F0 - 0x1C0)
// Class FortniteGame.FortQueryTest_CanHitWithGameplayAbility
class UFortQueryTest_CanHitWithGameplayAbility : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          AIsUsingAbility;                                   // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>          AbilityTargets;                                    // 0x1C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayAbilityTag;                                // 0x1D0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_CanHitWithGameplayAbility* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_DecoyDistance
class UFortQueryTest_DecoyDistance : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_DecoyDistance* GetDefaultObj();

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_GameplayTagsPerDifficulty
class UFortQueryTest_GameplayTagsPerDifficulty : public UEnvQueryTest
{
public:
	TArray<struct FFortGameplayTagQueryPerDifficulty> TagQueriesPerDifficulty;                           // 0x1C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_GameplayTagsPerDifficulty* GetDefaultObj();

};

// 0x18 (0x1F0 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalActorDot
class UFortQueryTest_GoalActorDot : public UFortQueryTest_GoalBase
{
public:
	TSubclassOf<class UEnvQueryContext>          LineATo;                                           // 0x1D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UEnvQueryContext>          LineBTo;                                           // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTestGoalActorDot             TestMode;                                          // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbsoluteValue;                                    // 0x1E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26EB[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalActorDot* GetDefaultObj();

};

// 0x30 (0x208 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalDiscouragement
class UFortQueryTest_GoalDiscouragement : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderBoolValue              DisableDiscouragementWhenUndermining;              // 0x1D8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalDiscouragement* GetDefaultObj();

};

// 0x18 (0x1F0 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalDistance
class UFortQueryTest_GoalDistance : public UFortQueryTest_GoalBase
{
public:
	enum class EDistanceMode                     DistanceMode;                                      // 0x1D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26EC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvTestDistance                  TestMode;                                          // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26ED[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalDistance* GetDefaultObj();

};

// 0x28 (0x200 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalDistanceRanges
class UFortQueryTest_GoalDistanceRanges : public UFortQueryTest_GoalBase
{
public:
	enum class EDistanceMode                     DistanceMode;                                      // 0x1D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26EE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvTestDistance                  ScreeningTestMode;                                 // 0x1E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvTestDistance                  TestMode;                                          // 0x1E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26EF[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGoalDistanceData>             GoalDistanceDataRanges;                            // 0x1F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalDistanceRanges* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalFrustrationDiscouragement
class UFortQueryTest_GoalFrustrationDiscouragement : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalFrustrationDiscouragement* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalMarkedByPlayer
class UFortQueryTest_GoalMarkedByPlayer : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalMarkedByPlayer* GetDefaultObj();

};

// 0x8 (0x1E0 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalNumberOfAIAssigned
class UFortQueryTest_GoalNumberOfAIAssigned : public UFortQueryTest_GoalBase
{
public:
	enum class ECountAIAssignedToType            TypeOfMatchToCount;                                // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalNumberOfAIAssigned* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalOverallDamageCaused
class UFortQueryTest_GoalOverallDamageCaused : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalOverallDamageCaused* GetDefaultObj();

};

// 0xF0 (0x2C8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalStickiness
class UFortQueryTest_GoalStickiness : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             StartValueForGoal;                                 // 0x1D8(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             EndValueForGoal;                                   // 0x208(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             TimeBeforeValueLerp;                               // 0x238(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue             ValueLerpDuration;                                 // 0x268(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderBoolValue              ApplyStickinessToAllGoalsWithSameActor;            // 0x298(0x30)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalStickiness* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalType
class UFortQueryTest_GoalType : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalType* GetDefaultObj();

};

// 0x0 (0x1D8 - 0x1D8)
// Class FortniteGame.FortQueryTest_GoalWithinTetheredBounds
class UFortQueryTest_GoalWithinTetheredBounds : public UFortQueryTest_GoalBase
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_GoalWithinTetheredBounds* GetDefaultObj();

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_HasNearbyBuildings
class UFortQueryTest_HasNearbyBuildings : public UEnvQueryTest
{
public:
	uint8                                        bIncludeCenter : 1;                                // Mask: 0x1, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIncludeFloors : 1;                                // Mask: 0x2, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIncludeFloorsAbove : 1;                           // Mask: 0x4, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIncludeWalls : 1;                                 // Mask: 0x8, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_216 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26F1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExtentXY;                                          // 0x1C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExtentZ;                                           // 0x1C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_HasNearbyBuildings* GetDefaultObj();

};

// 0x38 (0x1F8 - 0x1C0)
// Class FortniteGame.FortQueryTest_HasNearbyEncounterGoals
class UFortQueryTest_HasNearbyEncounterGoals : public UEnvQueryTest
{
public:
	uint8                                        bOnlyActiveEncounters : 1;                         // Mask: 0x1, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_217 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_26F3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             TestDistance;                                      // 0x1C8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_HasNearbyEncounterGoals* GetDefaultObj();

};

// 0x38 (0x1F8 - 0x1C0)
// Class FortniteGame.FortQueryTest_HotspotSlotOrientation
class UFortQueryTest_HotspotSlotOrientation : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          FaceToward;                                        // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             DotThreshold;                                      // 0x1C8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_HotspotSlotOrientation* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_HotspotSlotState
class UFortQueryTest_HotspotSlotState : public UEnvQueryTest
{
public:
	enum class EAIHotSpotSlot                    SlotState;                                         // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_HotspotSlotState* GetDefaultObj();

};

// 0x0 (0x1C0 - 0x1C0)
// Class FortniteGame.FortQueryTest_InfluenceScore
class UFortQueryTest_InfluenceScore : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_InfluenceScore* GetDefaultObj();

};

// 0x0 (0x1C0 - 0x1C0)
// Class FortniteGame.FortQueryTest_InsideBuilding
class UFortQueryTest_InsideBuilding : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class UFortQueryTest_InsideBuilding* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_InsideWater
class UFortQueryTest_InsideWater : public UEnvQueryTest
{
public:
	float                                        TestRadius;                                        // 0x1C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_InsideWater* GetDefaultObj();

};

// 0x40 (0x200 - 0x1C0)
// Class FortniteGame.FortQueryTest_IsCloseToHotspotSlot
class UFortQueryTest_IsCloseToHotspotSlot : public UEnvQueryTest
{
public:
	TSubclassOf<class AFortAIHotSpot>            HotspotClass;                                      // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             Radius;                                            // 0x1C8(0x30)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bIgnoreItemsWithSlotData;                          // 0x1F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_IsCloseToHotspotSlot* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_IsCloseToPatrolWard
class UFortQueryTest_IsCloseToPatrolWard : public UEnvQueryTest
{
public:
	enum class EWardAffectType                   WardEffectTypeFilter;                              // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_IsCloseToPatrolWard* GetDefaultObj();

};

// 0x38 (0x1F8 - 0x1C0)
// Class FortniteGame.FortQueryTest_IsGoalForAssignment
class UFortQueryTest_IsGoalForAssignment : public UEnvQueryTest
{
public:
	bool                                         bRetrieveRootAssignmentFromOwner;                  // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26F8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAIAssignmentIdentifier           RootAssignmentID;                                  // 0x1C8(0x30)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryTest_IsGoalForAssignment* GetDefaultObj();

};

// 0x68 (0x228 - 0x1C0)
// Class FortniteGame.FortQueryTest_MissionGameplayTagMatch
class UFortQueryTest_MissionGameplayTagMatch : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                     MissionPlacementActorTagQuery;                     // 0x1C0(0x48)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 GameplayTagsToMatch;                               // 0x208(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryTest_MissionGameplayTagMatch* GetDefaultObj();

};

// 0x48 (0x208 - 0x1C0)
// Class FortniteGame.FortQueryTest_MissionSameMap
class UFortQueryTest_MissionSameMap : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                     MissionPlacementActorTagQuery;                     // 0x1C0(0x48)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryTest_MissionSameMap* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_NavGraphDistance
class UFortQueryTest_NavGraphDistance : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          DistanceTo;                                        // 0x1C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_NavGraphDistance* GetDefaultObj();

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_OnFlatSurface
class UFortQueryTest_OnFlatSurface : public UEnvQueryTest
{
public:
	float                                        Radius;                                            // 0x1C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ToleranceZ;                                        // 0x1C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceOffsetUp;                                     // 0x1C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceOffsetDown;                                   // 0x1CC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_OnFlatSurface* GetDefaultObj();

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_PerceptionAge
class UFortQueryTest_PerceptionAge : public UEnvQueryTest
{
public:
	enum class ECorePerceptionTypes              Sense;                                             // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAISense>                  SenseClass;                                        // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_PerceptionAge* GetDefaultObj();

};

// 0x180 (0x358 - 0x1D8)
// Class FortniteGame.FortQueryTest_PerceptionAll
class UFortQueryTest_PerceptionAll : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue             SenseScores[0x6];                                  // 0x1D8(0x120)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MinSenseAge;                                       // 0x2F8(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             MaxSenseAge;                                       // 0x328(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryTest_PerceptionAll* GetDefaultObj();

};

// 0x10 (0x1D0 - 0x1C0)
// Class FortniteGame.FortQueryTest_PerceptionExists
class UFortQueryTest_PerceptionExists : public UEnvQueryTest
{
public:
	enum class ECorePerceptionTypes              Sense;                                             // 0x1C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UAISense>                  SenseClass;                                        // 0x1C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQueryTest_PerceptionExists* GetDefaultObj();

};

// 0xF8 (0x2D0 - 0x1D8)
// Class FortniteGame.FortQueryTest_PrimaryAssignment
class UFortQueryTest_PrimaryAssignment : public UFortQueryTest_GoalBase
{
public:
	bool                                         bUseItemActorLocation;                             // 0x1D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26FB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderFloatValue             DistanceClose;                                     // 0x1E0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             DistanceFar;                                       // 0x210(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             PercentValueClose;                                 // 0x240(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             PercentValueRegular;                               // 0x270(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue             PercentValueFar;                                   // 0x2A0(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortQueryTest_PrimaryAssignment* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class FortniteGame.FortQueryTest_Random
class UFortQueryTest_Random : public UEnvQueryTest
{
public:
	uint8                                        bUseRandomSeedForAI : 1;                           // Mask: 0x1, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseRandomSeedForOthers : 1;                       // Mask: 0x2, PropSize: 0x10x1C0(0x1)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQueryTest_Random* GetDefaultObj();

};

// 0xC8 (0xF0 - 0x28)
// Class FortniteGame.FortQueryTwoPointSolver
class UFortQueryTwoPointSolver : public UObject
{
public:
	class UEnvQuery*                             QueryPointA;                                       // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvQuery*                             QueryPointB;                                       // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                QueryParamsA;                                      // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEnvNamedValue>                QueryParamsB;                                      // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFinished;                                        // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFailed;                                          // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	enum class ETwoPointSolverRotationA          RotationMode;                                      // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              MinRotationOffset;                                 // 0x7C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              MaxRotationOffset;                                 // 0x88(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bUseNegativeAngleOffsets : 1;                      // Mask: 0x1, PropSize: 0x10x94(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsePositiveAngleOffsets : 1;                      // Mask: 0x2, PropSize: 0x10x94(0x1)(Edit, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_218 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2700[0x4B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAISystem*                         AISys;                                             // 0xE0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               CachedQuerier;                                     // 0xE8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQueryTwoPointSolver* GetDefaultObj();

	void Start(class UObject* Querier);
	void SkipToNextPointA();
	void SetCustomRotationA(struct FRotator& Rotation);
	void OnCustomRotationMode(struct FVector& InPointA, const struct FVector& Querier);
	struct FRotator GetRandomRotationOffset();
	void AddNamedFloatParamB(class FName ParamName, float Value);
	void AddNamedFloatParamA(class FName ParamName, float Value);
};

// 0xA8 (0x188 - 0xE0)
// Class FortniteGame.FortQuestItem
class UFortQuestItem : public UFortAccountItem
{
public:
	TArray<class UFortQuestObjectiveInfo*>       Objectives;                                        // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	int32                                        LastNotifiedQuestCount;                            // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestState                   Quest_state;                                       // 0xF4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         Sent_new_notification;                             // 0xF5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2707[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Last_state_change_time;                            // 0xF8(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, int32>                     CompletionCounts;                                  // 0x100(0x50)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bSentCompleteNotification;                         // 0x150(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllObjectivesComplete;                            // 0x151(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2708[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Twitch_broadcaster_channel_id;                     // 0x158(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentStage;                                      // 0x168(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2709[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDateTime                             Expiry_time;                                       // 0x170(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortMissionInstancedConfigData       InstancedConfigData;                               // 0x178(0x10)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortQuestItem* GetDefaultObj();

	bool ShouldDisplayOverallQuestInformation();
	bool IsVisibleToUser(bool bAllowClaimedQuestsToBeVisible);
	bool IsQuestPinned();
	bool IsQuestInProgress();
	bool IsObjectiveWithNameInProgress(class FName BackendName);
	bool IsObjectiveInProgress(const struct FDataTableRowHandle& ObjectiveStatHandle);
	bool IsIncludedInCategories();
	bool HasVisibleRewards();
	bool HasQuestExpired(const struct FDateTime& UtcNow);
	bool HasCompletedQuest();
	bool HasCompletedObjectiveWithName(class FName BackendName);
	bool HasCompletedObjective(const struct FDataTableRowHandle& ObjectiveStatHandle);
	class FString GetTwitchBroadcasterChannelId();
	struct FTimespan GetRemainingExpirationDuration(const struct FDateTime& UtcNow);
	enum class EFortQuestState GetQuestState();
	class UFortQuestItemDefinition* GetQuestDefinitionBP();
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewSelectableRewards(int32 RewardIndex);
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewRewards();
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewAllSelectableRewards();
	float GetPercentageComplete();
	class UFortQuestObjectiveInfo* GetObjectiveInfo(const struct FDataTableRowHandle& ObjectiveStatHandle);
	int32 GetNumObjectivesComplete();
	class UFortMissionConfigData* GetMissionConfigData(const struct FGameplayTag& InBucketTag);
	struct FDateTime GetBroadcasterGrantWindowEnd();
	void GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount);
	bool DoesQuestExpire();
	bool CanPinQuest();
};

// 0x210 (0x540 - 0x330)
// Class FortniteGame.FortQuestItemDefinition
class UFortQuestItemDefinition : public UFortAccountItemDefinition
{
public:
	enum class EFortQuestType                    QuestType;                                         // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EQuestVisualStyle                 VisualStyle;                                       // 0x331(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExpirationDuration;                                // 0x334(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortItemQuantityPair>         Rewards;                                           // 0x338(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            RewardsTable;                                      // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270B[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortHiddenRewardQuantityPair> HiddenRewards;                                     // 0x388(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortMcpQuestRewardInfo>       SelectableRewards;                                 // 0x398(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EFortQuestRewardType              RewardType;                                        // 0x3A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldDisplayOverallQuestInformation;             // 0x3A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortMcpQuestObjectiveInfo>    Objectives;                                        // 0x3B0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAthenaMustCompleteInSingleMatch;                  // 0x3C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ObjectiveCompletionCount;                          // 0x3C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 Prerequisites;                                     // 0x3C8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortQuestItemDefinition> PrerequisiteQuest;                                 // 0x3E8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   PrerequisiteObjective;                             // 0x410(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        Weight;                                            // 0x420(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16                                       GranterWindowPeriodMinutes;                        // 0x424(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint16                                       GranterCooldownPeriodSeconds;                      // 0x426(0x2)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStreamingRequired;                               // 0x428(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   Category;                                          // 0x430(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortConversation>      IntroConversation;                                 // 0x440(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortConversation>      SelectRewardsConversation;                         // 0x468(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortConversation>      ClaimConversation;                                 // 0x490(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  RewardHeaderText;                                  // 0x4B8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  RewardDescription;                                 // 0x4D0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  CompletionText;                                    // 0x4E8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bExpandsStormShield;                               // 0x500(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHidden;                                           // 0x501(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIncludedInCategories;                             // 0x502(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoLaunch;                                       // 0x503(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDeprecated;                                       // 0x504(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortQuestMissionCreationContext> MissionCreationContexts;                           // 0x508(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FFortMissionConfigDataParams          MissionConfigMetadata;                             // 0x518(0x10)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bDisableBackendConditionEvaluation;                // 0x528(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2710[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       ClaimPriority;                                     // 0x52C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowTileMatching;                                // 0x530(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowPlayNowNavigation;                           // 0x531(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowMissionAlertMatchesBypassingTileRequirements; // 0x532(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2711[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortPriority;                                      // 0x534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2712[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQuestItemDefinition* GetDefaultObj();

	bool ShouldDisplayOverallQuestInformation();
	bool ShouldAutoLaunch();
	bool IsIncludedInCategories();
	bool IsHidden();
	bool IsDeprecated();
	float GetWeight();
	enum class EQuestVisualStyle GetVisualStyle();
	class UFortConversation* GetSelectRewardsConversation();
	TArray<struct FFortMcpQuestRewardInfo> GetSelectableRewards_BP();
	enum class EFortQuestRewardType GetRewardType();
	TArray<struct FFortItemQuantityPair> GetRewards_BP();
	struct FFortRewardInfo GetRewardInfo_BP();
	class FText GetRewardHeaderText();
	class FText GetRewardDescription();
	enum class EFortQuestType GetQuestType();
	class UFortQuestItemDefinition* GetPrerequisiteQuest();
	struct FDataTableRowHandle GetPrerequisiteObjective();
	int32 GetPartialObjectiveCompletionCount();
	TArray<struct FFortMcpQuestObjectiveInfo> GetObjectives_BP();
	int32 GetObjectiveNeededToComplete();
	class UFortConversation* GetIntroConversation();
	TArray<struct FFortHiddenRewardQuantityPair> GetHiddenRewards_BP();
	class FText GetCompletionText();
	class UFortConversation* GetClaimConversation();
	struct FDataTableRowHandle GetCategory();
	bool ExpandsStormShield();
	bool AthenaObjectiveMustBeCompletedInASingleMatch();
	bool AllowsTileMatching();
	bool AllowsPlayNowNavigation();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortQuestItemDefinitionTooltip
class UFortQuestItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortQuestItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortQuestCategory
class UFortQuestCategory : public UObject
{
public:
	class FText                                  Name;                                              // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<class UFortQuestItem*>                CurrentQuests;                                     // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bExpanded;                                         // 0x50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2715[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCategoryTableRow                 CategoryInfo;                                      // 0x58(0x28)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2716[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQuestCategory* GetDefaultObj();

	bool HasUnseenQuests();
	int32 GetUnseenQuestCount();
};

// 0x1D8 (0x200 - 0x28)
// Class FortniteGame.FortQuestManager
class UFortQuestManager : public UObject
{
public:
	UMulticastDelegateProperty_                  OnQuestsUpdated;                                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestsCompleted;                                 // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestsGranted;                                   // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestRewardClaimed;                              // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnQuestSeen;                                       // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnNoQuestRewardsToClaim;                           // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPinnedQuestsChanged;                             // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDailyQuestRerolled;                              // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnDisplayDynamicQuestUpdate;                       // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UFortQuestItem*>                CurrentQuests;                                     // 0xB8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class UFortQuestCategory*> CurrentCategorizedQuestsMap;                       // 0xC8(0x50)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestObjectiveCompletion> PendingChanges;                                    // 0x118(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2728[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UFortMcpProfileSubgame> BoundProfile;                                      // 0x150(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2729[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQuestManager* GetDefaultObj();

	bool SetQuestPinned(class UFortQuestItem* Quest, bool bEnabled);
	void SendCustomStatEvent(const struct FDataTableRowHandle& ObjectiveStat, int32 Count, bool bForceFlush);
	void RerollDailyQuest(class UFortQuestItem* QuestToDiscard);
	void MarkQuestsSeen(bool bOnlyMarkPendingSeenQuests);
	void MarkQuestSeen(class UFortQuestItem* Quest);
	bool IsQuestInProgress(class UFortQuestItemDefinition* Definition);
	bool IsObjectiveWithNameInProgress(class UFortQuestItemDefinition* Definition, class FName BackendName);
	bool IsObjectiveInProgress(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	bool IsMainQuest(class UFortQuestItem* Quest);
	bool HasUnseenQuests();
	bool HasUnsavedPrimaryMissionProgress();
	bool HasQuestBeenSeenLocally(class UFortQuestItem* Quest);
	bool HasCompletedQuest(class UFortQuestItemDefinition* Definition);
	bool HasCompletedObjectiveWithName(class UFortQuestItemDefinition* Definition, class FName BackendName);
	bool HasCompletedObjective(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GrantFirstDailyQuest();
	int32 GetUnseenQuestCount();
	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
	int32 GetRemainingDailyQuestRerolls();
	class UFortQuestItem* GetQuestWithDefinition(class UFortQuestItemDefinition* Definition);
	class UFortQuestCategory* GetQuestCategory(class UFortQuestItem* QuestItem);
	void GetPinnedQuests(TArray<class UFortQuestItem*>* OutPinnedQuestItems);
	int32 GetNumCompletedObjectives(class UFortQuestItemDefinition* Definition);
	class UFortQuestItem* GetNextUnseenQuest(enum class EFortQuestType QuestType);
	class UFortQuestItem* GetMainQuest();
	void GetCurrentQuestsCategories(TArray<class UFortQuestCategory*>* Categories);
	void GetCurrentQuests(TArray<class UFortQuestItem*>* OutCurrentQuests);
	int32 GetCurrentObjectiveCount(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GetCompletedQuests(TArray<class UFortQuestItem*>* OutCompletedQuests);
	class UFortQuestItem* GetBroadcasterQuestWithOpenWindow();
	void GetBattlePassQuestsInProgress(int32 MaxCount, class UFortItemDefinition* RequiredReward, TArray<class UFortQuestItem*>* OutQuests, bool* bAllQuestsComplete);
	void ForceTriggerQuestsUpdated();
	void ClaimSelectedQuestReward(class UFortQuestItem* Quest, int32 RewardIndex);
	void ClaimQuestReward(class UFortQuestItem* Quest);
	void ClaimNextCompletedQuestReward(enum class EFortQuestType QuestType);
	bool CanProgressQuestInCurrentZone(class UFortQuestItemDefinition* QuestItemDefinition);
};

// 0x88 (0xB0 - 0x28)
// Class FortniteGame.FortQuestObjectiveInfo
class UFortQuestObjectiveInfo : public UObject
{
public:
	class FName                                  BackendName;                                       // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveStatEvent      StatEvent;                                         // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortQuestObjectiveItemEvent      ItemEvent;                                         // 0x31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_272A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UFortItemDefinition>    ItemReference;                                     // 0x38(0x28)(BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  Description;                                       // 0x60(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                  HudShortDescription;                               // 0x78(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                            HudIcon;                                           // 0x90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AchievedCount;                                     // 0x98(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredCount;                                     // 0x9C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastNotifiedCount;                                 // 0xA0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVisible;                                          // 0xA4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bActive;                                           // 0xA5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_272B[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQuestObjectiveInfo* GetDefaultObj();

	bool IsVisibleToUser();
	bool IsInProgress();
	bool IsActive();
	bool HasCompleted();
	class UFortQuestItem* GetOwningQuest();
	void DisplayDynamicQuestUpdate();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortQuestObjectiveTooltip
class UFortQuestObjectiveTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortQuestObjectiveTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x2F0 (0x618 - 0x328)
// Class FortniteGame.FortQuickBars
class AFortQuickBars : public AActor
{
public:
	struct FQuickBar                             PrimaryQuickBar;                                   // 0x328(0x90)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FQuickBar                             PrimaryQuickBar_Previous;                          // 0x3B8(0x90)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FQuickBar                             SecondaryQuickBar;                                 // 0x448(0x90)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FQuickBar                             SecondaryQuickBar_Previous;                        // 0x4D8(0x90)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2738[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortWorldItem*>                AllCachedTraps;                                    // 0x5D0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                CachedFloorTraps;                                  // 0x5E0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                CachedWallTraps;                                   // 0x5F0(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFortWorldItem*>                CachedCeilingTraps;                                // 0x600(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2739[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortQuickBars* GetDefaultObj();

	void ServerSwapItemsInternal(enum class EFortQuickBars QuickBarA, int32 SlotIndexA, enum class EFortQuickBars QuickBarB, int32 SlotIndexB);
	void ServerRemoveItemInternal(const struct FGuid& Item, bool bFindReplacement, bool bForce);
	void ServerEnableSlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex);
	void ServerDisableSlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex);
	void ServerAddItemInternal(const struct FGuid& Item, enum class EFortQuickBars InQuickBar, int32 Slot);
	void ServerActivateSlotInternal(enum class EFortQuickBars InQuickBar, int32 Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot, bool bForceExecution);
	void OnRep_SecondaryQuickBar();
	void OnRep_PrimaryQuickBar();
	void EmptySlot(enum class EFortQuickBars InQuickBar, int32 SlotIndex);
};

// 0x10 (0x628 - 0x618)
// Class FortniteGame.FortQuickBarsAthena
class AFortQuickBarsAthena : public AFortQuickBars
{
public:
	TArray<float>                                SlotsCooldownTimes;                                // 0x618(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortQuickBarsAthena* GetDefaultObj();

};

// 0x30 (0x110 - 0xE0)
// Class FortniteGame.FortQuotaItem
class UFortQuotaItem : public UFortAccountItem
{
public:
	float                                        Current_value;                                     // 0xE0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Last_mod_time;                                     // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Units_per_minute_recharge;                         // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Max_quota;                                         // 0xFC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Recharge_delay_minutes;                            // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortQuotaItem* GetDefaultObj();

	int32 GetCurrentQuotaAmount();
};

// 0x10 (0x340 - 0x330)
// Class FortniteGame.FortQuotaItemDefinition
class UFortQuotaItemDefinition : public UFortAccountItemDefinition
{
public:
	float                                        StartingValue;                                     // 0x330(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaximumValue;                                      // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnitsPerMinuteRechargeRate;                        // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RechargeDelayMinutes;                              // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortQuotaItemDefinition* GetDefaultObj();

};

// 0x500 (0x530 - 0x30)
// Class FortniteGame.FortRarityData
class UFortRarityData : public UDataAsset
{
public:
	struct FFortRarityItemData                   RarityCollection[0xA];                             // 0x30(0x500)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortRarityData* GetDefaultObj();

	struct FFortRarityItemData BPGetRarityData(enum class EFortRarity Rarity);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortHealthRegenInterface
class IFortHealthRegenInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortHealthRegenInterface* GetDefaultObj();

	TSubclassOf<class UGameplayEffect> GetShieldRegenGameplayEffectClass();
	class UGameplayEffect* GetShieldRegenGameplayEffect();
	class UGameplayEffect* GetShieldRegenDelayGameplayEffect();
	TSubclassOf<class UGameplayEffect> GetHealthRegenGameplayEffectClass();
	class UGameplayEffect* GetHealthRegenGameplayEffect();
	class UGameplayEffect* GetHealthRegenDelayGameplayEffect();
};

// 0xD8 (0x388 - 0x2B0)
// Class FortniteGame.FortRegenHealthSet
class UFortRegenHealthSet : public UFortHealthSet
{
public:
	uint8                                        Pad_273D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayAttributeData            HealthRegenRate;                                   // 0x2B8(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealthRegenDelay;                                  // 0x2D8(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            HealthRegenThreshold;                              // 0x2F8(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldRegenRate;                                   // 0x318(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldRegenDelay;                                  // 0x338(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ShieldRegenThreshold;                              // 0x358(0x20)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	uint8                                        Pad_273E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortRegenHealthSet* GetDefaultObj();

};

// 0xE8 (0x118 - 0x30)
// Class FortniteGame.FortRegionInfo
class UFortRegionInfo : public UDataAsset
{
public:
	class FText                                  RegionName;                                        // 0x30(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RegionTags;                                        // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortRequirementsInfo                 Requirements;                                      // 0x68(0x48)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortMissionAlertRequirementsInfo> MissionAlertRequirements;                          // 0xB0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FFortTheaterMapMissionData            MissionData;                                       // 0xC0(0x30)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USlateBrushAsset>       RegionThemeIcon;                                   // 0xF0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortRegionInfo* GetDefaultObj();

};

// 0x268 (0x290 - 0x28)
// Class FortniteGame.FortRegisteredPlayerInfo
class UFortRegisteredPlayerInfo : public UObject
{
public:
	UMulticastDelegateProperty_                  OnAbilitySystemActorChangedChangedDelegate;        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x38(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PlayerName;                                        // 0x60(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FUniqueNetIdRepl                      PartyLeaderId;                                     // 0x70(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                Platform;                                          // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortTeam                         TeamAssignment;                                    // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_273F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerIndex;                                       // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInitialPlayer;                                  // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldLockProfile;                                // 0xB1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFailedToLockProfile;                              // 0xB2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2740[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGuid                                 UnregistrationSaveGUID;                            // 0xB4(0x10)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ERegisteredPlayerUnregistrationStatus UnregistrationStatus;                              // 0xC4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2741[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          UnregisterFailsafeTimerHandle;                     // 0xC8(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          PollForDedicatedServerReadyToShutdownTimerHandle;  // 0xD0(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCommonPublic*           CommonPublicProfile;                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCommonCore*             CommonCoreProfile;                                 // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileCampaign*               AccountProfile;                                    // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileWorld*                  WorldProfile;                                      // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileWorld*                  OutpostProfile;                                    // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileMetadata*               MetadataProfile;                                   // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortMcpProfileAthena*                 AthenaProfile;                                     // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class ESubGame, class UFortQuestManager*> QuestManagers;                                     // 0x110(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<enum class ESubGame, class UFortAwardManager*> AwardManagers;                                     // 0x160(0x50)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UFortCollectionBookManager*            CollectionBookManager;                             // 0x1B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortExpeditionManager*                ExpeditionManager;                                 // 0x1B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLinkedAccountManager*             LinkedAccountManager;                              // 0x1C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2742[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortHero*                             AthenaMenuHeroDef;                                 // 0x260(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDisplayManagerVariantData            CharacterCosmeticVariantData;                      // 0x268(0x18)(Transient, NativeAccessSpecifierPrivate)
	bool                                         bAthenaMenuHeroDirty;                              // 0x280(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2743[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortCustomizationAssetLoader*         CustomizationAssetLoader;                          // 0x288(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortRegisteredPlayerInfo* GetDefaultObj();

	class FString GetPlayerName();
	class UAbilitySystemComponent* GetAbilitySystemComponent();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortRegisteredPlayerInfoTooltip
class UFortRegisteredPlayerInfoTooltip : public UFortTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortRegisteredPlayerInfoTooltip* GetDefaultObj();

	bool GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x30 (0x150 - 0x120)
// Class FortniteGame.FortRejoinCheck
class UFortRejoinCheck : public URejoinCheck
{
public:
	bool                                         bAbandonAfterCheck;                                // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAttemptingAbandon;                                // 0x121(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2748[0x2E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortRejoinCheck* GetDefaultObj();

};

// 0x160 (0x488 - 0x328)
// Class FortniteGame.FortRelevancyZoneIndicator
class AFortRelevancyZoneIndicator : public AActor
{
public:
	class UStaticMeshComponent*                  RelevancyZoneMesh;                                 // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CustomDepthMesh;                                   // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RelevancyZoneToWorldScale;                         // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2749[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    MiniMapNetRelevancyOverlayMaterial;                // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MiniMapNetRelevancyCircleMaterial;                 // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              MinimapNetRelevancyOverlayMID;                     // 0x350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           MinimapNetRelevancyOverlayBrush;                   // 0x358(0x88)(Transient, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              MinimapNetRelevancyCircleMID;                      // 0x3E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           MinimapNetRelevancyCircleBrush;                    // 0x3E8(0x88)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_274A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortRelevancyZoneIndicator* GetDefaultObj();

};

// 0xF0 (0x21C0 - 0x20D0)
// Class FortniteGame.FortRemoteControlledPawnAthena
class AFortRemoteControlledPawnAthena : public AFortPlayerPawnAthena
{
public:
	bool                                         bCurrentlyDelayingLaunch;                          // 0x20D0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_274E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ServerFuseStartTime;                               // 0x20D4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTeam                         RCTeam;                                            // 0x20D8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_274F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AFortPlayerPawnAthena>  ControllingPlayerPawn;                             // 0x20DC(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AFortPlayerPawnAthena>  SpectateReturnPlayerPawn;                          // 0x20E4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2750[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortAbilitySystemComponent*           OverrideAbilitySystemComponent;                    // 0x20F0(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggeredHealthThreshold;                          // 0x20F8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2751[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortGameplayEffectContainerSpec      EffectContainerSpecToApplyOnKill;                  // 0x2100(0x80)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UFortRemoteControlPawnSet*             RemoteControlPawnSet;                              // 0x2180(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTriggeredForDestroy;                              // 0x2188(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2752[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAttributeInitializationKey       AttributeInitKey;                                  // 0x2190(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           RemoteControlledPawnDefaultCameraClass;            // 0x21A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFortCameraMode>           RemoteControlledPawnTriggeredCameraClass;          // 0x21A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ControllingPlayerEffect;                           // 0x21B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           ControllingPlayerEffectHandle;                     // 0x21B8(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortRemoteControlledPawnAthena* GetDefaultObj();

	void SetupRemoteControlPawn(class AFortPlayerControllerAthena* InFortPC, class AFortPlayerPawnAthena* InControllingPawn, enum class EFortCustomMovement CustomMovementType, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecOnKill);
	void OnTriggeredHealthThreshold(float PreviousTriggeredHealthThreshold, float CurrentTriggeredHealthThreshold);
	void OnRep_TriggeredHealthThreshold(float PreviousTriggeredHealthThreshold);
	void OnRep_OverrideAbilitySystemComponent();
	void OnRep_ControllingPlayerPawn();
	void OnDoKill();
	void OnClientSetupRemoteControlPawn();
	void OnCapsuleTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void HandleControllingPlayerOutOfHealth();
	float GetShield();
	float GetOutOfHealthExplodeDelay();
	float GetMaxShield();
	float GetMaxHealth();
	float GetLaunchDelay();
	float GetHealth();
	float GetFuseLength();
	void BeginCapsuleOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x1A0 (0x1D0 - 0x30)
// Class FortniteGame.FortRemoteControlPawnSet
class UFortRemoteControlPawnSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            FuseLength;                                        // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MouseTurnCap;                                      // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MouseTurnRate;                                     // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MouseTurnRateMax;                                  // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            ControllerTurnRate;                                // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            TouchTurnRate;                                     // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxSpeed;                                          // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            MaxAcceleration;                                   // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            UseLaunchDelay;                                    // 0x130(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LaunchDelay;                                       // 0x150(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            LaunchSpeed;                                       // 0x170(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            OutOfHealthExplodeDelay;                           // 0x190(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            PlayerCanDetonate;                                 // 0x1B0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortRemoteControlPawnSet* GetDefaultObj();

};

// 0x1B0 (0x1D8 - 0x28)
// Class FortniteGame.FortReplayContext
class UFortReplayContext : public UBlueprintContextBase
{
public:
	struct FFortReplayPlaybackState              PlaybackState;                                     // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortReplayFXState                    EffectsState;                                      // 0x40(0x14)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2754[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnReplayFXStateChange;                             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        TimeBeforeEvent;                                   // 0x68(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2755[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnPauseStateChanged;                               // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimeChanged;                               // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineChanged;                           // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayPlaybackMultiplierChanged;                 // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayHudVisibilityChanged;                      // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnToggleReplayViewSettings;                        // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnToggleReplayPlayerList;                          // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayLevelStreamingChanged;                     // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineFocusChanged;                      // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineMarkerAdded;                       // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnReplayTimelineMarkersCleared;                    // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2756[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplayContext* GetDefaultObj();

	void ToggleViewSettingsVisibility();
	void TogglePlayPause();
	void TogglePlayerListVisibility();
	void ToggleHUDVisibility();
	void TakeScreenshot();
	void SkipForward(float TimeInSeconds);
	void SkipBack(float TimeInSeconds);
	void SetTimelineInputFocus(bool bShouldHaveFocus);
	void SetHighQualityFXFlag(bool bEnabled);
	void ReplayHUDCleanup();
	void JumpToPreviousEvent();
	void JumpToNextEvent();
	void JumpToEvent(int32 EventIndex);
	void JumpReplayToTimelinePosition(float TimeRatio);
	void IncreasePlaybackMultiplier();
	class FText GetCameraNameFromType(enum class ESpectatorCameraType CamType);
	void EnableTransportNavigation();
	void DisableTransportNavigation();
	void DecreasePlaybackMultiplier();
};

// 0x58 (0x1D60 - 0x1D08)
// Class FortniteGame.FortReplaySpectator
class AFortReplaySpectator : public AFortPlayerControllerSpectating
{
public:
	TArray<float>                                PlaybackSpeedLUT;                                  // 0x1D08(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2759[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTimeOfDayManager*                 OverriddenTODManager;                              // 0x1D50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_275A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortReplaySpectator* GetDefaultObj();

	bool SetOverrideTimeOfDay(bool bOverride, float Time, bool bImmediate);
	void SetCloudAltitudes(float NewCloudAltitude);
	void OnZoomOutEnd();
	void OnZoomOutBegin();
	void OnZoomInEnd();
	void OnZoomInBegin();
	void OnShotStartGotoTimeComplete(bool bWasSuccessful);
	void OnScrubComplete(bool bWasSuccessful);
	void OnPauseStateChanged(bool bNewPauseState);
	void OnNotifyNewPlaybackMultiplier(float NewMultiplier);
};

// 0x10 (0x1D70 - 0x1D60)
// Class FortniteGame.FortReplaySpectatorAthena
class AFortReplaySpectatorAthena : public AFortReplaySpectator
{
public:
	uint8                                        Pad_275B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortReplaySpectatorAthena* GetDefaultObj();

};

// 0x1A0 (0x4A0 - 0x300)
// Class FortniteGame.FortReplicationGraph
class UFortReplicationGraph : public UReplicationGraph
{
public:
	TArray<class UClass*>                        SpatializedClasses;                                // 0x300(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        NonSpatializedChildClasses;                        // 0x310(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        AlwaysRelevantClasses;                             // 0x320(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*       AlwaysRelevantNode;                                // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortReplicationGraphNode_BroadcastSpectator* BroadcastSpectatorRelevancyNode;                   // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_275C[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerPawn*>               PlayerPawnsToVerify;                               // 0x398(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_275D[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplicationGraph* GetDefaultObj();

	void OnVehicleDestroyed(class AActor* DestroyedVehicle);
	void OnHighFrequencyPawnDestroyed(class AActor* Pawn);
};

// 0x240 (0x2E0 - 0xA0)
// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevant_ForConnection
class UFortReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	uint8                                        Pad_275E[0x228];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastPawn;                                          // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_275F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplicationGraphNode_AlwaysRelevant_ForConnection* GetDefaultObj();

};

// 0x30 (0xD0 - 0xA0)
// Class FortniteGame.FortReplicationGraphNode_PlayerStateFrequencyLimiter
class UFortReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2760[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplicationGraphNode_PlayerStateFrequencyLimiter* GetDefaultObj();

};

// 0x20 (0xC0 - 0xA0)
// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForTeam
class UFortReplicationGraphNode_AlwaysRelevantForTeam : public UReplicationGraphNode
{
public:
	class AFortTeamPrivateInfo*                  FortTeamPrivateInfo;                               // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2761[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplicationGraphNode_AlwaysRelevantForTeam* GetDefaultObj();

};

// 0x40 (0xE0 - 0xA0)
// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForSquad
class UFortReplicationGraphNode_AlwaysRelevantForSquad : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2762[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortPlayerStateAthena*>        PlayerStates;                                      // 0xA8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2763[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplicationGraphNode_AlwaysRelevantForSquad* GetDefaultObj();

};

// 0x58 (0x1A0 - 0x148)
// Class FortniteGame.FortReplicationGraphNode_BroadcastSpectator
class UFortReplicationGraphNode_BroadcastSpectator : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_2764[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortReplicationGraphNode_BroadcastSpectator* GetDefaultObj();

};

// 0x8 (0x730 - 0x728)
// Class FortniteGame.FortResourceItemDefinition
class UFortResourceItemDefinition : public UFortWorldItemDefinition
{
public:
	enum class EFortResourceType                 ResourceType;                                      // 0x728(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2765[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortResourceItemDefinition* GetDefaultObj();

};

// 0x10 (0x5A0 - 0x590)
// Class FortniteGame.FortRiftBlockerComponent
class UFortRiftBlockerComponent : public UBoxComponent
{
public:
	uint8                                        bStartActive : 1;                                  // Mask: 0x1, PropSize: 0x10x590(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2766[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortRiftBlockerComponent* GetDefaultObj();

};

// 0x3B0 (0x3D8 - 0x28)
// Class FortniteGame.FortRuntimeOptions
class UFortRuntimeOptions : public UObject
{
public:
	UMulticastDelegateProperty_                  OnHotfixApplied;                                   // 0x28(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bEnableSpectatorUpdates;                           // 0x38(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2767[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentSocialImportVersion;                        // 0x3C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSocialImport;                               // 0x40(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableStartupSocialImport;                        // 0x41(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableStartupErebusFriendImport;                  // 0x42(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableVKImport;                                   // 0x43(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2768[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SocialImportURI;                                   // 0x48(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DaysBetweenSocialImportPrompts;                    // 0x58(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SocialImportPromptsBeforeOptOut;                   // 0x5C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendImportCaptionSelection;                      // 0x60(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaDailyItemToast;                         // 0x64(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSplitWalletTextNotice;                      // 0x65(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaFeaturedItemToast;                      // 0x66(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaStarsInStoreNotification;               // 0x67(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AthenaStarterGameMode;                             // 0x68(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<class FName>                          AthenaStarterGameModeB;                            // 0x78(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         AthenaStarterFill;                                 // 0x88(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2769[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PartyRichPresenceUpdateTime;                       // 0x8C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartySuggestionUpdateTimer;                        // 0x90(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartySuggestionsToConsider;                     // 0x94(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPartySuggestions;                            // 0x98(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowLFG;                                         // 0x99(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableXboxPartySuggestionTempFix;                 // 0x9A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowPartyPresenceUpdates;                        // 0x9B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableInteractiveConsumables;                     // 0x9C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableContextHelpMenu;                            // 0x9D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableBattlePassFAQ;                              // 0x9E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaFavoriting;                           // 0x9F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaCustomPreviewActionForCosmetics;      // 0xA0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaItemRandomization;                    // 0xA1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableProfileStatTracking;                        // 0xA2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableProfileStatUI;                              // 0xA3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAthenaChallengesTabWhenOutOfSeason;           // 0xA4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoginXBLDisabled;                                 // 0xA5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoginPSNDisabled;                                 // 0xA6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoginErebusDisabled;                              // 0xA7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipInternetCheck;                                // 0xA8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHeadlessReminderEnabled;                          // 0xA9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableClientSettingsSaveToCloud;                  // 0xAA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       CloudSaveIntervalConfig;                           // 0xB0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSaveToCloudOnMapLoad;                             // 0xB8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       GiftNotificationRefreshTimer;                      // 0xC0(0x8)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableReplayBrowser;                              // 0xC8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 bShowFeaturedReplays;                              // 0xD0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	bool                                         bEnableReplayRecording;                            // 0xE0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLargeTeamReplayRecording;                   // 0xE1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHearingAccessibility;                       // 0xE2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGiftXMPPMessageSend;                       // 0xE3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableReceiveGiftXMPPMessages;                   // 0xE4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableGifting;                                   // 0xE5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableCrossPlatformGifting;                      // 0xE6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLimitGiftingToEligiblePlatforms;                  // 0xE7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GiftWaitTimeHack;                                  // 0xE8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LightswitchDownLoginDelay;                         // 0xEC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStatusButtonOnWaitingRoomScreen;              // 0xF0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAthenaShowMapMarkersInWorld;                      // 0xF1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTouchLookVelocityScaling;                  // 0xF2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisablePurchaseHistoryScreen;                     // 0xF3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchAimAssistStrengthScalar;                      // 0xF4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTouchAimAssistAutoTracking;                // 0xF8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProcessGamepadInputOnMobile;                      // 0xF9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GamepadShortThrowLookScale;                        // 0xFC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoundIndicatorsEnabledForTeammates;               // 0x100(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowEliminationDistanceOver;                       // 0x104(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTeamIndicatorsAfter;                        // 0x108(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapIndicatorTouchClearDistance;                    // 0x10C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MapIndicatorOffset;                                // 0x110(0x8)(Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaMapZoomMax;                                  // 0x118(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BacchusMapIndicatorSizeMultiplier;                 // 0x11C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaMapPanSpeedMultiplier;                       // 0x120(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaMapZoomSpeedMultiplier;                      // 0x124(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       FriendCodeShareWarningMessage;                     // 0x128(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PlatformPlayAllowedErrorMessage;                   // 0x138(0x10)(Config, NativeAccessSpecifierPublic)
	bool                                         bOnlyShareURLWithNoMessage;                        // 0x148(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExcludeURLInShareMessage;                         // 0x149(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableBacchusFriendCodeSharing;                  // 0x14A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCreateAccountOnRedirect;                      // 0x14B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_276F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BacchusFriendCodeShareURL;                         // 0x150(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                BacchusRequestInviteURL;                           // 0x160(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CreateAccountUrl;                                  // 0x170(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LinkAccountURL;                                    // 0x180(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SupportURL;                                        // 0x190(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WaitingListURL;                                    // 0x1A0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CheckStatusURL;                                    // 0x1B0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                IOSAppStoreURL;                                    // 0x1C0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScamWarningPercentChance;                          // 0x1D0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScamWarningMinimumGames;                           // 0x1D4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StwDownloadLauncherOption;                         // 0x1D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       GenericCrossplayWarningBody;                       // 0x1E8(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       OverrideDefaultBonusXpEventTitleString;            // 0x1F8(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLCrossplayWarningPostScript;                     // 0x208(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLCrossplayWarningTitle;                          // 0x218(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLDisableText;                                    // 0x228(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLPartyFinderPlatformHeaderText;                  // 0x238(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       XBLPartyFinderMcpHeaderText;                       // 0x248(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNCrossplayWarningPostScript;                     // 0x258(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNCrossplayWarningTitle;                          // 0x268(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNDisableText;                                    // 0x278(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNPartyFinderPlatformHeaderText;                  // 0x288(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionLocalizableString       PSNPartyFinderMcpHeaderText;                       // 0x298(0x10)(Config, NativeAccessSpecifierPublic)
	struct FRuntimeOptionReviewPromptCriteria    ReviewPromptCriteria;                              // 0x2A8(0x14)(Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2770[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRuntimeOptionTabStateInfo>    DisabledFrontendNavigationTabs;                    // 0x2C0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)
	float                                        PickingInteractDistance;                           // 0x2D0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingInteractHighlightDistanceScaler;            // 0x2D4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingHighlightMovementUpdateDist;                // 0x2D8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingHighlightUpdateTime;                        // 0x2DC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickingTime;                                       // 0x2E0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoOpenDoorInputMagnitude;                        // 0x2E4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoOpenDoorTraceDistance;                         // 0x2E8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutofireEnabled;                                  // 0x2EC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutofireUsesAutoaimTarget;                        // 0x2ED(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldToFireOnAutofireTarget;                       // 0x2EE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2771[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultAutofireRange;                              // 0x2F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableReplicationGraph;                          // 0x2F4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2772[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BRServerMaxTickRate;                               // 0x2F8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleTapOnEndTouchTime;                           // 0x2FC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleTapOnStartTouchTime;                         // 0x300(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoubleTapDistance;                                 // 0x304(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadius;                              // 0x308(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadiusTargeting;                     // 0x30C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TouchMoveStickRadiusScoped;                        // 0x310(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutorunLockZoneOffset;                             // 0x314(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutorunLockZoneDelay;                              // 0x318(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveOriginResetTime;                               // 0x31C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveOriginResetDistance;                           // 0x320(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveOriginFollowDistance;                          // 0x324(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableTouchLookInertia;                          // 0x328(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2773[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotateInertiaMultiplier;                           // 0x32C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInertiaMinTime;                              // 0x330(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInertiaMinLength;                            // 0x334(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotateInertiaMinMagnitude;                         // 0x338(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RotateInertiaNumAveragedTouches;                   // 0x33C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHUDLayoutTool;                              // 0x340(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHUDLayoutToolPanZoom;                       // 0x341(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2774[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EnablePlayButtonTime;                              // 0x344(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AthenaExternalRichPresenceDelayTimeSeconds;        // 0x348(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableExternalPresenceAthenaPlayersRemain;        // 0x34C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2775[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EnablePlayButtonTimePostError;                     // 0x350(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInviteUIDisabled;                                 // 0x354(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInviteEventOpened;                                // 0x355(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableBacchusLogin;                              // 0x356(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForwardNoAccountSelected;                         // 0x357(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  LoginErebusTitle;                                  // 0x358(0x18)(BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FText                                  LoginErebusTitleSpecific;                          // 0x370(0x18)(BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendSuggestions;                          // 0x388(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFilterDuplicateFriendsIntoEpicTab;                // 0x389(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendsListButton;                          // 0x38A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrioritizeMcpInviteOverConsoleInvite;             // 0x38B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowMCPFriendDataRetrieval;                      // 0x38C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceDisableCrossplatformSquadFill;               // 0x38D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequireCrossplayOptIn;                            // 0x38E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImmediatelyDisplayCrossplayOptIn_STW;             // 0x38F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bImmediatelyDisplayCrossplayOptIn_BR;              // 0x390(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowIconForSamePlatformPlayers;                   // 0x391(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableChatWidget;                                 // 0x392(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSupportCenter;                              // 0x393(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPartyInProgress;                                  // 0x394(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAccountBoosts;                                // 0x395(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCustomerSupport;                              // 0x396(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableGlobalChat;                                 // 0x397(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEULA;                                       // 0x398(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEndOfZoneCinematic;                         // 0x399(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableOnboardingCinematics;                       // 0x39A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowFounderBannerIcons;                           // 0x39B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCurrentRegionInLobby;                         // 0x39C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFoundersDailyRewards;                       // 0x39D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTwitchIntegration;                          // 0x39E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableMatchmakingRegionSetting;                   // 0x39F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLanguageSetting;                            // 0x3A0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendCodeSetting;                          // 0x3A1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEarlyAccessLoadingScreenBanner;             // 0x3A2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShopPurchaseConfirmation;                         // 0x3A3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShopPurchaseConfirmationJapanPS4;                 // 0x3A4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaHarvestingToolsInSTW;                 // 0x3A5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAthenaDancesInSTW;                          // 0x3A6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCosmeticLockerInSTW;                        // 0x3A7(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCosmeticItemShopInSTW;                      // 0x3A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSTWLootDrops;                               // 0x3A9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSTWContainerItemCacheDrops;                 // 0x3AA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSTWEnemyItemCacheDrops;                     // 0x3AB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipTrailerMovie;                                 // 0x3AC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowXboxStwAccessDuringLiveStoreOutage;          // 0x3AD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowReplayTrailedButton_Athena;                   // 0x3AE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowReplayTrailerButton_Campaign;                 // 0x3AF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAlterationModification;                     // 0x3B0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableSchematicRarityUpgrade;                     // 0x3B1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableExternalRichPresence;                       // 0x3B2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPrivacySettings;                              // 0x3B3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableServerScoreboardLog;                        // 0x3B4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableVideoOptions;                              // 0x3B5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnablePlayerReportingFlow;                        // 0x3B6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceGamepadPlaytest;                             // 0x3B7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewFireModeSelection;                       // 0x3B8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFriendLink;                                 // 0x3B9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2776[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FriendLinkURL;                                     // 0x3C0(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HotfixVersionId;                                   // 0x3D0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2777[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortRuntimeOptions* GetDefaultObj();

	void SetEnableMainMenuSocialButton(bool NewValue);
	void OnHotfixApplied__DelegateSignature();
	bool IsPartyInProgressEnabled();
	bool IsInviteUIDisabled();
	bool IsGiftingDisabled();
	bool GetShowReplayTrailerButton_Campaign();
	bool GetShowReplayTrailerButton_Athena();
	class UFortRuntimeOptions* GetRuntimeOptions();
	class FText GetOverrideBonusEventXpTitleText();
	bool GetIsPlayerReportingFlowEnabled();
	bool GetIsFriendLinkEnabled();
	class FString GetGameVersion();
	bool GetEnableXboxPartySuggestionTempFix();
	bool GetEnableSplitWalletTextNotice();
	bool GetEnableMainMenuSocialButton();
	bool GetEnableLFG();
	bool GetDisablePurchaseHistoryScreen();
	TArray<struct FRuntimeOptionTabStateInfo> GetDisabledFrontendNavigationTabs();
};

// 0x1C8 (0x4F0 - 0x328)
// Class FortniteGame.FortSafeZoneIndicator
class AFortSafeZoneIndicator : public AActor
{
public:
	class UFortMiniMapComponent*                 MinimapComp;                                       // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastRadius;                                        // 0x330(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextRadius;                                        // 0x334(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NextNextRadius;                                    // 0x338(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                LastCenter;                                        // 0x33C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                NextCenter;                                        // 0x348(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize100                NextNextCenter;                                    // 0x354(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SafeZoneStartShrinkTime;                           // 0x360(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SafeZoneFinishShrinkTime;                          // 0x364(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPaused;                                           // 0x368(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPausedForPreview;                                 // 0x369(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPausedForPreview_Previous;                        // 0x36A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2778[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x378(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           FarOffMiniMapIconBrush;                            // 0x400(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        SafeZoneToWorldScale;                              // 0x488(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x48C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  SafeZoneMesh;                                      // 0x490(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MovementAudioCrossfadeCurve;                       // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           MovementAudioPitchModCurve;                        // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ClockTickingAudioVolumeCurve;                      // 0x4A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ClockTickingAudioPitchCurve;                       // 0x4B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialParameterCollection*          MaterialCollection;                                // 0x4B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SafeZoneLocName;                                   // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SafeZoneScaleName;                                 // 0x4C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SafeZoneWorldScale;                                // 0x4D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ViewTargetLocation;                                // 0x4D4(0xC)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsViewTargetPawnOutside;                          // 0x4E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2779[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortSafeZoneIndicator* GetDefaultObj();

	void SetSafeZoneRadiusAndCenter(float InRadius, const struct FVector& InLocation);
	void OnSafeZoneStateChange(enum class EFortSafeZoneState NewState, bool bInitial);
	void OnBeginStartingStateEffectsEvent();
	void OnBeginStartingStateEffects();
	float GetTimeSinceSafeZonesStart();
	float GetSafeZoneShrinkSpeed();
	float GetSafeZoneRadius();
	struct FVector GetSafeZoneCenter();
	void GetMovementAudioCurveValues(float Time, float* CrossfadeValue, float* PitchModValue);
	void GetClockTickingAudioCurveValues(float Time, float* VolumeModValue, float* PitchModValue);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortScalableFloatUtils
class UFortScalableFloatUtils : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortScalableFloatUtils* GetDefaultObj();

	class FString ToSimpleString(struct FScalableFloat& Input);
	void SetValue(struct FScalableFloat& Input, float NewValue);
	void SetScalingValue(struct FScalableFloat& Input, float InCoeffecient, class FName InRowName, class UCurveTable* InTable);
	bool IsStatic(struct FScalableFloat& Input);
	float GetValueAtLevel(struct FScalableFloat& Input, float Level);
	float GetValue(struct FScalableFloat& Input);
};

// 0x60 (0x160 - 0x100)
// Class FortniteGame.FortSchematicItem
class UFortSchematicItem : public UFortAlterableItem
{
public:
	bool                                         bGrantedByAbility;                                 // 0x100(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_277E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RequiredTeamLevel;                                 // 0x104(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_277F[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSchematicItem* GetDefaultObj();

	struct FRecipe GetSchematicRecipe();
	int32 GetSchematicQuantityProduced();
	int32 GetRequiredTeamLevelToCraft();
};

// 0x60 (0x390 - 0x330)
// Class FortniteGame.FortSchematicItemDefinition
class UFortSchematicItemDefinition : public UFortAlterableItemDefinition
{
public:
	struct FDataTableRowHandle                   CraftingRecipe;                                    // 0x330(0x10)(Edit, NoDestructor, AssetRegistrySearchable, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class USoundBase>             CraftingSuccessSound;                              // 0x340(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableCategoryHandle              LootLevelData;                                     // 0x368(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  CraftingTimeRowName;                               // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSchematicDisplayName;                          // 0x388(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2782[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSchematicItemDefinition* GetDefaultObj();

	class UFortWorldItemDefinition* GetResultWorldItemDefinition();
	struct FRecipe GetRecipe();
	int32 GetQuantityProduced();
	float GetCraftingTimeForCharacter(int32 Level, class AFortPlayerPawn* FortPawn);
	float GetCraftingTime(int32 Level);
	class USoundBase* GetCraftingSuccessSound();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortSchematicTooltip
class UFortSchematicTooltip : public UFortAccountItemTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortSchematicTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x1410 (0x1440 - 0x30)
// Class FortniteGame.FortScoreStylingData
class UFortScoreStylingData : public UDataAsset
{
public:
	struct FFortScoreStylingInfo                 ScoreStyles[0x6];                                  // 0x30(0x1410)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortScoreStylingData* GetDefaultObj();

	bool GetScoreStylingData(enum class EFortUIScoreType Rarity, struct FFortScoreStylingInfo* ScoreStylingInfo);
};

// 0x60 (0x388 - 0x328)
// Class FortniteGame.FortScriptedAction
class AFortScriptedAction : public AActor
{
public:
	uint8                                        Pad_2789[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortScriptedActionEnvironment    ActionEnvironment;                                 // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_278A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortClientEventName                  ClientEventTrigger;                                // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        ActionPriority;                                    // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_278B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortScriptedActionParams             CachedParams;                                      // 0x350(0x30)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsActive;                                         // 0x380(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortScriptedAction* GetDefaultObj();

	void GetParams(struct FFortScriptedActionParams* Params);
	void Execute(struct FFortScriptedActionParams& Params);
	void CompleteAction(bool bRegisterActionAgain);
	bool CanExecute(struct FFortScriptedActionParams& Params);
	void CancelAction(bool bRegisterActionAgain);
};

// 0x50 (0x378 - 0x328)
// Class FortniteGame.FortScriptedActionManager
class AFortScriptedActionManager : public AActor
{
public:
	uint8                                        Pad_278D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortScriptedAction*>           ActiveScriptedActions;                             // 0x330(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAvailableScriptedAction>  AvailableScriptedActions;                          // 0x340(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortAvailableScriptedAction>  PendingAvailableScriptedActions;                   // 0x350(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortClientEventName>          PendingClientEvents;                               // 0x360(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsProcessingClientEvent;                          // 0x370(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortScriptedActionManager* GetDefaultObj();

	void HandleClientEvent_Undefined(class UObject* EventSource, class UObject* EventFocus, struct FFortClientEvent& ClientEvent);
};

// 0x100 (0x128 - 0x28)
// Class FortniteGame.FortSearchPass
class UFortSearchPass : public UObject
{
public:
	uint8                                        Pad_278F[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortSessionHelper*                    SessionHelper;                                     // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2790[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortSearchPassParams                 CurrentSearchParams;                               // 0x90(0x28)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FFortSearchPassState                  CurrentSearchPassState;                            // 0xB8(0x18)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2791[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSearchPass* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class FortniteGame.FortSeasonalEventManager
class UFortSeasonalEventManager : public UObject
{
public:
	uint8                                        Pad_2794[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnActiveEventFlagsChanged;                         // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2795[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSeasonalEventManager* GetDefaultObj();

	bool IsEventFlagActive(const class FString& QueriedEventFlagName);
	struct FFortClientEventsState GetEventState();
	int32 GetBRXPBonusPoints(struct FFortClientEventsState& EventStruct);
};

// 0x128 (0x150 - 0x28)
// Class FortniteGame.FortSessionHelper
class UFortSessionHelper : public UObject
{
public:
	class UClass*                                BeaconClientClass;                                 // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortPartyBeaconClient*                PartyBeaconClient;                                 // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2796[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentSessionName;                                // 0x110(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPartyReservationResult           LastBeaconResponse;                                // 0x118(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortSessionHelperJoinState       CurrentJoinState;                                  // 0x119(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortSessionHelperJoinResult      CurrentJoinResult;                                 // 0x11A(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2797[0x35];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSessionHelper* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortNonPrimaryMissionList
class UFortNonPrimaryMissionList : public UObject
{
public:
	TArray<struct FFortNonPrimaryMission>        NonPrimaryMissionList;                             // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortNonPrimaryMissionList* GetDefaultObj();

};

// 0x170 (0x198 - 0x28)
// Class FortniteGame.FortSharedMissionLists
class UFortSharedMissionLists : public UObject
{
public:
	TArray<struct FFortNonPrimaryMission>        CombinedNonPrimaryMissionList;                     // 0x28(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortNonPrimaryMission>        NonPrimaryMissionList;                             // 0x38(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UFortNonPrimaryMissionList>> AdditionalNonPrimaryMissionLists;                  // 0x48(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FFortMissionDistributionCategory> NonPrimaryMissionDistributionCategories;           // 0x58(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     PrimaryMissionTagQuery;                            // 0x68(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     TheaterTagQuery;                                   // 0xB0(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     RegionTagQuery;                                    // 0xF8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortGlobalMission>            SharedMissionList;                                 // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestDrivenMission>       QuestDrivenMissionList;                            // 0x150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortQuestDrivenMission>       AvailableQuestDrivenMissionList;                   // 0x160(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AFortPlayerController*>         PendingPIEPlayers;                                 // 0x170(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2798[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSharedMissionLists* GetDefaultObj();

	void UpdatePIEPlayers();
};

// 0xC0 (0x1B8 - 0xF8)
// Class FortniteGame.FortSignificanceManager
class UFortSignificanceManager : public USignificanceManager
{
public:
	uint8                                        Pad_2799[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSignificanceManager* GetDefaultObj();

};

// 0x120 (0x228 - 0x108)
// Class FortniteGame.FortSimpleMiniMapIndicator
class UFortSimpleMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct FSlateBrush                           NormalBrush;                                       // 0x108(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           AboveBelowBrush;                                   // 0x190(0x88)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_279A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSimpleMiniMapIndicator* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortSkyDiveContrailPreviewActor
class AFortSkyDiveContrailPreviewActor : public AActor
{
public:
	uint8                                        Pad_279B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortSkyDiveContrailPreviewActor* GetDefaultObj();

	void PreviewContrail(class UAthenaSkyDiveContrailItemDefinition* Contrail);
};

// 0x18 (0x340 - 0x328)
// Class FortniteGame.FortSkydivingShadowProxy
class AFortSkydivingShadowProxy : public AActor
{
public:
	float                                        SkydivingHeightThreshold;                          // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydivingHeightCheckInterval;                      // 0x32C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 ViewingPlayerController;                           // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_279C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortSkydivingShadowProxy* GetDefaultObj();

	void ShowShadowProxy();
	void HideShadowProxy();
	void CheckHeight();
};

// 0xA0 (0xC8 - 0x28)
// Class FortniteGame.FortSocialItem
class UFortSocialItem : public UObject
{
public:
	enum class EFortSocialItemType               SocialItemType;                                    // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortSocialItemHeaderType         HeaderType;                                        // 0x29(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_279D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  HeaderName;                                        // 0x30(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPresenceUpdated;                                 // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnInviteJoinUpdated;                               // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_279E[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSocialItem* GetDefaultObj();

	bool IsLFG();
	bool IsInUnjoinableMatch();
	struct FUniqueNetIdRepl GetUniquePlayerId();
	enum class ESubGame GetSubGame();
	class FText GetSocialName();
	enum class EFortSocialItemPresenceStatus GetPresenceStatus();
	int32 GetPlayersAlive();
	int32 GetPartySize();
	class FText GetLocation();
	struct FDateTime GetLFGTime();
	class FText GetDisplayName();
	class FString GetCurrentPlatform();
};

// 0x18 (0x420 - 0x408)
// Class FortniteGame.FortSoundCameraLensEffect
class AFortSoundCameraLensEffect : public AFortEmitterCameraLensEffectDirectional
{
public:
	enum class EFortSoundIndicatorTypes          IndicatorType;                                     // 0x408(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_279F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SnapToSections;                                    // 0x40C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAudibleDistanceOnSpawn;                         // 0x410(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToSoundOnSpawn;                            // 0x414(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                InstigatingActor;                                  // 0x418(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortSoundCameraLensEffect* GetDefaultObj();

	void SetType(enum class EFortSoundIndicatorTypes NewType);
	void SetStrengthCurve(struct FRuntimeFloatCurve& Curve);
	void SetInstigatingActor(class AActor* NewInstigator);
	void SetIcon(class UTexture* NewIcon);
	void OnEffectTypeChanged();
	void OnEffectDeactivated();
	void OnEffectActivated();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSpawnableByPlacementSystemInterface
class IFortSpawnableByPlacementSystemInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortSpawnableByPlacementSystemInterface* GetDefaultObj();

	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
};

// 0xC0 (0xF0 - 0x30)
// Class FortniteGame.FortSpawnActorInfo
class UFortSpawnActorInfo : public UPrimaryDataAsset
{
public:
	class FName                                  SpawnActorID;                                      // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortLevelSpawnActor>      SpawnActorClass;                                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionProfileName                 CollisionProfile;                                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFortSpawnActorTime               SpawnTiming;                                       // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        MinActorsToSpawn;                                  // 0x50(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxActorsToSpawn;                                  // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinSpawnHeight;                                    // 0xA0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxSpawnHeight;                                    // 0xC8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortSpawnActorInfo* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSpawnContextObjectInterface
class IFortSpawnContextObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortSpawnContextObjectInterface* GetDefaultObj();

};

// 0x20 (0x3F0 - 0x3D0)
// Class FortniteGame.FortSpawnedScoreActor
class AFortSpawnedScoreActor : public AFortLevelSpawnActor
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x3D0(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortSpawnedScoreActor* GetDefaultObj();

	void OnScoreActorCollected(class APlayerState* PlayerState);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortSpawnPointsPercentageCurveSequence
class UFortSpawnPointsPercentageCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>           SpawnPointsPercentageCurves;                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EFortIntensityCurveSequenceType   SequenceType;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSpawnPointsPercentageCurveSequence* GetDefaultObj();

};

// 0xD0 (0x3F8 - 0x328)
// Class FortniteGame.FortSpecialActorReplicationInfo
class AFortSpecialActorReplicationInfo : public AInfo
{
public:
	struct FSpecialActorRepDataArray             SpecialActorRepList;                               // 0x328(0xC0)(Net, NativeAccessSpecifierPublic)
	TArray<struct FSpecialActorStatData>         SpecialActorStats;                                 // 0x3E8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortSpecialActorReplicationInfo* GetDefaultObj();

};

// 0x150 (0xA60 - 0x910)
// Class FortniteGame.FortSpectatorCamComp_ThirdPerson
class UFortSpectatorCamComp_ThirdPerson : public UFortSpectatorCameraComponent
{
public:
	struct FFortChaseCameraHelper                ChaseImplementation;                               // 0x910(0x150)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortSpectatorCamComp_ThirdPerson* GetDefaultObj();

	void UseCustomRotation(bool bUseCustomRotation);
	void SetNormalizedDistance(float NormalizedDist, bool bImmediate);
	void SetLazyAutoFollow(bool bNewLazyAutoFollow);
	void SetAutoFollow(bool bNewAutoFollow);
	float GetNormalizedDistance();
};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.FortSpline
class UFortSpline : public UObject
{
public:
	bool                                         bConstantVelocity;                                 // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortCatmullRomSpline                 Spline;                                            // 0x30(0x20)(NativeAccessSpecifierPrivate)
	struct FInterpCurveFloat                     SplineLookupTable;                                 // 0x50(0x18)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortSpline* GetDefaultObj();

	void SetupSpline(const TArray<struct FVector>& ControlPoints, float InDuration);
	void SetDuration(float InDuration);
	bool IsValid();
	float GetVelocityCorrectedTime(float Time);
	struct FVector GetTangentFromTime(float Time);
	struct FVector GetStartPoint();
	float GetSplineLengthAtTime(float Time, float StepSize);
	float GetSplineLength(float StepSize);
	struct FVector GetPositionFromTime(float Time);
	struct FVector GetNormalFromTime(float Time);
	struct FVector GetEndPoint();
	float GetDuration();
	struct FVector GetBinormalFromTime(float Time);
	void EnableConstantVelocity(bool ConstVelEnabled);
	void DrawDebugSpline(class UObject* WorldContextObject, int32 Steps, float LifeTime, float Thickness, bool bPersistent, bool bJustDrawSpline, float BasisLength);
	void ClearSpline();
	void AddControlPoint(struct FVector& Point, int32 Index);
};

// 0xA0 (0x3C8 - 0x328)
// Class FortniteGame.FortSplineAudioActor
class AFortSplineAudioActor : public AActor
{
public:
	uint8                                        Pad_27A7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateFrequencyInaudible;                          // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateFrequencyAudible;                            // 0x334(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAudibleRange;                                   // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A8[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumSamplePoints;                                   // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       SamplePoints;                                      // 0x360(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_27AA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundBase*                            ClosestPointSound;                                 // 0x390(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            NextClosestPointSound;                             // 0x398(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            MidPointSound;                                     // 0x3A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                      AudioSpline;                                       // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioAtClosestPoint;                               // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioAtNextClosestPoint;                           // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAudioComponent*                       AudioAtMidPoint;                                   // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortSplineAudioActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortSpottableActorInterface
class IFortSpottableActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortSpottableActorInterface* GetDefaultObj();

};

// 0x8 (0x90 - 0x88)
// Class FortniteGame.FortSpottedActorIndicator
class UFortSpottedActorIndicator : public UFortSlateHUDIndicator
{
public:
	class AFortPlayerController*                 OwnerPC;                                           // 0x88(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortSpottedActorIndicator* GetDefaultObj();

};

// 0x38 (0xB98 - 0xB60)
// Class FortniteGame.FortSprayDecalInstance
class AFortSprayDecalInstance : public ABuildingSMActor
{
public:
	struct FFortSprayDecalRepPayload             SprayInfo;                                         // 0xB60(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        bDestroyOnNearbyDestruction : 1;                   // Mask: 0x1, PropSize: 0x10xB80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyOnNearbyDamageTaken : 1;                   // Mask: 0x2, PropSize: 0x10xB80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyOnNearbyBounce : 1;                        // Mask: 0x4, PropSize: 0x10xB80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_219 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      SprayMIDsThatCanBounce;                            // 0xB88(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortSprayDecalInstance* GetDefaultObj();

	void StartSprayFadeOutDueToNewPlacement();
	void SetSprayParameters(class AFortPlayerController* SpawningPC, class UAthenaSprayItemDefinition* InSprayAsset);
	void OnSprayInfoReady();
	void OnRep_SprayInfo();
	void OnBounceOccurs();
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortSprayPreviewActor
class AFortSprayPreviewActor : public AActor
{
public:
	uint8                                        Pad_27AC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortSprayPreviewActor* GetDefaultObj();

	void PreviewSpray(class UAthenaSprayItemDefinition* Spray);
};

// 0x60 (0x88 - 0x28)
// Class FortniteGame.FortStatEventManager
class UFortStatEventManager : public UObject
{
public:
	class AFortPlayerController*                 FPC;                                               // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEvent>                StatEvents;                                        // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEventSequence>        StatEventSequences;                                // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  PinnedSchematicNotification;                       // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          PinnedCanCraftStats;                               // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          PinnedCanNotCraftStats;                            // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortStatEventSequence>        PinnedSchematicSequences;                          // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortStatEventManager* GetDefaultObj();

};

// 0x20 (0x140 - 0x120)
// Class FortniteGame.FortStaticMeshLinkComponent
class UFortStaticMeshLinkComponent : public UNavRelevantComponent
{
public:
	uint8                                        Pad_27AD[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortStaticMeshLinkComponent* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortStaticMeshUserData
class UFortStaticMeshUserData : public UAssetUserData
{
public:
	TArray<struct FTransformableNavLinkClass>    NavLinks;                                          // 0x28(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortStaticMeshUserData* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class FortniteGame.FortStaticReplicatedActor
class AFortStaticReplicatedActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AFortStaticReplicatedActor* GetDefaultObj();

};

// 0x1B0 (0x1E0 - 0x30)
// Class FortniteGame.FortSupplyDropInfo
class UFortSupplyDropInfo : public UPrimaryDataAsset
{
public:
	class FName                                  SupplyDropID;                                      // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AFortAthenaSupplyDrop>     SupplyDropClass;                                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESupplyDropSpawnType              SpawnType;                                         // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortSupplyDropGamePhaseData>  GamePhaseData;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class ESupplyDropItemTrackType          ItemTrackType;                                     // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27AF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ItemTrackIDs;                                      // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bShouldMaintainItemCount;                          // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        NumDeliveryItemsToSpawn;                           // 0x78(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinInitialDeliveryDelayTime;                       // 0xA0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxInitialDeliveryDelayTime;                       // 0xC8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTimeBetweenDrops;                               // 0xF0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTimeBetweenDrops;                               // 0x118(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinRespawnTime;                                    // 0x140(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxRespawnTime;                                    // 0x168(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MinTraceHeight;                                    // 0x190(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScalableFloat                        MaxTraceHeight;                                    // 0x1B8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortSupplyDropInfo* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class FortniteGame.FortSurvivorData
class UFortSurvivorData : public UDataAsset
{
public:
	class UDataTable*                            SurvivorFemaleFirstNameData;                       // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SurvivorMaleFirstNameData;                         // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SurvivorFemaleLastNameData;                        // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SurvivorMaleLastNameData;                          // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B1[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortSurvivorData* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTagUIDataLookupTable
class UFortTagUIDataLookupTable : public UDataAsset
{
public:
	TArray<struct FFortTagUIData>                TagUIDataList;                                     // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B2[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTagUIDataLookupTable* GetDefaultObj();

};

// 0x3A8 (0x3D0 - 0x28)
// Class FortniteGame.FortTaggedActorsManager
class UFortTaggedActorsManager : public UObject
{
public:
	uint8                                        Pad_27B3[0x3A8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTaggedActorsManager* GetDefaultObj();

};

// 0x30 (0x6C0 - 0x690)
// Class FortniteGame.FortTakerRift
class AFortTakerRift : public ABuildingRift
{
public:
	TSoftObjectPtr<class UParticleSystem>        TakerRiftParticle;                                 // 0x690(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              TakerRiftParticleComponent;                        // 0x6B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortTakerRift* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTargetSelectionInterface
class IFortTargetSelectionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortTargetSelectionInterface* GetDefaultObj();

	struct FTransform GetTargetingTransform(enum class EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTeamActorInterface
class IFortTeamActorInterface : public IGenericTeamAgentInterface
{
public:

	static class UClass* StaticClass();
	static class IFortTeamActorInterface* GetDefaultObj();

	enum class EFortTeam GetTeam();
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortTeamIdentification
class UFortTeamIdentification : public UObject
{
public:
	struct FColor                                HUDColor;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27B5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomAccessoryColorSwatch*           CharacterAccessoryColorSwatch;                     // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortTeamIdentification* GetDefaultObj();

};

// 0x100 (0x428 - 0x328)
// Class FortniteGame.FortTeamInfo
class AFortTeamInfo : public AInfo
{
public:
	uint8                                        Pad_27B9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AController*>                   TeamMembers;                                       // 0x330(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	enum class EFortTeam                         Team;                                              // 0x340(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ChatRoomId;                                        // 0x348(0x10)(Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamSpottedActorInfoArray            TeamSpottedActors;                                 // 0x358(0xC8)(Net, Protected, NativeAccessSpecifierProtected)
	class AFortTeamPrivateInfo*                  PrivateInfo;                                       // 0x420(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortTeamInfo* GetDefaultObj();

	void OnSpottedActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	int32 GetTeamLevel();
	int32 GetTeamExperience();
};

// 0x10 (0x438 - 0x428)
// Class FortniteGame.FortTeamInfoAthena
class AFortTeamInfoAthena : public AFortTeamInfo
{
public:
	uint8                                        Pad_27BB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortTeamInfoAthena* GetDefaultObj();

};

// 0x1F8 (0x620 - 0x428)
// Class FortniteGame.FortTeamInfoPvPBaseDestruction
class AFortTeamInfoPvPBaseDestruction : public AFortTeamInfo
{
public:
	class AFortPvPBaseCornerstone*               TeamCornerstone;                                   // 0x428(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTeamStrategicBuildingEntryArray      TeamStrategicBuildingActors;                       // 0x430(0xC0)(Net, Transient, Protected, NativeAccessSpecifierProtected)
	struct FTeamFOBCoreBuildingEntryArray        TeamFOBCoreBuildingActors;                         // 0x4F0(0xC0)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        bAllFOBCoresLoaded : 1;                            // Mask: 0x1, PropSize: 0x10x5B0(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21A : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27BD[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StrategicBuildingHandleGenerator;                  // 0x5D0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TeamLevel;                                         // 0x5D4(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnHandleTeamLevelChanged;                          // 0x5D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int32                                        TeamExperience;                                    // 0x5E8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnHandleTeamXPChanged;                             // 0x5F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoresLoaded;                                  // 0x600(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                  OnFOBCoresDestroyed;                               // 0x610(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortTeamInfoPvPBaseDestruction* GetDefaultObj();

	void OnRep_TeamLevel();
	void OnRep_TeamFOBCoreBuildingActors();
	void OnRep_TeamExperience();
	void OnRep_AllFOBCoresLoaded();
	void GetTeamFOBCoresAndSpawnTags(TArray<class ABuildingFOBCoreActor*>* OutFOBCores, TArray<struct FGameplayTagContainer>* OutFOBSpawnTags);
	void GetTeamFOBCores(TArray<class ABuildingFOBCoreActor*>* OutFOBCores);
	class AFortPvPBaseCornerstone* GetTeamCornerstone();
	class AStrategicBuildingActor* GetStrategicBuildingActor(struct FTeamStrategicBuildingHandle& Handle);
};

// 0x1E8 (0x510 - 0x328)
// Class FortniteGame.FortTeamPrivateInfo
class AFortTeamPrivateInfo : public AInfo
{
public:
	class AFortTeamInfo*                         TeamInfo;                                          // 0x328(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPrivateTeamDataArray                 RepData;                                           // 0x330(0x118)(Net, Protected, NativeAccessSpecifierProtected)
	struct FLatentRepTeamDataArray               LatentTeamRepData;                                 // 0x448(0xC8)(Net, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortTeamPrivateInfo* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortTestControllerBase
class UFortTestControllerBase : public UGauntletTestController
{
public:
	uint8                                        Pad_27BF[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerBase* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class FortniteGame.FortTestControllerAthenaNoMcpTest
class UFortTestControllerAthenaNoMcpTest : public UFortTestControllerBase
{
public:
	uint8                                        Pad_27C0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerAthenaNoMcpTest* GetDefaultObj();

};

// 0x78 (0xC8 - 0x50)
// Class FortniteGame.FortTestControllerAutoTest
class UFortTestControllerAutoTest : public UFortTestControllerBase
{
public:
	uint8                                        Pad_27C1[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortAutoTestState                CurrentState;                                      // 0xC0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27C2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerAutoTest* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class FortniteGame.FortTestControllerBootTest
class UFortTestControllerBootTest : public UGauntletTestControllerBootTest
{
public:

	static class UClass* StaticClass();
	static class UFortTestControllerBootTest* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class FortniteGame.FortTestControllerCosmeticAudit
class UFortTestControllerCosmeticAudit : public UFortTestControllerBase
{
public:
	uint8                                        Pad_27C3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerCosmeticAudit* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class FortniteGame.FortTestControllerForceOOM
class UFortTestControllerForceOOM : public UFortTestControllerBase
{
public:

	static class UClass* StaticClass();
	static class UFortTestControllerForceOOM* GetDefaultObj();

};

// 0x88 (0xD8 - 0x50)
// Class FortniteGame.FortTestControllerMemoryReport
class UFortTestControllerMemoryReport : public UFortTestControllerBase
{
public:
	uint8                                        Pad_27C4[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerMemoryReport* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class FortniteGame.FortTestControllerPerfReplayTest
class UFortTestControllerPerfReplayTest : public UGauntletTestController
{
public:
	uint8                                        Pad_27C5[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerPerfReplayTest* GetDefaultObj();

};

// 0x50 (0xA0 - 0x50)
// Class FortniteGame.FortTestControllerProfileGo
class UFortTestControllerProfileGo : public UFortTestControllerBase
{
public:
	uint8                                        Pad_27C6[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerProfileGo* GetDefaultObj();

};

// 0x160 (0x1B0 - 0x50)
// Class FortniteGame.FortTestControllerReplaySmoke
class UFortTestControllerReplaySmoke : public UFortTestControllerBase
{
public:
	uint8                                        Pad_27C7[0x160];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTestControllerReplaySmoke* GetDefaultObj();

};

// 0x0 (0x8C0 - 0x8C0)
// Class FortniteGame.FortTheaterCamera
class AFortTheaterCamera : public AFortCameraBase
{
public:

	static class UClass* StaticClass();
	static class AFortTheaterCamera* GetDefaultObj();

	void SetTileFocus(class AFortTheaterMapTile* TargetTile);
	struct FVector LimitToTheater(struct FVector& DesiredPosition);
};

// 0x680 (0x6B0 - 0x30)
// Class FortniteGame.FortTheaterInfo
class UFortTheaterInfo : public UDataAsset
{
public:
	class FString                                UniqueId;                                          // 0x30(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SaveVersion;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortTheaterMapData                   TheaterData;                                       // 0x48(0x530)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortTheaterMapMissionData            Missions;                                          // 0x578(0x30)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortTheaterMapMissionAlertData       MissionAlerts;                                     // 0x5A8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bForceIncludeInCookIfReferenced;                   // 0x5C8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortZoneTheme>            SelectedZoneTheme;                                 // 0x5D0(0x8)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortRegionInfo*                       SelectedZoneRegion;                                // 0x5D8(0x8)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortTheaterMapTileType           SelectedTileType;                                  // 0x5E0(0x1)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SelectedTileTags;                                  // 0x5E8(0x20)(Edit, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FFortRequirementsInfo                 SelectedTileRequirements;                          // 0x608(0x48)(Edit, Transient, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortLinkedQuest>              SelectedLinkedQuests;                              // 0x650(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterMissionWeight>     SelectedMissionWeightOverrides;                    // 0x660(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterDifficultyWeight>  SelectedDifficultyWeightOverrides;                 // 0x670(0x10)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanSelectedTileHaveMissionAlert;                  // 0x680(0x1)(Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortEditorTheaterMapRegionColor> RegionColors;                                      // 0x688(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterTileEditorData>    EditorTiles;                                       // 0x698(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        TheaterWidth;                                      // 0x6A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TheaterHeight;                                     // 0x6AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortTheaterInfo* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTheaterList
class UFortTheaterList : public UPrimaryDataAsset
{
public:
	TArray<TSoftObjectPtr<class UFortTheaterInfo>> ActiveTheatersList;                                // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortTheaterList* GetDefaultObj();

};

// 0x290 (0x5C0 - 0x330)
// Class FortniteGame.FortTheaterMapTile
class AFortTheaterMapTile : public AFortClientOnlyActor
{
public:
	bool                                         bFocused;                                          // 0x330(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHostSelected;                                     // 0x331(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGoToPromptEnabled;                                // 0x332(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27CD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortHexMapCoord                      MapCoord;                                          // 0x334(0xC)(NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bHasFinishedLoading;                               // 0x340(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27CE[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortTheaterMapTileType           TileType;                                          // 0x350(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UFortZoneTheme>            ZoneThemeClass;                                    // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TileIndex;                                         // 0x360(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RegionIndex;                                       // 0x364(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SelectionOffset;                                   // 0x368(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FocusOffset;                                       // 0x374(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelectionInterpSpeed;                              // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NormalBrightness;                                  // 0x384(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LockedBrightness;                                  // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FocusedBrightness;                                 // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelectedBrightnessRange;                           // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SelectedPulseSpeed;                                // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableBrightnessCode;                             // 0x398(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StaticMeshMaterialID;                              // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialLocation;                                   // 0x3A0(0xC)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortAvailableMissionData             MissionData;                                       // 0x3B0(0xA8)(Protected, NativeAccessSpecifierProtected)
	struct FFortAvailableMissionData             LastValidMissionData;                              // 0x458(0xA8)(Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ZoneDifficultyInfo;                                // 0x500(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortAvailableMissionAlertData        MissionAlertData;                                  // 0x510(0x98)(Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x5A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      AdjacencyMIDs;                                     // 0x5B0(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortTheaterMapTile* GetDefaultObj();

	void OnTileClicked(class AActor* ClickedActor, const struct FKey& ButtonReleased);
	void OnSelectWrapper(bool bIsGameSessionOwner);
	void OnMouseOverEnd(class AActor* MousedOverActor);
	void OnMouseOverBegin(class AActor* MousedOverActor);
	void OnMissionDataUpdated();
	void OnMarkedQuestChanged();
	void OnInitializeTile();
	void OnHostSelect();
	void OnHostDeselect();
	void OnFocus();
	void OnEnableGoToPrompt();
	void OnDisableGoToPrompt();
	void OnDeselectWrapper(bool bIsGameSessionOwner);
	void OnDefocus();
	void OnClientSelect();
	void OnClientDeselect();
	bool IsTileValidForMarkedQuest(class UFortQuestItem** OutMarkedQuest);
	bool IsTileSelectable();
	bool IsTileQuestRecommended();
	bool IsTilePlayable();
	bool IsTileLocked();
	bool IsTileHidden();
	bool IsMissionAlertTile();
	bool HasValidMissionData();
	struct FGameDifficultyInfo GetZoneDifficulty();
	struct FGameplayTagContainer GetMissionAlertVisualTags();
	class FName GetMissionAlertCategoryName();
	bool DoesTileAllowQuickplay();
};

// 0x150 (0x478 - 0x328)
// Class FortniteGame.FortTheaterMapViewer
class AFortTheaterMapViewer : public AActor
{
public:
	uint8                                        Pad_27D2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortAvailableTheaterMissions> MissionAvailabilityList;                           // 0x330(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortAvailableMissionAlerts>   MissionAlertAvailabilityList;                      // 0x340(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBox                                  HexMapSize;                                        // 0x350(0x1C)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HexTileWidth;                                      // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HexTileHeight;                                     // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AFortTheaterMapTile*>           HexMap;                                            // 0x378(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FString                                CurrentTheaterId;                                  // 0x388(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                 LeaderTileAccessStates;                            // 0x398(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AFortTheaterMapTile*                   CurrentSelectedTile;                               // 0x3A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortTheaterMapTile*                   CurrentFocusedTile;                                // 0x3B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFortTheaterMapData>           TheaterList;                                       // 0x3B8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                        NumValidHexMapTiles;                               // 0x3C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D4[0xAC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortTheaterMapViewer* GetDefaultObj();

	void HandleMarkedQuestsChanged();
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortThreatParticleActor
class AFortThreatParticleActor : public AActor
{
public:
	uint8                                        Pad_27D5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortThreatParticleActor* GetDefaultObj();

	void OnWorldReady();
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo>& ThreatLocationInfo);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
};

// 0x200 (0x528 - 0x328)
// Class FortniteGame.FortThreatVisualsManager
class AFortThreatVisualsManager : public AActor
{
public:
	uint8                                        Pad_27D8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AThreatCloud>              CloudBlueprint;                                    // 0x330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudRadius;                                       // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ThreatBoxVolumeTopPadding;                         // 0x33C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ThreatBoxVolumeBottomPadding;                      // 0x340(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseLocalPlayersOnlyForCloudMinimumHeight;         // 0x344(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHideClouds;                                       // 0x345(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27D9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CloudMinimumHeightAbovePlayers;                    // 0x348(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMinimumHeightAboveGround;                     // 0x34C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMinimumAltitude;                              // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMaxVerticalDelta;                             // 0x354(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMinSpeed;                                     // 0x358(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMaxSpeed;                                     // 0x35C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindCloudRadius;                              // 0x360(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindGoalRadius;                               // 0x364(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindFalloffRadius;                            // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindInactiveMagnitude;                        // 0x36C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindActiveMagnitude;                          // 0x370(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindDesiredDeltaBlendTime;                    // 0x374(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormWindDirectionAdditionalAngle;                 // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FThreatLocationArray                  ThreatLocations;                                   // 0x380(0xC0)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FStormWindArray                       StormWindArray;                                    // 0x440(0xC0)(Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       GoalActorLocations;                                // 0x500(0x10)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27DB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortThreatVisualsManager* GetDefaultObj();

	bool StormsExist();
	void SetMinimumCloudAltitude(float NewMinimumAltitude);
	void SetCloudsAreHidden(bool bHide);
	void ResetMinimumCloudAltitude();
	void OnWorldReady();
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo>& ThreatLocationInfo);
	void OnRep_ThreatLocations();
	void OnRep_StormWinds();
	void OnRep_HideClouds();
	void OnRep_GoalActorLocations();
	void OnBeginThreatVisualsPrecursor(class AActor* SourceActor, struct FVector& EndLocation);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	class AThreatCloud* GetThreatCloud(struct FThreatLocationInfo& ThreatLocInfo);
	bool GetCloudsAreHidden();
	void BeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& ThreatLocation);
};

// 0xE8 (0x118 - 0x30)
// Class FortniteGame.FortTieredCollectionLayout
class UFortTieredCollectionLayout : public UDataAsset
{
public:
	uint8                                        bUseTierAsRandomSeed : 1;                          // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bFiniteTiers : 1;                                  // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21B : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumberOfTiersAllowed;                           // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InitialTierUnlocked;                               // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTieredNamedCollectionProgressionData SpawnWaveProgressions;                             // 0x40(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDifficultyCollectionProgressionData  DifficultyProgressions;                            // 0x58(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FTieredNamedCollectionProgressionData ModifierProgressions;                              // 0x70(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRewardBadgesCollectionProgressionData RewardBadgesProgression;                           // 0x88(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FCollectionLootSetData                LootSetProgression;                                // 0xA0(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                  CollectionLayoutDisplayName;                       // 0xB8(0x18)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UFortTieredCollectionLayout> PrerequisiteLayout;                                // 0xD0(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  TierToMissionPointLookupTable;                     // 0xF8(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGuid                                 LayoutGUID;                                        // 0x108(0x10)(Edit, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortTieredCollectionLayout* GetDefaultObj();

	bool ShouldUseTierAsRandomSeed();
	int32 GetMissionPointsForTier(int32 Tier);
	class FText GetCollectionLayoutDisplayName();
};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTimeOfDayCollection
class UFortTimeOfDayCollection : public UDataAsset
{
public:
	TArray<TSoftClassPtr<class AFortTimeOfDayManager>> TimeOfDayManagers;                                 // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortTimeOfDayCollection* GetDefaultObj();

};

// 0x898 (0xBC0 - 0x328)
// Class FortniteGame.FortTimeOfDayManager
class AFortTimeOfDayManager : public AInfo
{
public:
	uint8                                        Pad_27DE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOfDay;                                         // 0x330(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDayReplicated;                               // 0x334(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDayPhase                     CurrentDayNightPhase;                              // 0x338(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDayPhase                     TransitionFromPhase;                               // 0x339(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortDayPhase                     TransitionToPhase;                                 // 0x33A(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TransitionBlendPercent;                            // 0x33C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultTimeOfDaySpeed;                             // 0x340(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTimeOfDayInGame;                              // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDaySpeed;                                    // 0x348(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTimeOfDayAccumulationFactor;                    // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeOfDayAccumulator;                              // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    BasePostProcessMaterial;                           // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBasePostProcessMaterialDisabledInBROnly : 1;      // Mask: 0x1, PropSize: 0x10x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21C : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              PostProcessMaterialMID;                            // 0x368(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       bHasClonedPPVs;                                    // 0x370(0x4)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bSkipNight : 1;                                    // Mask: 0x1, PropSize: 0x10x374(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bTimeStarted : 1;                                  // Mask: 0x2, PropSize: 0x10x374(0x1)(Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHeightFogEnabled : 1;                             // Mask: 0x4, PropSize: 0x10x374(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bBaseHeightFogOnAltitude : 1;                      // Mask: 0x8, PropSize: 0x10x374(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21D : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HeightFogZOffset;                                  // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCameraAltitudeAdjustments>    AltitudeAdjustments;                               // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SunriseDirectionalLightRotation;                   // 0x390(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SunsetDirectionalLightRotation;                    // 0x39C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuat                                 DirectionalLightQuat;                              // 0x3B0(0x10)(BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E5[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              SunriseSunObjectRotation;                          // 0x3D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              SunsetSunObjectRotation;                           // 0x3E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SunObjectDivergencePower;                          // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToSunOrMoon;                               // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDirectionalLightComponent*            DirectionalLightComponent;                         // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExponentialHeightFogComponent*        ActiveHeightFogComponent;                          // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortDayPhaseChangeParams*             DayPhaseChangeEventParams;                         // 0x408(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDayPhaseInfo                         LightAndFogPhaseSettings[0x4];                     // 0x410(0x5C0)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 MorningPostProcessComponent;                       // 0x9D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 DayPostProcessComponent;                           // 0x9D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 EveningPostProcessComponent;                       // 0x9E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 NightPostProcessComponent;                         // 0x9E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 DayPhasePostProcessComponent[0x4];                 // 0x9F0(0x20)(ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FExponentialHeightFogValues           CurrentTimeOfDayFogValues;                         // 0xA10(0x44)(BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                          CurrentTimeOfDayDirectionalLightColor;             // 0xA54(0x10)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          MaterialParameterCollection;                       // 0xA68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RainParticleSystemRelativeOffset;                  // 0xA70(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           SunMesh;                                           // 0xA80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           MoonMesh;                                          // 0xA88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            SunMaterialOverrides;                              // 0xA90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            MoonMaterialOverrides;                             // 0xAA0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        SunScale;                                          // 0xAB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoonScale;                                         // 0xAB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    SkyDomeMaterial;                                   // 0xAB8(0x8)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    StarMapMaterial;                                   // 0xAC0(0x8)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            CloudMaskTexture;                                  // 0xAC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseStormValues;                                   // 0xAD0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          StormLightColor;                                   // 0xAD4(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstance*                     StormMaterialInst;                                 // 0xAE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FExponentialHeightFogValues           StormFogValues;                                    // 0xAF0(0x44)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnDayPhaseChangeEvent;                             // 0xB38(0x10)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class USkyLightComponent*                    SkyLightComp;                                      // 0xB48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              RainParticleSystemComp;                            // 0xB50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  SunOrMoonMeshComp;                                 // 0xB58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  SkyDomeMeshComp;                                   // 0xB60(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  StarMapMeshComp;                                   // 0xB68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              ActiveSkyBoxMat;                                   // 0xB70(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              StarMapMID;                                        // 0xB78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StormStrength;                                     // 0xB80(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27EC[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortTimeOfDayManager* GetDefaultObj();

	void ToggleSkipNight();
	void ToggleDebugForceStormEffects();
	void SetUseSpecificTimeOfDayEditing(bool bShouldUseSpecificTimeOfDay);
	void SetTimeOfDaySpeedFloat(float InTimeOfDaySpeed);
	void SetTimeOfDaySpeed(float TimeOfDaySpeedFactor);
	void SetTimeOfDayManagerVisibility(bool bVisible);
	void SetTimeOfDayInHours(float TimeOfDayInHours);
	void SetTimeOfDayFloat(float TimeOfDayInHours);
	void SetTimeOfDayAbsoluteSpeed(float NewTimeOfDaySpeed);
	void SetTimeOfDay(const class FString& NewTimeOfDay);
	void SetStormStrength(float NewStormStrength);
	void SetSpecificTimeOfDayInEditor(float NewTimeOfDayInEditor);
	void SetFogDirectionalInscatteringMultiplier(float NewFogDirectionalInscatteringMultiplier);
	void SetDirectionalLightColorMultiplier(float NewDirectionalLightColorMultiplier);
	void SetDayPhase(const class FString& DayPhase);
	void OnUpdateDirectionalLightForTimeOfDay(struct FLinearColor& AboutToApplyDirectionalLightColor);
	void OnStormStart();
	void OnStormEnd();
	void OnRep_TimeOfDayInit();
	void OnRep_TimeOfDay();
	void OnRep_HeightFogEnabled();
	void OnDayPhaseChange();
	struct FExponentialHeightFogValues MakeExponentialHeightFogValues(float FogDensity, float FogHeightFalloff, float FogMaxOpacity, float StartDistance, float DirectionalInscatteringExponent, float DirectionalInscatteringStartDistance, const struct FLinearColor& DirectionalInscatteringColor, const struct FLinearColor& FogInscatteringColor, float VolumetricFogScatteringDistribution, float VolumetricFogExtinctionScale, float VolumetricFogDistance);
	class AFortTimeOfDayManager* GetTimeOfDayManagerFromContext(class UObject* WorldContextObject);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	float GetStormStrength();
	enum class EFortDayPhase GetPreviousDayPhase();
	void FFToTimeOfDay(float FastForwardTime, float FastForwardSpeed);
	void BreakExponentialHeightFogValues(const struct FExponentialHeightFogValues& HeightFogValues, float* FogDensity, float* FogHeightFalloff, float* FogMaxOpacity, float* StartDistance, float* DirectionalInscatteringExponent, float* DirectionalInscatteringStartDistance, struct FLinearColor* DirectionalInscatteringColor, struct FLinearColor* FogInscatteringColor, float* VolumetricFogScatteringDistribution, float* VolumetricFogExtinctionScale, float* VolumetricFogDistance);
};

// 0x18 (0x48 - 0x30)
// Class FortniteGame.FortTips
class UFortTips : public UDataAsset
{
public:
	TArray<class FText>                          Tips;                                              // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         DisplayOnPlatformPC;                               // 0x40(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformXbox;                             // 0x41(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformPS4;                              // 0x42(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformSwitch;                           // 0x43(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         DisplayOnPlatformMobile;                           // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27ED[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTips* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTokenToTextTable
class UFortTokenToTextTable : public UDataAsset
{
public:
	TArray<struct FFortTooltipTokenInfo>         TokenInfoList;                                     // 0x30(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EE[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTokenToTextTable* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class FortniteGame.FortTooltipDisplayStatsList
class UFortTooltipDisplayStatsList : public UDataAsset
{
public:
	TArray<struct FFortTooltipDisplayStatsCategory> TooltipCategories;                                 // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortTooltipDisplayStatsList* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTooltipDisplayStatsLookupTable
class UFortTooltipDisplayStatsLookupTable : public UDataAsset
{
public:
	TArray<struct FFortTooltipDisplayInfo>       TooltipDisplayStats;                               // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EF[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTooltipDisplayStatsLookupTable* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTooltipLibrary
class UFortTooltipLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortTooltipLibrary* GetDefaultObj();

	class FText FormatAttributeBuffs(struct FFortAttributeInfo& AttributeInfo, float AdditiveBuff, float MultiplicativeBuff);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTooltipInterface
class IFortTooltipInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortTooltipInterface* GetDefaultObj();

	TSubclassOf<class UFortTooltip> GetTooltip();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTooltipMap
class UFortTooltipMap : public UDataAsset
{
public:
	uint8                                        Pad_27F0[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortTooltipMapEntry>          Mapping;                                           // 0x80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortTooltipMap* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.FortTouchInputSettings
class UFortTouchInputSettings : public UDataAsset
{
public:
	class UCurveFloat*                           LookSensitivityCurve;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LookVelocityScaleCurve;                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           MovementCurve;                                     // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTouchAimAssistSettings           TouchAimAssist;                                    // 0x48(0x48)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortTouchInputSettings* GetDefaultObj();

};

// 0x10 (0x6B8 - 0x6A8)
// Class FortniteGame.FortToyActorBase
class AFortToyActorBase : public ABuildingGameplayActor
{
public:
	uint8                                        Pad_27F1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortToyActorBase* GetDefaultObj();

	void PreviewToy(class UAthenaToyItemDefinition* Toy);
};

// 0xB0 (0x3E0 - 0x330)
// Class FortniteGame.FortTracerBase
class AFortTracerBase : public AFortClientOnlyActor
{
public:
	class UMovementComp_Tracer*                  TracerMovementComponent;                           // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  TracerMesh;                                        // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBulletWhipTrackerComponentBase*       BulletWhipTrackerComponent;                        // 0x340(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCurveTableRowHandle                  Speed;                                             // 0x348(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMinRange;                                // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMaxRange;                                // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMinMultiplier;                           // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedScaleMaxMultiplier;                           // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MeshScaleMult;                                     // 0x368(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshScaleTime;                                     // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UBulletWhipTrackerComponentBase> BulletWhipTrackerComponentClass;                   // 0x378(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScaleOnDeath : 1;                                 // Mask: 0x1, PropSize: 0x10x3A0(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScaleSpeed : 1;                                   // Mask: 0x2, PropSize: 0x10x3A0(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bScaledUp : 1;                                     // Mask: 0x4, PropSize: 0x10x3A0(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDead : 1;                                         // Mask: 0x8, PropSize: 0x10x3A0(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bOwnedByPool : 1;                                  // Mask: 0x10, PropSize: 0x10x3A0(0x1)(Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21E : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27F2[0x33];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentScale;                                      // 0x3D4(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortTracerBase* GetDefaultObj();

	void Init(struct FVector& Start, struct FVector& End);
};

// 0x190 (0xD40 - 0xBB0)
// Class FortniteGame.FortTrack
class AFortTrack : public ABuildingProp
{
public:
	UMulticastDelegateProperty_                  OnTrackGraphChanged;                               // 0xBB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  ToggleSwitchText;                                  // 0xBC0(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ToggleInteractTime;                                // 0xBD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           TrackPieceMeshesByType[0x5];                       // 0xBE0(0x28)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseFloorMesh;                                     // 0xC08(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMesh*                           TrackFloorMeshesByVerticality[0x3];                // 0xC10(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTrackConnectorMeshConfig>     ConnectorMeshConfigs;                              // 0xC28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class AFortTrack*                            NeighborsByDirection[0x4];                         // 0xC38(0x20)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SwitchState;                                       // 0xC58(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConfigurationIdx;                                  // 0xC5C(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCollisionResponseContainer           FloorCollisionResponseContainer;                   // 0xC60(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  TrackMeshComp;                                     // 0xC80(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  TrackFloorMeshComp;                                // 0xC88(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ConnectorMeshCompsByDirection[0x4];                // 0xC90(0x20)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlacementCollision1;                               // 0xCB0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         PlacementCollision2;                               // 0xCB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      SplineComp1;                                       // 0xCC0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      SplineComp2;                                       // 0xCC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SwitchCompBase;                                    // 0xCD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   SwitchComp;                                        // 0xCD8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27FD[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortTrack* GetDefaultObj();

	void OnSwitchStateChanged(int32 NewSwitchState, int32 OldSwitchState, int32 NumSwitchStates);
	void OnRep_SwitchState();
	void OnRep_NeighborsByDirection();
	void OnRep_ConfigurationIdx();
	void OnConfigurationChanged(int32 NewConfigurationIdx, int32 OldConfigurationIdx);
	bool IsConnectedToTrackList(TArray<class AFortTrack*>& TargetTracks);
	bool IsConnectedToTrack(class AFortTrack* TargetTrack);
	void InitializeTrack(class UPrimitiveComponent* InSwitchComp);
	void GetSplineFromPositionAndOrientation(struct FVector& InLocation, struct FRotator& InRotation, class USplineComponent** OutSpline, float* OutDistanceAlongSpline, bool* OutReverseDirection);
	void GetSplineFromIncomingNeighbor(class AFortTrack* InNeighbor, class USplineComponent** OutSpline, bool* OutReverseDirection);
	float GetPathDistanceToTrack(class AFortTrack* TargetTrack, class USplineComponent* InCurrentSpline, float CurrentDistanceAlongSpline, bool InReverseDirection);
	void GetOutgoingNeighborFromSpline(class USplineComponent* InSpline, bool InReverseDirection, class AFortTrack** OutNeighbor);
};

// 0x8 (0xD48 - 0xD40)
// Class FortniteGame.FortTrack_CustomSpline
class AFortTrack_CustomSpline : public AFortTrack
{
public:
	class USplineComponent*                      CustomSplineComp;                                  // 0xD40(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortTrack_CustomSpline* GetDefaultObj();

};

// 0xA0 (0x1D8 - 0x138)
// Class FortniteGame.FortTrackMovementComponent
class UFortTrackMovementComponent : public UMovementComponent
{
public:
	class AFortTrack*                            OptionalEditorPlacedTrack;                         // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TrackSnapExtent;                                   // 0x140(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TurnSpeed;                                         // 0x14C(0xC)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SplineLocationOffsetZ;                             // 0x158(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiscoverSplineFrequency;                           // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackVelocity;                                     // 0x160(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReverseYawWhenReversedOnSpline;                   // 0x164(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnOutOfTrack;                                      // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnLostTrack;                                       // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTrackMovement                        TrackMovement;                                     // 0x188(0x10)(Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRepTrackMovement                     ReplicatedTrackMovement;                           // 0x198(0x18)(Net, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClientPredictionSpeedModifier;                     // 0x1C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2800[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTrackMovementComponent* GetDefaultObj();

	void OnRep_ReplicatedTrackMovement();
	bool IsReverseDirection();
	class AFortTrack* GetTrack();
	class USplineComponent* GetSpline();
	float GetDistanceAlongSpline();
	void FlipDirection();
};

// 0x38 (0x4C8 - 0x490)
// Class FortniteGame.FortTrackPreview
class AFortTrackPreview : public AFortDecoPreview
{
public:
	class UStaticMesh*                           TrackPieceMeshesByType[0x5];                       // 0x490(0x28)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CellSize;                                          // 0x4B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2801[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  TrackMeshComp;                                     // 0x4C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFortTrackPreview* GetDefaultObj();

	void InitializeTrackPreview(class UStaticMeshComponent* InTrackMeshComp);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortTrajectoryAbilityInterface
class IFortTrajectoryAbilityInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortTrajectoryAbilityInterface* GetDefaultObj();

	void InitTrajectoryVariables();
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents);
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWeaponItemDefinitionTooltip
class UFortWeaponItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWeaponItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortTrapItemDefinitionTooltip
class UFortTrapItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortTrapItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x90 (0x120 - 0x90)
// Class FortniteGame.FortTrapTooltip
class UFortTrapTooltip : public UFortWorldItemTooltip
{
public:
	uint8                                        Pad_280B[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTrapTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x1D8 (0x208 - 0x30)
// Class FortniteGame.FortTwitchAccount
class UFortTwitchAccount : public UFortLinkedAccount
{
public:
	uint8                                        Pad_280C[0x1D8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortTwitchAccount* GetDefaultObj();

	void HandleQuestsUpdated();
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortInventorySortFunctionLibrary
class UFortInventorySortFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortInventorySortFunctionLibrary* GetDefaultObj();

	class FText GetCriterionDisplayNameOfSortType(enum class EInventoryContentSortType SortType);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortBrushSizeFunctionLibrary
class UFortBrushSizeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UFortBrushSizeFunctionLibrary* GetDefaultObj();

	enum class EFortBrushSize ShrinkBrushSize(enum class EFortBrushSize OriginalBrushSize, int32 Steps);
	enum class EFortBrushSize GrowBrushSize(enum class EFortBrushSize OriginalBrushSize, int32 Steps);
};

// 0x330 (0x360 - 0x30)
// Class FortniteGame.FortMultiSizeBrushAsset
class UFortMultiSizeBrushAsset : public UDataAsset
{
public:
	struct FFortMultiSizeBrush                   Brush;                                             // 0x30(0x330)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMultiSizeBrushAsset* GetDefaultObj();

};

// 0x68 (0x480 - 0x418)
// Class FortniteGame.FortUIBaseClass
class AFortUIBaseClass : public AHUD
{
public:
	uint8                                        Pad_2812[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortUIBaseClass* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class FortniteGame.FortUIFeedbackBank
class UFortUIFeedbackBank : public UDataAsset
{
public:
	uint8                                        Pad_2813[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortUIFeedback>               FeedbackEvents;                                    // 0x80(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortUIFeedbackBlueprintOnly>  BankDefinedFeedbackEvents;                         // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFortUIFeedbackBank* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class FortniteGame.FortUIFriendNotification
class UFortUIFriendNotification : public UFortUINotification
{
public:
	enum class EFortUIFriendNotificationType     FriendActionType;                                  // 0xA0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2814[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortUIFriendNotification* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortUIManagerInterface
class IFortUIManagerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortUIManagerInterface* GetDefaultObj();

	void KillConfirmation();
};

// 0x98 (0x3C0 - 0x328)
// Class FortniteGame.FortUIProxyActor
class AFortUIProxyActor : public AActor
{
public:
	uint8                                        Pad_2815[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAttributeSet*>                 AttributeSets;                                     // 0x338(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UFortAbilitySystemComponent*           AbilitySystemComponent;                            // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFortItemDefinition*                   ItemDef;                                           // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortAttributeInitializationKey       InitializerKey;                                    // 0x358(0x10)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2816[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortUIProxyActor* GetDefaultObj();

};

// 0x318 (0x798 - 0x480)
// Class FortniteGame.FortUIZone
class AFortUIZone : public AFortUIBaseClass
{
public:
	struct FFontRenderInfo                       TextRenderInfo;                                    // 0x480(0x28)(NoDestructor, NativeAccessSpecifierPublic)
	class UReporterGraph*                        CombatGraph;                                       // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        FactorGraph;                                       // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        IntensityGraph;                                    // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDValuesGraph;                                    // 0x4C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        PIDContributionsGraph;                             // 0x4C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReporterGraph*                        UtilitiesGraph;                                    // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2817[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortContextualReticleTypes       CurrentContextualReticleIconType;                  // 0x500(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2818[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColor                                CurrentContextualReticleColor;                     // 0x504(0x4)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ContextualReticleIcons[0x8];                       // 0x508(0x140)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class USlateBrushAsset>       ActorCanvasArrowBrush;                             // 0x648(0x28)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2819[0x118];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UFortSpottedActorIndicator*>    SpottedActorIndicators;                            // 0x788(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortUIZone* GetDefaultObj();

	void ToggleTargetInfoSensing();
	void ToggleTargetInfoPaths();
	void ToggleTargetInfoLock(bool bTraceComplex);
	void ToggleTargetInfoAI();
	void ToggleTargetInfo();
};

// 0x8 (0x7A0 - 0x798)
// Class FortniteGame.FortUIPvP
class AFortUIPvP : public AFortUIZone
{
public:
	uint8                                        Pad_281A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortUIPvP* GetDefaultObj();

};

// 0x0 (0x7A0 - 0x7A0)
// Class FortniteGame.FortUIPvPBaseDestruction
class AFortUIPvPBaseDestruction : public AFortUIPvP
{
public:

	static class UClass* StaticClass();
	static class AFortUIPvPBaseDestruction* GetDefaultObj();

};

// 0x1E8 (0x210 - 0x28)
// Class FortniteGame.FortUITeamInfo
class UFortUITeamInfo : public UObject
{
public:
	uint8                                        Pad_281C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	UMulticastDelegateProperty_                  OnTeamMemberFinishedSynchronizing;                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberAdded;                                 // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberRemoved;                               // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberStateChanged;                          // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamMemberPromoted;                              // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnTeamHitPointFractionsChanged;                    // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_281D[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortPartyContext*                     TeamContext;                                       // 0x130(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFortTeam                         TeamAssignment;                                    // 0x138(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_281E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnum*                                 FortTeamUEnum;                                     // 0x140(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TotalFilledSlots;                                  // 0x148(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PreviousFilledSlots;                               // 0x14C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_281F[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortUITeamInfo* GetDefaultObj();

	void OnTeamMemberStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& TeamMemberInfo);
	void OnTeamMemberSimpleDelegate__DelegateSignature();
	void OnTeamMemberRemovedDelegate__DelegateSignature(int32 PlayerIndex);
	void OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature(const struct FUniqueNetIdRepl& NewTeamMemberId);
	void OnTeamMemberAddedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& NewTeamMemberInfo);
	void OnTeamHitPointFractionsChanged__DelegateSignature(TArray<float>& HealthFractions, TArray<float>& ShieldFractions);
	bool IsTeamMemberSynchronizing(struct FUniqueNetIdRepl& PlayerID);
	void GetTeamMembers(TArray<struct FFortTeamMemberInfo>* TeamMembers);
	void GetTeamMemberIDs(TArray<struct FUniqueNetIdRepl>* TeamMemberIDs);
	void GetTeamHitPointFractions(TArray<float>* HealthFractions, TArray<float>* ShieldFractions);
};

// 0x8 (0x120 - 0x118)
// Class FortniteGame.FortUpdateManager
class UFortUpdateManager : public UUpdateManager
{
public:
	uint8                                        Pad_2820[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortUpdateManager* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class FortniteGame.FortAsyncAction_CheckForUpdate
class UFortAsyncAction_CheckForUpdate : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  OnUpToDate;                                        // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnUpdateRequired;                                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowDialogOnFailure;                              // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2822[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_CheckForUpdate* GetDefaultObj();

	class UFortAsyncAction_CheckForUpdate* CheckForUpdate(class UObject* InWorldContextObject, bool InShowDialogOnFailure);
};

// 0x6A8 (0x9D0 - 0x328)
// Class FortniteGame.FortWorldManager
class AFortWorldManager : public AInfo
{
public:
	uint8                                        Pad_2823[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortLevelStreamingInfo>       StreamedLevels;                                    // 0x388(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FFortPlacementLocationTagHandler> PlacementLocationTagHandlers;                      // 0x398(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        bSavingEnabled : 1;                                // Mask: 0x1, PropSize: 0x10x3A8(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_21F : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2824[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       SaveFrequency_Seconds;                             // 0x3AC(0x4)(ZeroConstructor, Transient, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bStreamInBuildings : 1;                            // Mask: 0x1, PropSize: 0x10x3B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bConstructTileWorld : 1;                           // Mask: 0x2, PropSize: 0x10x3B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bUseSimMaps : 1;                                   // Mask: 0x4, PropSize: 0x10x3B0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_220 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2825[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumNonAutoconstructedTiles;                        // 0x3B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   GameDifficultyRowPIEOverride;                      // 0x3B8(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UFortZoneTheme>            ZoneThemeForPIE;                                   // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortWindIntensityAndDirection        InitialGlobalWind;                                 // 0x3D0(0x8)(Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EFortWorldManagerState            WorldManagerState;                                 // 0x3D8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2826[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWorldTileManager*                     TileManager;                                       // 0x3E0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        X_Size;                                            // 0x3E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Y_Size;                                            // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Z_StructuralGrid_Size;                             // 0x3F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TileEdgeSize;                                      // 0x3F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorldTheme*                           Theme;                                             // 0x3F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  DefaultLootQuotaCategory;                          // 0x400(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFortTileLootData                     LootData;                                          // 0x408(0x318)(NativeAccessSpecifierPrivate)
	int32                                        MaxTiles;                                          // 0x720(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseFixedSeed;                                     // 0x724(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2827[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FixedSeed;                                         // 0x728(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2828[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWorldTileSubArray>            Y;                                                 // 0x730(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        NumExplorationActors;                              // 0x740(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ExplorationActorDistanceRangeMin;                  // 0x744(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ExplorationActorDistanceRangeMax;                  // 0x748(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2829[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 ExplorationActorRequiredTags;                      // 0x750(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FVector                               FriendlyPlayerSpawnExtent;                         // 0x770(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               PadPlayerSpawnExtent;                              // 0x77C(0xC)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DangerPlayerSpawnExclusionRadius;                  // 0x788(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ObjectivePlayerSpawnExclusionRadius;               // 0x78C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 OverrideInitialPlayerSpawnTags;                    // 0x790(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 OverrideBackupPlayerSpawnTags;                     // 0x7B0(0x20)(Edit, NativeAccessSpecifierPrivate)
	struct FFortStartingMissionInfo              StartingMissionInfo;                               // 0x7D0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class UFortWorldRecord*                      CurrentWorldRecord;                                // 0x7E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortZoneRecord*                       CurrentZoneRecord;                                 // 0x7F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_282A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortUserCloudHelperComponent*         CloudHelper;                                       // 0x818(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentZoneIndex;                                  // 0x820(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasCreatedMissions;                               // 0x824(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasCreatedPrimaryAdditionalFoundations;           // 0x825(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSpawnedActorsForMissions;                      // 0x826(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bZoneCompleted;                                    // 0x827(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bZoneFinished;                                     // 0x828(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCreatedMissionRecord;                             // 0x829(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_282B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortMissionManagerRecord             MissionManagerRecord;                              // 0x830(0x38)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortMissionEntry>             ReactiveMissionsToAdd;                             // 0x868(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortDeferredNewActorData>     DeferredActors;                                    // 0x878(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_282C[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SpawnedExplorationActors;                          // 0x998(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        FinalNumChosenBuildingFoundations;                 // 0x9A8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_282D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABuildingFoundation*>           ChosenBuildingFoundations;                         // 0x9B0(0x10)(Net, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FFortPlayerEarnedItemCaches>   UnsavedPlayerEarnedItemCaches;                     // 0x9C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortWorldManager* GetDefaultObj();

	void OnRep_InitialGlobalWind();
};

// 0x80 (0x170 - 0xF0)
// Class FortniteGame.FortUserCloudHelperComponent
class UFortUserCloudHelperComponent : public UActorComponent
{
public:
	uint64                                       LastIssuedRequestHandle;                           // 0xF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_282E[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortUserCloudHelperComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortValidationInterface
class IFortValidationInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFortValidationInterface* GetDefaultObj();

};

// 0x30 (0x360 - 0x330)
// Class FortniteGame.FortVariantTokenType
class UFortVariantTokenType : public UFortAccountItemDefinition
{
public:
	enum class EItemProfileType                  ProfileType;                                       // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItemDefinition*                   Cosmetic_item;                                     // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VariantChanelTag;                                  // 0x340(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VariantNameTag;                                    // 0x348(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoEquipVariant;                                 // 0x350(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMarkItemUnseen;                                   // 0x351(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCreateGiftbox;                                    // 0x352(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2830[0xD];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortVariantTokenType* GetDefaultObj();

	struct FGameplayTag GetVariantNameTag();
	struct FGameplayTag GetVariantChannelTag();
	class UFortItemDefinition* GetCosmeticItem();
};

// 0x88 (0x6D0 - 0x648)
// Class FortniteGame.FortVehicleAudioVoice
class UFortVehicleAudioVoice : public UAudioComponent
{
public:
	class USoundBase*                            LoopingSound;                                      // 0x648(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleAudioOneshotGate>  OneshotGates;                                      // 0x650(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        OneShotGateInterpSpeed;                            // 0x660(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2831[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortVehicleAudioParam                VolumeParam;                                       // 0x668(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FFortVehicleAudioParam                PitchParam;                                        // 0x688(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FFortVehicleAudioFloatParam>   FloatParams;                                       // 0x6A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVector2D                             ParamRange;                                        // 0x6B8(0x8)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParamValuePrev;                                    // 0x6C0(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2832[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortVehicleAudioVoice* GetDefaultObj();

	void SetParamRange(float Min, float Max);
	void SetParam(float Param);
	float EvaluateAudioParam(struct FFortVehicleAudioParam* Param, float ParamValue);
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FortVehicleManager
class AFortVehicleManager : public AActor
{
public:
	uint8                                        Pad_2833[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortVehicleManager* GetDefaultObj();

};

// 0xD8 (0x400 - 0x328)
// Class FortniteGame.FortVisibilityManager
class AFortVisibilityManager : public AActor
{
public:
	uint8                                        Pad_2834[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVisibiltyInfoArray                   VisibilityInfoArray;                               // 0x338(0xC0)(Net, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2835[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortVisibilityManager* GetDefaultObj();

};

// 0x138 (0x240 - 0x108)
// Class FortniteGame.FortVolumeMiniMapIndicator
class UFortVolumeMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct FSlateBrush                           PerimeterBrush;                                    // 0x108(0x88)(Transient, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           OnRadarBrush;                                      // 0x190(0x88)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2836[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortVolumeMiniMapIndicator* GetDefaultObj();

};

// 0x20 (0xB20 - 0xB00)
// Class FortniteGame.FortWeap_BuildingToolBase
class AFortWeap_BuildingToolBase : public AFortWeapon
{
public:
	class UStaticMeshComponent*                  PencilMeshComponent;                               // 0xB00(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BlueprintPaperSocket;                              // 0xB08(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BlueprintPencilSocket;                             // 0xB10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AFortPlayerController*                 InstigatorController;                              // 0xB18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortWeap_BuildingToolBase* GetDefaultObj();

};

// 0x100 (0xC20 - 0xB20)
// Class FortniteGame.FortWeap_BuildingTool
class AFortWeap_BuildingTool : public AFortWeap_BuildingToolBase
{
public:
	class UMaterialInterface*                    BlueprintPaperMaterial;                            // 0xB20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            BlueprintDiffuseTextures[0x4];                     // 0xB28(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            BlueprintEmissiveMaskTextures[0x4];                // 0xB48(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           BlueprintPaperPulseCurve;                          // 0xB68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuildingEditModeMetadata*             DefaultMetadata;                                   // 0xB70(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              BlueprintPaperMID;                                 // 0xB78(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             BlueprintPaperPulseTimeline;                       // 0xB80(0x98)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	enum class EFortResourceType                 LastResourceType;                                  // 0xC18(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2837[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortWeap_BuildingTool* GetDefaultObj();

	void OnRep_DefaultMetadata(class UBuildingEditModeMetadata* OldMetadata);
	void OnBlueprintPaperPulseUpdate(float InCurveVal);
};

// 0x10 (0xB30 - 0xB20)
// Class FortniteGame.FortWeap_EditingTool
class AFortWeap_EditingTool : public AFortWeap_BuildingToolBase
{
public:
	class ABuildingSMActor*                      EditActor;                                         // 0xB20(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEditConfirmed;                                    // 0xB28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2838[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortWeap_EditingTool* GetDefaultObj();

	void OnRep_EditActor();
};

// 0x248 (0xD48 - 0xB00)
// Class FortniteGame.FortWeaponRanged
class AFortWeaponRanged : public AFortWeapon
{
public:
	TSubclassOf<class AFortTracerBase>           TracerTemplate;                                    // 0xB00(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentNumBullets;                                 // 0xB08(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ScopeTargetingMuzzleOffset;                        // 0xB0C(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentMuzzleBlockedLocation;                      // 0xB18(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFortAbilityTargetingSource       CurrentDamageStart;                                // 0xB24(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2839[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              MaxTargetingAimAdjustment;                         // 0xB28(0xC)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ProjectilePitchOffset;                             // 0xB34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldDisplayAmmoCounter : 1;                     // Mask: 0x1, PropSize: 0x10xB38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bShouldAimFromMuzzleAtCloseRange : 1;              // Mask: 0x2, PropSize: 0x10xB38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bMaintainAimLocationDuringTargeting : 1;           // Mask: 0x4, PropSize: 0x10xB38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseScopeTargeting : 1;                            // Mask: 0x8, PropSize: 0x10xB38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseFirstPersonTargeting : 1;                      // Mask: 0x10, PropSize: 0x10xB38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bPersistentFireFX : 1;                             // Mask: 0x20, PropSize: 0x10xB38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseBeamParticles : 1;                             // Mask: 0x40, PropSize: 0x10xB38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseImpactFXForProjectiles : 1;                    // Mask: 0x80, PropSize: 0x10xB38(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseImpactFXForProjectileOverlaps : 1;             // Mask: 0x1, PropSize: 0x10xB39(0x1)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseImpactDecals : 1;                              // Mask: 0x2, PropSize: 0x10xB39(0x1)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUsePersistentBeam : 1;                            // Mask: 0x4, PropSize: 0x10xB39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_221 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_283A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortEffectDistanceQuality            BeamSignificance;                                  // 0xB3C(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortEffectDistanceQuality            ImpactSignificance;                                // 0xB54(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFortEffectDistanceQuality            DecalSignificance;                                 // 0xB6C(0x18)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ScopeImpactEffectDistanceOffset;                   // 0xB84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BeamParticleSystem;                                // 0xB88(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BeamSourceSocketName;                              // 0xB90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DecalSizeMin;                                      // 0xB98(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DecalSizeMax;                                      // 0xBA4(0xC)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalLifespanMin;                                  // 0xBB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecalLifespanMax;                                  // 0xBB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          DecalColorStart;                                   // 0xBB8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          DecalColorEnd;                                     // 0xBC8(0x10)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DecalMaterial;                                     // 0xBD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            DecalTexture;                                      // 0xBE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EPhysicalSurface>          SurfaceAcceptingDecals;                            // 0xBE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_283B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ShellReloadCounter;                                // 0xBFC(0x4)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              TargetingRotAdjustmentTotal;                       // 0xC04(0xC)(Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        LastTargetingRotAdjustmentWeight;                  // 0xC10(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283D[0x6C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseAthenaRecoil;                                  // 0xC80(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseAthenaPerfectADSAim;                           // 0xC81(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_283E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstShotAccuracyMinWaitTime;                      // 0xC84(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFirstShotAccuracyCheckVehicleMovement;            // 0xC88(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_283F[0x87];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          FireAnimation;                                     // 0xD10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          FireDownsightsAnimation;                           // 0xD18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CockingAnimation;                                  // 0xD20(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponFireMontage;                                 // 0xD28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponFireDownsightsMontage;                       // 0xD30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          WeaponCockingMontage;                              // 0xD38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              BeamPSC;                                           // 0xD40(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortWeaponRanged* GetDefaultObj();

	bool UseScopeTargeting();
	bool UseFirstPersonTargeting();
	bool ShouldSpawnBulletShellFX();
	bool ShouldDisplayAmmoCounter();
	void OnSpawnProjectile(class AFortProjectileBase* SpawnProjectile);
	bool IsUsingScopeOrFirstPersonCamera();
	bool IsUsingScope();
	bool IsUsingFirstPersonCamera();
	bool IsCachedIsProjectileWeapon();
	void InitializeBeamFX(class UParticleSystemComponent* InBeamPSC);
	float GetTimeToNextFire();
	float GetFiringRate();
	float GetADSTransitionOutTime();
	float GetADSTransitionInTime();
	void ForceScopeFX();
	void DeactivateBeamFX();
	void AbortScopeFX();
};

// 0x68 (0xDB0 - 0xD48)
// Class FortniteGame.FortWeap_WannaGun
class AFortWeap_WannaGun : public AFortWeaponRanged
{
public:
	uint8                                        Pad_2840[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastHitActorScale;                                 // 0xD68(0xC)(Net, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              LastHitActorRotation;                              // 0xD74(0xC)(Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UClass*                                LastHitActorClass;                                 // 0xD80(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UBuildingTextureData>   TransparentTextureData;                            // 0xD88(0x28)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortWeap_WannaGun* GetDefaultObj();

	void OnRep_LastHitActorClass();
};

// 0x100 (0x130 - 0x30)
// Class FortniteGame.FortWeaponAttrSet
class UFortWeaponAttrSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData            WeaponChanceToNotConsumeAmmo;                      // 0x30(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            AccumulatedWeaponChanceToNotConsumeAmmo;           // 0x50(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponRateOfFire;                                  // 0x70(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponHorizontalRecoil;                            // 0x90(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponVerticalRecoil;                              // 0xB0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponReloadSpeed;                                 // 0xD0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            WeaponAmmoClipSize;                                // 0xF0(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FFortGameplayAttributeData            CharacterItemDurabilityDecayModifier;              // 0x110(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortWeaponAttrSet* GetDefaultObj();

	void OnRep_WeaponVerticalRecoil();
	void OnRep_WeaponReloadSpeed();
	void OnRep_WeaponRateOfFire();
	void OnRep_WeaponHorizontalRecoil();
	void OnRep_WeaponChanceToNotConsumeAmmo();
	void OnRep_WeaponAmmoClipSize();
	void OnRep_CharacterItemDurabilityDecayModifier();
	void OnRep_AccumulatedWeaponChanceToNotConsumeAmmo();
};

// 0x8 (0xA00 - 0x9F8)
// Class FortniteGame.FortWeaponMeleeItemDefinition
class UFortWeaponMeleeItemDefinition : public UFortWeaponItemDefinition
{
public:
	uint8                                        Pad_2841[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortWeaponMeleeItemDefinition* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWeaponMeleeItemDefinitionTooltip
class UFortWeaponMeleeItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWeaponMeleeItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x58 (0xDA0 - 0xD48)
// Class FortniteGame.FortWeaponRangedDual
class AFortWeaponRangedDual : public AFortWeaponRanged
{
public:
	class USkeletalMeshComponent*                LeftHandWeaponMesh;                                // 0xD48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftHandFireAnimation;                             // 0xD50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftCockingAnimation;                              // 0xD58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftHandFireDownsightsAnimation;                   // 0xD60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponFireMontage;                             // 0xD68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponFireDownsightsMontage;                   // 0xD70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponCockingMontage;                          // 0xD78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                          LeftWeaponReloadMontage;                           // 0xD80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnHandFired;                                       // 0xD88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2845[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortWeaponRangedDual* GetDefaultObj();

	enum class EDualWeaponHand GetNextFireHand();
	enum class EDualWeaponHand GetLastFireHand();
};

// 0x68 (0xA60 - 0x9F8)
// Class FortniteGame.FortWeaponRangedItemDefinition
class UFortWeaponRangedItemDefinition : public UFortWeaponItemDefinition
{
public:
	TSoftClassPtr<class AFortProjectileBase>     ProjectileTemplate;                                // 0x9F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseNativeWeaponTrace;                             // 0xA20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTraceThroughPawns;                                // 0xA21(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTraceThroughWorld;                                // 0xA22(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2846[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        BulletShellFXTemplate;                             // 0xA28(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSpawnBulletShellFX;                         // 0xA50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldUsePerfectAimWhenTargetingMinSpread;        // 0xA51(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDoNotAllowDoublePump;                             // 0xA52(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseOnTouch;                                       // 0xA53(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bForceProjectileTooltip;                           // 0xA54(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2847[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortWeaponRangedItemDefinition* GetDefaultObj();

	bool UseOnTouch();
	bool ShouldUsePerfectAimWhenTargetingMinSpread();
	bool ShouldUseNativeWeaponTrace();
	bool ShouldTraceThroughWorld();
	bool ShouldTraceThroughPawns();
	bool ShouldSpawnBulletShellFX();
	TSubclassOf<class AFortProjectileBase> GetProjectileTemplate();
	class UParticleSystem* GetBulletShellFXTemplate();
	bool ForceProjectileTooltip();
	bool DoNotAllowDoublePump();
};

// 0x0 (0x90 - 0x90)
// Class FortniteGame.FortWeaponRangedItemDefinitionTooltip
class UFortWeaponRangedItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWeaponRangedItemDefinitionTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x88 (0x118 - 0x90)
// Class FortniteGame.FortWeaponTooltip
class UFortWeaponTooltip : public UFortWorldItemTooltip
{
public:
	class UFortWorldItem*                        CachedWeapon;                                      // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_284E[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortWeaponTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x0 (0x118 - 0x118)
// Class FortniteGame.FortWeaponRangedTooltip
class UFortWeaponRangedTooltip : public UFortWeaponTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWeaponRangedTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x20 (0x4B0 - 0x490)
// Class FortniteGame.FortWeatherAugment
class AFortWeatherAugment : public AFortCarriedObject
{
public:
	struct FGameplayTagContainer                 WeatherTags;                                       // 0x490(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AFortWeatherAugment* GetDefaultObj();

	struct FGameplayTagContainer GetWeatherTags();
};

// 0x240 (0x568 - 0x328)
// Class FortniteGame.FortWindManager
class AFortWindManager : public AActor
{
public:
	uint8                                        Pad_2858[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAllowWindImpulses;                                // 0x334(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowResponderAudio;                              // 0x335(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2859[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SectionWidth;                                      // 0x338(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinimumSectionBlendTime;                           // 0x33C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     MaterialDefiningParametersToInterpolate;           // 0x340(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  WindVectorParameterName;                           // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindOffsetMaterialParameterNames;                  // 0x370(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindSpeedMaterialParameterNames;                   // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindMaterialScalarParameterNamesToInterpolate;     // 0x390(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class FName>                          WindMaterialVectorParameterNamesToInterpolate;     // 0x3A0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindImpulseRadius>        WindImpulses;                                      // 0x3B0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindImpulseCylinderDelta> WindImpulseCylinderDeltas;                         // 0x3C0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindImpulseCylinder>      WindImpulseCylinders;                              // 0x3D0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FFortWindResponder>            WindResponders;                                    // 0x3E0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_285A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                NearbyCacheIndicesForAudio;                        // 0x3F8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int32>                                NearbyCacheIndicesForUpdates;                      // 0x408(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int32                                        NextNearbyIndexToUpdate;                           // 0x418(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_285B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFortWindResponder                    ActiveAudioWindResponder;                          // 0x428(0x90)(Transient, NativeAccessSpecifierPrivate)
	TMap<class ABuildingSMActor*, class UAudioComponent*> WindActorToWindResponderAudioMap;                  // 0x4B8(0x50)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class FName                                  AudioWindSpeedParameterName;                       // 0x508(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AudioWindInterpSpeed;                              // 0x510(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AudioWindMaxResponderDistance;                     // 0x514(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UpdateWindMaxResponderDistance;                    // 0x518(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ViewerMovementDistanceForRefresh;                  // 0x51C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAudioComponent*>               WindAudioComponentPool;                            // 0x520(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_285C[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFortWindManager* GetDefaultObj();

	bool SetWindImpulseCylinderMagnitude(struct FFortWindImpulseHandle& ImpulseHandle, float NewMagnitude, float BlendTime);
	bool SetWindImpulse(struct FFortWindImpulseHandle& ImpulseHandle, struct FFortWindImpulseRadius& WindImpulse);
	void RemoveWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
	void RemoveWindImpulse(struct FFortWindImpulseHandle& ImpulseHandle, float BlendTime);
	void OnWorldReady();
	void OnWindImpulseCylinderDeltaComplete(struct FFortWindImpulseCylinder& WindImpulseCylinder);
	void OnWindImpulseCylinderDeath(struct FFortWindImpulseCylinder& WindImpulseCylinder);
	void OnWindImpulseCylinderCreation(struct FFortWindImpulseCylinder& WindImpulseCylinder, struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta);
	void OnWindAudioBecameInactive(class UAudioComponent* WindAudioComp);
	void OnWindAudioBecameActive(class UAudioComponent* WindAudioComp);
	struct FFortWindImpulseRadius MakeWindImpulseRadius(struct FVector& ImpulseLocation, float ImpulseRadius, float ImpulseMagnitude, float ImpulseBlendTime);
	struct FFortWindImpulseCylinder MakeWindImpulseCylinder(struct FVector& ImpulseLocation, float ImpulseInnerRadius, float ImpulseOuterRadius, float ImpulseMagnitude, struct FVector& ImpulseDirection);
	bool HasWindImpulse(struct FFortWindImpulseHandle& WindImpulseHandle);
	class AFortWindManager* GetWindManager(class UObject* WorldContextObject);
	void GetGlobalWindIntensityAndDirection(float* WindIntensity, struct FVector* WindDirection);
	bool GetCurrentWindImpulseCylinderDelta(struct FFortWindImpulseCylinder* WindImpulseCylinder, struct FFortWindImpulseCylinderDelta* WindImpulseCylinderDelta);
	void BreakWindImpulseRadius(struct FFortWindImpulseRadius& InWindImpulseRadius, struct FVector* ImpulseLocation, float* ImpulseRadius, float* ImpulseMagnitude, float* ImpulseBlendTime);
	void BreakWindImpulseCylinderDelta(struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta, struct FVector* WindDeltaCenter, bool* bWindImpulseInitialized, bool* bWindRipplesOutward, float* WindDeltaSectionWidth, float* WindDeltaInnerSectionRadius, float* WindDeltaOuterSectionRadius, float* WindDeltaMaximumRadius, float* WindDeltaDesiredOverallBlendTime, float* WindDeltaSectionBlendTime, float* WindDeltaSectionCurrentBlendTime, float* WindDeltaPreviousMagnitude, float* WindDeltaSectionCurrentMagnitude, float* WindDeltaDesiredMagnitude, struct FBox* WindDeltaOuterWorldBounds, struct FBox* WindDeltaInnerWorldBounds, struct FBox* WindImpulseBounds, struct FFortWindImpulseHandle* WindImpulseHandleToModify);
	void BreakWindImpulseCylinderAdvanced(struct FFortWindImpulseCylinder& WindImpulseCylinder, struct FVector* WindLocation, float* WindInnerRadius, float* WindOuterRadius, struct FVector* WindWorldDirection, float* WindMagnitude, struct FBox* WindWorldBounds, bool* bIsWindChanging, bool* bIsWindChangePending);
	void BreakWindImpulseCylinder(struct FFortWindImpulseCylinder& InWindImpulseCylinder, struct FVector* ImpulseLocation, float* ImpulseInnerRadius, float* ImpulseOuterRadius, float* ImpulseMagnitude, struct FVector* ImpulseDirection);
	void AddWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
	struct FFortWindImpulseHandle AddWindImpulseCylinder(struct FFortWindImpulseCylinder& WindImpulseCylinder, float BlendTime);
	struct FFortWindImpulseHandle AddWindImpulse(struct FFortWindImpulseRadius& WindImpulse);
};

// 0x0 (0xB0 - 0xB0)
// Class FortniteGame.FortWorkerTooltip
class UFortWorkerTooltip : public UFortCharacterTooltip
{
public:

	static class UClass* StaticClass();
	static class UFortWorkerTooltip* GetDefaultObj();

	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<class FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, class FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, struct FGameplayTag& Tag, class UFortTooltipContext* Context, struct FGameplayTag& Token, float* OutVal);
};

// 0x148 (0x1C0 - 0x78)
// Class FortniteGame.FortWorldItem
class UFortWorldItem : public UFortItem
{
public:
	uint8                                        Pad_2860[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsTemporaryItem;                                  // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedsPersistentUpdate;                            // 0xC1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPendingPersistentDelete;                          // 0xC2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2861[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortInventory*                        OwnerInventory;                                    // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFortItemEntry                        ItemEntry;                                         // 0xD0(0xD0)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2862[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortWorldItem* GetDefaultObj();

	bool SeenInFrontend();
	void MarkItemAsSeenInFrontend();
	void GetOwnedGameplayTags(struct FGameplayTagContainer* TagContainer);
	bool AllowedToBeLockedInInventory();
};

// 0x168 (0x238 - 0xD0)
// Class FortniteGame.FortWorldRecord
class UFortWorldRecord : public UFortGenericRecord
{
public:
	struct FFortCloudSaveInfo                    CloudInfo;                                         // 0xD0(0x18)(Transient, NativeAccessSpecifierPublic)
	int32                                        CurrentZoneIndex;                                  // 0xE8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2863[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFortPlayerRecord>             SavedPlayers;                                      // 0xF0(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FFortZoneInstanceDetails              ZoneInstanceInfo;                                  // 0x100(0x128)(Transient, NativeAccessSpecifierPublic)
	class FString                                WUID;                                              // 0x228(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortWorldRecord* GetDefaultObj();

};

// 0x498 (0x990 - 0x4F8)
// Class FortniteGame.FortWorldSettings
class AFortWorldSettings : public AWorldSettings
{
public:
	uint8                                        Pad_2864[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                WorldCells;                                        // 0x508(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               WorldCellsOrigin;                                  // 0x518(0xC)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WorldCellsFlags;                                   // 0x524(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bGenerateTestLevelSaves : 1;                       // Mask: 0x1, PropSize: 0x10x528(0x1)(Edit, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bDisableCullDistance : 1;                          // Mask: 0x2, PropSize: 0x10x528(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_222 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2865[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinCullObjectSize;                                 // 0x52C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCullDistance;                                   // 0x530(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullObjectSize;                                 // 0x534(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxCullDistance;                                   // 0x538(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseWorldSpecificCullDistanceOverride;             // 0x53C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2866[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            TeamOnePvPMiniMapImage;                            // 0x540(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TeamTwoPvPMiniMapImage;                            // 0x548(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PvPMapWorldCenter;                                 // 0x550(0x8)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PvPMapWorldWidth;                                  // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PvPMapWorldHeight;                                 // 0x55C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bPvPUseWidgetRotation : 1;                         // Mask: 0x1, PropSize: 0x10x560(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_223 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2867[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MapZOffset;                                        // 0x564(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              MapRotation;                                       // 0x568(0xC)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2868[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            MapInitialMask;                                    // 0x578(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOverrideMainMapSettings : 1;                      // Mask: 0x1, PropSize: 0x10x580(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bValidateNavGraphConnectivity : 1;                 // Mask: 0x2, PropSize: 0x10x580(0x1)(Edit, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bLimitNavGraphSkyCells : 1;                        // Mask: 0x4, PropSize: 0x10x580(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseProceduralFoliage : 1;                         // Mask: 0x8, PropSize: 0x10x580(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseConditionalBuildingFoundations : 1;            // Mask: 0x10, PropSize: 0x10x580(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_224 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2869[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           AthenaMapImage;                                    // 0x588(0x88)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FMapLocation>                  MapLocations;                                      // 0x610(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        MapWorldScale;                                     // 0x620(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MiniMapZoom;                                       // 0x624(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AircraftPathBrush;                                 // 0x628(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AircraftMidlinePathBrush;                          // 0x6B0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           AircraftPathTeamIndicatorBrush;                    // 0x738(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SafeZoneFinalPosBrush;                             // 0x7C0(0x88)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FIntPoint>                     NavGraphSkyCells;                                  // 0x848(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCurveTable*                           SearchSpeedOverride;                               // 0x858(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveTable*                           ResourceRateOverride;                              // 0x860(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeimosAISettings                     DeimosAISettings;                                  // 0x868(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bShowTimeOfDayManager : 1;                         // Mask: 0x1, PropSize: 0x10x870(0x1)(Edit, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_225 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_286A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortTimeOfDayManager>   WorldTimeOfDayManager;                             // 0x878(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortMusicManager>       WorldMusicManager;                                 // 0x8A0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortTimeOfDayManager>   DefaultWorldTimeOfDayManager;                      // 0x8C8(0x28)(Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortTimeOfDayManager>   ZoneThemeTimeOfDayManager;                         // 0x8F0(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortTimeOfDayManager>   MissionTimeOfDayManager;                           // 0x918(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AFortMusicManager>       ZoneThemeMusicManager;                             // 0x940(0x28)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBuildingFoundationStreamingData> BuildingFoundationStreamingData;                   // 0x968(0x10)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	float                                        EndGameTimeDilation;                               // 0x978(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortTimeOfDayManager*                 TimeOfDayManager;                                  // 0x980(0x8)(ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AFortVehicleManager*                   VehicleManager;                                    // 0x988(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AFortWorldSettings* GetDefaultObj();

};

// 0x1D0 (0x2A0 - 0xD0)
// Class FortniteGame.FortZoneRecord
class UFortZoneRecord : public UFortGenericRecord
{
public:
	int32                                        WorldSaveCount;                                    // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneIndex;                                         // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PersistentLevelName;                               // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortLevelRecord>              SavedLevels;                                       // 0xE0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NumSavedLevels;                                    // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneTileSeed;                                      // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286C[0x190];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStatManagerPeriodRecord>      PlayerMapStatManagerPeriods;                       // 0x288(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CloudSaveItemDefContentVersion;                    // 0x298(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedsFullActorSave;                               // 0x29C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_286D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortZoneRecord* GetDefaultObj();

};

// 0x2B8 (0x2E8 - 0x30)
// Class FortniteGame.FortZoneTheme
class UFortZoneTheme : public UPrimaryDataAsset
{
public:
	TSoftClassPtr<class AFortTheaterMapTile>     TheaterMapTileClass;                               // 0x30(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 ZoneToUse;                                         // 0x58(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  ZoneName;                                          // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  ZoneDescription;                                   // 0x98(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FText                                  AbundantResources;                                 // 0xB0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EFortZoneType                     ZoneType;                                          // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AFortGameMode>           ZoneGameMode;                                      // 0xD0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ZoneTags;                                          // 0xF8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortLobbyBeaconHost>    LobbyBeaconHostClass;                              // 0x118(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UFortCloudSaveItemDefinition> CloudSaveItemDefinition;                           // 0x140(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZoneIndex;                                         // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaylistId;                                        // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamSize;                                          // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamCount;                                         // 0x174(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPartySize;                                      // 0x178(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxPlayers;                                        // 0x17C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalMissionEligibilityLength;                  // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CriticalMissionEligibilityGracePeriodLength;       // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDeployableBaseSupportSettings        DeployableBaseSettings;                            // 0x188(0x98)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        IgnoreGeneratedRewards : 1;                        // Mask: 0x1, PropSize: 0x10x220(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_226 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_286F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ABuildingSMActor>        PlayerSpawnPadClass;                               // 0x228(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 InitialPlayerSpawnTags;                            // 0x250(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BackupPlayerSpawnTags;                             // 0x270(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bOverrideConningText;                              // 0x290(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2870[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ConningOverrideText;                               // 0x298(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFortMusicManager>       MusicManagerClass;                                 // 0x2B0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FZoneThemeDifficultyProperties> DifficultyProperties;                              // 0x2D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFortZoneTheme* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromFortitudeModMagnitudeCalculation
class UFromFortitudeModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2871[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromFortitudeModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromOffenseModMagnitudeCalculation
class UFromOffenseModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2872[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromOffenseModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromResistanceModMagnitudeCalculation
class UFromResistanceModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2873[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromResistanceModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamFortitudeModMagnitudeCalculation
class UFromTeamFortitudeModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2874[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromTeamFortitudeModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamOffenseModMagnitudeCalculation
class UFromTeamOffenseModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2875[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromTeamOffenseModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamResistanceModMagnitudeCalculation
class UFromTeamResistanceModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2876[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromTeamResistanceModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTeamTechModMagnitudeCalculation
class UFromTeamTechModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2877[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromTeamTechModMagnitudeCalculation* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class FortniteGame.FromTechModMagnitudeCalculation
class UFromTechModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_2878[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFromTechModMagnitudeCalculation* GetDefaultObj();

};

// 0x78 (0x3D0 - 0x358)
// Class FortniteGame.FrontendAnimInstance
class UFrontendAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_2879[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortDisplayGender                Gender;                                            // 0x360(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_287A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          IntroAnimation_Female;                             // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          IntroAnimation_Male;                               // 0x370(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OutroAnimation_Female;                             // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OutroAnimation_Male;                               // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SelectedAnimation_Female;                          // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SelectedAnimation_Male;                            // 0x390(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCanPlayCustomAnimations : 1;                      // Mask: 0x1, PropSize: 0x10x398(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_227 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_287B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagAnimations                GameplayTagAnimations;                             // 0x3A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagAnimations                FemaleGameplayTagAnimations;                       // 0x3B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagAnimations                MaleGameplayTagAnimations;                         // 0x3C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFrontendAnimInstance* GetDefaultObj();

	void PlaySelected();
	void PlayOutro();
	void PlayIntro();
	void OnPlayMontageFromGameplayTagQuery(struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
};

// 0x10 (0x338 - 0x328)
// Class FortniteGame.FrontEndSettings
class AFrontEndSettings : public AActor
{
public:
	TArray<struct FCameraPair>                   Cameras;                                           // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AFrontEndSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.GameplayMutatorObserverInterface
class IGameplayMutatorObserverInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGameplayMutatorObserverInterface* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class FortniteGame.HeartbeatManager
class UHeartbeatManager : public UObject
{
public:
	uint8                                        Pad_287C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldTrackLocation;                              // 0x40(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_287D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TrackLocationFrequencySec;                         // 0x44(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldSendPerMinuteResourceAndDamageEvents;       // 0x48(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_287E[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeartbeatManager* GetDefaultObj();

};

// 0x118 (0x2C0 - 0x1A8)
// Class FortniteGame.HoverDroneMovementComponent
class UHoverDroneMovementComponent : public USpectatorPawnMovement
{
public:
	uint8                                        Pad_287F[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotAcceleration;                                   // 0x1F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotDeceleration;                                   // 0x1F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPitchRotSpeed;                                  // 0x1F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxYawRotSpeed;                                    // 0x1FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboRotAcceleration;                              // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboRotDeceleration;                              // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboMaxPitchRotSpeed;                             // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboMaxYawRotSpeed;                               // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TurboAccelerationRange;                            // 0x210(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TurboAccelerationAltitudeRange;                    // 0x218(0x8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboDeceleration;                                 // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurboHoverThrustScale;                             // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FullAirFrictionVelocity;                           // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2880[0x94];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHoverDroneMovementComponent* GetDefaultObj();

	void OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer);
};

// 0x50 (0xBB0 - 0xB60)
// Class FortniteGame.KeepHeartBase
class AKeepHeartBase : public ABuildingSMActor
{
public:
	TSoftClassPtr<class AFortSaveFileBuildingInstructionsHandler> BuildingInstructionsHandlerClass;                  // 0xB60(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2884[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortSaveFileBuildingInstructionsHandler* SaveFileInstructionsHandler;                       // 0xBA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AKeepHeartBase* GetDefaultObj();

	void SetAllowLooting(bool bAllowed);
	bool SaveUserKeep(class AFortPlayerController* FortPC);
	bool ResetUserKeep(class AFortPlayerController* FortPC);
	void LoadUserKeep(class AFortPlayerController* FortPC);
	bool IsKeepOwner(class AFortPlayerController* FortPC);
	bool IsKeepLoaded();
};

// 0x28 (0xBD8 - 0xBB0)
// Class FortniteGame.KeepHeart
class AKeepHeart : public AKeepHeartBase
{
public:
	class AActor*                                DecorationRoomPlacement;                           // 0xBB0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           PermaniteHealEffect;                               // 0xBB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteWallWeight;                               // 0xBC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteFloorWeight;                              // 0xBC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteStairWeight;                              // 0xBC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PermaniteRoofWeight;                               // 0xBCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKeepDefenseState                 DefenseState;                                      // 0xBD0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2888[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AKeepHeart* GetDefaultObj();

	bool UpgradeAllPermaniteStructures(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	void StreamOutWorld();
	void StreamInWorld();
	void StartVote(class FText VoteText, class FText YesText, class FText NoText, float PercentageToPass, bool bSkipIfOnePlayerOnly);
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreKeepHealth();
	void RestoreContainers();
	void ResetContainers();
	void OnWorldStreamedIn();
	void OnVoteComplete(bool bResult);
	void OnDefenseLevelChanged();
	void NotifyEncounterStarted(class UFortAIEncounterInfo* StartedEncounter);
	void NotifyEncounterEnded(class UFortAIEncounterInfo* EndedEncounter);
	bool IsWorldStreamingIn();
	bool IsWorldStreamedIn();
	bool IsDefenseActive();
	void HandleVoteComplete(bool bResult);
	float GetWorldStreamingInProgress();
	int32 GetUpgradeAllPermaniteCost(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	int32 GetDefenseLevel();
	float GetAveragePermaniteLevel();
	bool DestroyNonPermaniteStructures();
	void DelayedVoteSuccess();
};

// 0x78 (0xD38 - 0xCC0)
// Class FortniteGame.KeepItemContainer
class AKeepItemContainer : public ABuildingContainer
{
public:
	uint8                                        Pad_2889[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HostUpgradeLevel;                                  // 0xCC4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AFortPlayerState>> SearchedBy;                                        // 0xCC8(0x10)(Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	enum class EKeepContainerType                ContainerType;                                     // 0xCD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDefaultLootLogic;                              // 0xCD9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetThisWhenKeepResets;                          // 0xCDA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288A[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ContainerNameKey;                                  // 0xCE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ContainerDataTable;                                // 0xCE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowChoiceUI;                                     // 0xCF0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EFortItemType>             ItemsInChoiceUI;                                   // 0xCF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_288C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EFortRarity                       BestAvailableRarity;                               // 0xD18(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxItems;                                          // 0xD1C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AKeepItemContainer* GetDefaultObj();

	void RestoreLoot();
	void ResetContainer(class AFortPlayerController* FortPC);
	void OnRep_SearchedBy();
	void OnRep_HostUpgradeLevel();
	void InitializeContainer(int32 InitUpgradeLevel);
	int32 GetLootTierOverride();
	class FName GetContainerNameAndLevelKey();
};

// 0x0 (0xD38 - 0xD38)
// Class FortniteGame.KeepItemCoreContainer
class AKeepItemCoreContainer : public AKeepItemContainer
{
public:

	static class UClass* StaticClass();
	static class AKeepItemCoreContainer* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class FortniteGame.LevelTestingActorBase
class ALevelTestingActorBase : public AActor
{
public:

	static class UClass* StaticClass();
	static class ALevelTestingActorBase* GetDefaultObj();

	struct FVector ExtractSkeletalMeshScale(TSubclassOf<class AActor> BlueprintClass);
	class USkeletalMesh* ExtractSkeletalMesh(TSubclassOf<class AActor> BlueprintClass);
};

// 0x28 (0x370 - 0x348)
// Class FortniteGame.LobbyBackgroundTakeoverEvent
class ULobbyBackgroundTakeoverEvent : public UFortEventItemDefinitionBase
{
public:
	TSoftObjectPtr<class UWorld>                 LobbyBackgroundLevelName;                          // 0x348(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULobbyBackgroundTakeoverEvent* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.LocalServiceMessageContext
class ULocalServiceMessageContext : public UBlueprintContextBase
{
public:
	uint8                                        Pad_2890[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULocalServiceMessageContext* GetDefaultObj();

	void RemoveLocalServiceMessage(const class FString& Identifier);
	void AddLocalServiceMessage(const class FString& Identifier, class FText Title, class FText Body);
};

// 0x30 (0xBE0 - 0xBB0)
// Class FortniteGame.ManorHeart
class AManorHeart : public AKeepHeartBase
{
public:
	class AActor*                                KeepIconActor;                                     // 0xBB0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        ContainerNamesToDestroy;                           // 0xBB8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           InfiniteStaminaEffect;                             // 0xBC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2891[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AManorHeart* GetDefaultObj();

	void TravelToNewWorld(const class FString& NewTheaterId);
};

// 0x48 (0x370 - 0x328)
// Class FortniteGame.ManorPortal
class AManorPortal : public AActor
{
public:
	uint8                                        Pad_2896[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AManorPortal* GetDefaultObj();

	void UnlockPortal(class AFortPlayerController* Player);
	void OpenUnlockMenu(class AFortPlayerController* Player);
	bool IsProfileValidToReadPortalAvailability(class AFortPlayerController* Player);
	bool IsPortalUnlocked(class AFortPlayerController* Player);
	int32 GetPlayerCurrencyAmount(class AFortPlayerController* Player);
	int32 GetCurrencyCost(class AFortPlayerController* Player);
	void BlueprintOnUnlockPortalComplete();
};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.MatchHeartbeatManager
class UMatchHeartbeatManager : public UObject
{
public:
	class AFortGameMode*                         OwningGameMode;                                    // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ServerMetricsLOD;                                  // 0x30(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2897[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HighFrequencyServerMetricsDurationSec;             // 0x4C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        HighFrequencyEventsLOD;                            // 0x50(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2898[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMatchHeartbeatManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortMissionEventParams
class UFortMissionEventParams : public UObject
{
public:

	static class UClass* StaticClass();
	static class UFortMissionEventParams* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortStartMissionParams
class UFortStartMissionParams : public UFortMissionEventParams
{
public:

	static class UClass* StaticClass();
	static class UFortStartMissionParams* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemCollectedParams
class UFortItemCollectedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*              CollectedItemDefinition;                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 CollectedBy;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountCollected;                                   // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_289B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortItemCollectedParams* GetDefaultObj();

	void SetParams(class UFortWorldItemDefinition* _CollectedItemDefinition, class AFortPlayerController* _CollectedBy, int32 _AmountCollected, class UFortItemCollectedParams** ThisParam);
	void BreakParams(class UFortWorldItemDefinition** _CollectedItemDefinition, class AFortPlayerController** _CollectedBy, int32* _AmountCollected);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemDroppedParams
class UFortItemDroppedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*              DroppedItemDefinition;                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 DroppedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountDropped;                                     // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_289E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortItemDroppedParams* GetDefaultObj();

	void SetParams(class UFortWorldItemDefinition* _DroppedItemDefinition, class AFortPlayerController* _DroppedBy, int32 _AmountCollected, class UFortItemDroppedParams** ThisParam);
	void BreakParams(class UFortWorldItemDefinition** _DroppedItemDefinition, class AFortPlayerController** _DroppedBy, int32* _AmountCollected);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortItemCraftedParams
class UFortItemCraftedParams : public UFortMissionEventParams
{
public:
	class UFortSchematicItemDefinition*          SchematicDefinition;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 CraftedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmountCrafted;                                     // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bItemWasQuickCrafted;                              // 0x3C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28A1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortItemCraftedParams* GetDefaultObj();

	void SetParams(class UFortSchematicItemDefinition* _SchematicDefinition, class AFortPlayerController* _CraftedBy, int32 _AmountCrafted, bool _bItemWasQuickCrafted, class UFortItemCraftedParams** ThisParam);
	void BreakParams(class UFortSchematicItemDefinition** _SchematicDefinition, class AFortPlayerController** _CraftedBy, int32* _AmountCrafted, bool* _bItemWasQuickCrafted);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortEnemyKilledParams
class UFortEnemyKilledParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                             KilledPawn;                                        // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 KilledBy;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortEnemyKilledParams* GetDefaultObj();

	void SetParams(class AFortPawn* _KilledPawn, class AFortPlayerController* _KilledBy, class UFortEnemyKilledParams** ThisParam);
	void BreakParams(class AFortPawn** _KilledPawn, class AFortPlayerController** _KilledBy);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortEnemyDamagedParams
class UFortEnemyDamagedParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                             DamagedPawn;                                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 DamagedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageAmount;                                      // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28A4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortEnemyDamagedParams* GetDefaultObj();

	void SetParams(class AFortPawn* _DamagedPawn, class AFortPlayerController* _DamagedBy, float _DamageAmount, class UFortEnemyDamagedParams** ThisParam);
	void BreakParams(class AFortPawn** _DamagedPawn, class AFortPlayerController** _DamagedBy, float* _DamageAmount);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortNewPlayerParams
class UFortNewPlayerParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 NewPlayerController;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortNewPlayerParams* GetDefaultObj();

	void SetParams(class AFortPlayerController* _NewPlayerController, class UFortNewPlayerParams** ThisParam);
	void BreakParams(class AFortPlayerController** _NewPlayerController);
};

// 0x28 (0x50 - 0x28)
// Class FortniteGame.FortPlayerAbandonParams
class UFortPlayerAbandonParams : public UFortMissionEventParams
{
public:
	struct FUniqueNetIdRepl                      AbandoningPlayerId;                                // 0x28(0x28)(HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerAbandonParams* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPlayerExitParams
class UFortPlayerExitParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 ExitingPlayerController;                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerExitParams* GetDefaultObj();

	void SetParams(class AFortPlayerController* _ExitingPlayerController, class UFortPlayerExitParams** ThisParam);
	void BreakParams(class AFortPlayerController** _ExitingPlayerController);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPlayerSpawnedParams
class UFortPlayerSpawnedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 SpawnedPlayerController;                           // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerSpawnedParams* GetDefaultObj();

	void SetParams(class AFortPlayerController* _SpawnedPlayerController, class UFortPlayerSpawnedParams** ThisParam);
	void BreakParams(class AFortPlayerController** _SpawnedPlayerController);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlayerDiedParams
class UFortPlayerDiedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                       KilledPlayer;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           KilledBy;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerDiedParams* GetDefaultObj();

	void SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDiedParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlayerDBNOEnterParams
class UFortPlayerDBNOEnterParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                       KilledPlayer;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           KilledBy;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerDBNOEnterParams* GetDefaultObj();

	void SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDBNOEnterParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortPlayerDBNORevivedParams
class UFortPlayerDBNORevivedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                       RevivedPlayer;                                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AController*                           RevivedBy;                                         // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerDBNORevivedParams* GetDefaultObj();

	void SetParams(class AFortPlayerPawn* _RevivedPlayer, class AController* _RevivedBy, class UFortPlayerDBNORevivedParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _RevivedPlayer, class AController** _RevivedBy);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortDayPhaseChangeParams
class UFortDayPhaseChangeParams : public UFortMissionEventParams
{
public:
	class AFortTimeOfDayManager*                 LightingAndFogManager;                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortDayPhase                     NewDayPhase;                                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28A7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortDayPhaseChangeParams* GetDefaultObj();

	void SetParams(class AFortTimeOfDayManager* _LightingAndFogManager, enum class EFortDayPhase _NewDayPhase, class UFortDayPhaseChangeParams** ThisParam);
	void BreakParams(class AFortTimeOfDayManager** _LightingAndFogManager, enum class EFortDayPhase* _NewDayPhase);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortPlayerBuiltParams
class UFortPlayerBuiltParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        Building;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Builder;                                           // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortPlayerBuiltParams* GetDefaultObj();

	void SetParams(class ABuildingActor* _Building, enum class EFortBuildingType _BuildingType, class AFortPlayerController* _Builder, class UFortPlayerBuiltParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, enum class EFortBuildingType* _BuildingType, class AFortPlayerController** _Builder);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortBuildingDestroyedParams
class UFortBuildingDestroyedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        Building;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28AD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           Destroyer;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBuildingDestroyedParams* GetDefaultObj();

	void SetParams(class ABuildingActor* _Building, enum class EFortBuildingType _BuildingType, class AController* _Destroyer, class UFortBuildingDestroyedParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, enum class EFortBuildingType* _BuildingType, class AController** _Destroyer);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortBuildingEditedParams
class UFortBuildingEditedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        OriginalBuilding;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        NewBuilding;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Editor;                                            // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBuildingEditedParams* GetDefaultObj();

	void SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, enum class EFortBuildingType _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingEditedParams** ThisParam);
	void BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, enum class EFortBuildingType* _BuildingType, class AFortPlayerController** _Editor);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortBuildingUpgradedParams
class UFortBuildingUpgradedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        OriginalBuilding;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingActor*                        NewBuilding;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortPlayerController*                 Editor;                                            // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortBuildingUpgradedParams* GetDefaultObj();

	void SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, enum class EFortBuildingType _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingUpgradedParams** ThisParam);
	void BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, enum class EFortBuildingType* _BuildingType, class AFortPlayerController** _Editor);
};

// 0x20 (0x48 - 0x28)
// Class FortniteGame.FortBuildingDamagedParams
class UFortBuildingDamagedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                        Building;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortBuildingType                 BuildingType;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           DamagedBy;                                         // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28B9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortBuildingDamagedParams* GetDefaultObj();

	void SetParams(class ABuildingActor* _Building, enum class EFortBuildingType _BuildingType, class AController* _DamagedBy, float _DamageAmount, class UFortBuildingDamagedParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, enum class EFortBuildingType* _BuildingType, class AController** _DamagedBy, float* _DamageAmount);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionSucceededParams
class UFortMissionSucceededParams : public UFortMissionEventParams
{
public:
	class AFortMission*                          SucceededMission;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionSucceededParams* GetDefaultObj();

	void SetParams(class AFortMission* _SucceededMission, class UFortMissionSucceededParams** ThisParam);
	void BreakParams(class AFortMission** _SucceededMission);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionFailedParams
class UFortMissionFailedParams : public UFortMissionEventParams
{
public:
	class AFortMission*                          FailedMission;                                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionFailedParams* GetDefaultObj();

	void SetParams(class AFortMission* _FailedMission, class UFortMissionFailedParams** ThisParam);
	void BreakParams(class AFortMission** _FailedMission);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionForceSuccessParams
class UFortMissionForceSuccessParams : public UFortMissionEventParams
{
public:
	float                                        FractionCompleted;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortMissionForceSuccessParams* GetDefaultObj();

	void SetParams(float _FractionCompleted, class UFortMissionForceSuccessParams** ThisParam);
	void BreakParams(float* _FractionCompleted);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortMissionNeutralCompleteParams
class UFortMissionNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortMission*                          NeutrallyCompletedMission;                         // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortMissionNeutralCompleteParams* GetDefaultObj();

	void SetParams(class AFortMission* _NeutrallyCompletedMission, class UFortMissionNeutralCompleteParams** ThisParam);
	void BreakParams(class AFortMission** _NeutrallyCompletedMission);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortObjectiveSucceededParams
class UFortObjectiveSucceededParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                    SucceededObjective;                                // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortObjectiveSucceededParams* GetDefaultObj();

	void SetParams(class AFortObjectiveBase* _SucceededObjective, class UFortObjectiveSucceededParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _SucceededObjective);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortObjectiveFailedParams
class UFortObjectiveFailedParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                    FailedObjective;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortObjectiveFailedParams* GetDefaultObj();

	void SetParams(class AFortObjectiveBase* _FailedObjective, class UFortObjectiveFailedParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _FailedObjective);
};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortObjectiveNeutralCompleteParams
class UFortObjectiveNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                    NeutrallyCompletedObjective;                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortObjectiveNeutralCompleteParams* GetDefaultObj();

	void SetParams(class AFortObjectiveBase* _NeutrallyCompletedObjective, class UFortObjectiveNeutralCompleteParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _NeutrallyCompletedObjective);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortToggledCursorModeParams
class UFortToggledCursorModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerThatToggledCursorMode;                       // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInCursorMode;                                     // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortToggledCursorModeParams* GetDefaultObj();

	void SetParams(class AFortPlayerController* _PlayerThatToggledCursorMode, bool InCursorMode, class UFortToggledCursorModeParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledCursorMode, bool* InCursorMode);
};

// 0x10 (0x38 - 0x28)
// Class FortniteGame.FortToggledOptionsMenuParams
class UFortToggledOptionsMenuParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerThatToggledOptionsMenu;                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInOptionsMenu;                                    // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortToggledOptionsMenuParams* GetDefaultObj();

	void SetParams(class AFortPlayerController* _PlayerThatToggledOptionsMenu, bool Opened, class UFortToggledOptionsMenuParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledOptionsMenu, bool* Opened);
};

// 0x18 (0x40 - 0x28)
// Class FortniteGame.FortToggledEditModeParams
class UFortToggledEditModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerThatToggledEditMode;                         // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingSMActor*                      EditableActor;                                     // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInEditMode;                                       // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortToggledEditModeParams* GetDefaultObj();

	void SetParams(class AFortPlayerController* _PlayerThatToggledEditMode, class ABuildingSMActor* InEditableActor, bool InEditMode, class UFortToggledEditModeParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledEditMode, class ABuildingSMActor** EditableActor, bool* InEditMode);
};

// 0x0 (0x28 - 0x28)
// Class FortniteGame.FortShutdownParams
class UFortShutdownParams : public UFortMissionEventParams
{
public:

	static class UClass* StaticClass();
	static class UFortShutdownParams* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortPvPVictoryParams
class UFortPvPVictoryParams : public UFortMissionEventParams
{
public:
	enum class EFortTeam                         WinningTeam;                                       // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortPvPVictoryParams* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class FortniteGame.FortStartLeavingZoneParams
class UFortStartLeavingZoneParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                 PlayerControllerRequestingLeaving;                 // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFortStartLeavingZoneParams* GetDefaultObj();

	void BreakParams(class AFortPlayerController** _PlayerControllerRequestingLeaving);
};

// 0x8 (0x140 - 0x138)
// Class FortniteGame.MovementComp_Tracer
class UMovementComp_Tracer : public UMovementComponent
{
public:
	float                                        Speed;                                             // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMovementComp_Tracer* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class FortniteGame.MyTownData
class UMyTownData : public UDataAsset
{
public:
	TArray<struct FMyTownWorkerPersonalityData>  WorkerPersonalities;                               // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMyTownWorkerSetBonusData>     WorkerSetBonuses;                                  // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* PersonnelXpItemDefinition;                         // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* HeroXpItemDefinition;                              // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* VoucherItemDefinition;                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortPersistentResourceItemDefinition* SchematicXpItemDefinition;                         // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortCurrencyItemDefinition*           CurrencyItemDefinition;                            // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTokenType*                        SkillPointItemDefinition;                          // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTokenType*                        ResearchPointItemDefinition;                       // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           TotalRatingGameplayEffect;                         // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMyTownData* GetDefaultObj();

};

// 0x0 (0x328 - 0x328)
// Class FortniteGame.NavGraphDebugActor
class ANavGraphDebugActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ANavGraphDebugActor* GetDefaultObj();

};

// 0x118 (0x440 - 0x328)
// Class FortniteGame.PartyDisplayManager
class APartyDisplayManager : public AActor
{
public:
	TArray<class AActor*>                        PlacementActors;                                   // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                VaultPlacementActor;                               // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                VaultWeaponPlacementActor;                         // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnClickedPartyPlayer;                              // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnBeginCursorOverPartyPlayer;                      // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnEndCursorOverPartyPlayer;                        // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                  OnPrefabForCurrentlyDisplayedItemChanged;          // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     PlayerInMatchHoloMaterial;                         // 0x388(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CB[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APartyDisplayManager* GetDefaultObj();

	void ShowLoading();
	void ShowItem(class UFortItem* ItemToView, struct FGuid& RequestId);
	void SetupPrefabVisuals();
	void ResOutPawnFromLobby(class AFortPlayerPawn* Pawn, int32 PartyIndex);
	void PlayLevelUpEffect();
	void PlayEvolutionEffect();
	void OnPlayerPawnAddedToLobby(class AFortPlayerPawn* Pawn);
	void OnPawnTouchReleased(enum class ETouchIndex FingerIndex, class AActor* TouchedActor);
	void OnPawnEndCursorOver(class AActor* TouchedActor);
	void OnPawnClicked(class AActor* TouchedActor, const struct FKey& ButtonPressed);
	void OnPawnBeginCursorOver(class AActor* TouchedActor);
	void NotifyPrefabChanged(class AActor* PrefabActor, class UFortItem* CurrentItem);
	void HideLoading();
	void HandleLoadingAssetsForItemCompleted(class UFortItem* ItemWhoseAssetsWereLoaded, TArray<class UObject*>& LoadedAssets, struct FGuid& RequestId);
	void HandleItemsShown(TArray<class UFortItem*>& ItemShown, struct FGuid& RequestId);
	class AActor* GetPrefabActorForCurrentDisplayedItem();
	struct FUniqueNetIdRepl GetPlayerIdFromPartyMemberIndex(int32 PartyMemberIndex);
	bool GetPartyMemberIndexByPlayerPawn(class AFortPlayerPawn* PlayerPawn, int32* OutPlayerIndex);
	void GetMeshForCurrentDisplayedItem(class UMeshComponent** OutDisplayedMesh);
	class AFortPlayerPawn* GetHeroPlayerPawnForCurrentDisplayedItem();
	void CharacterCustomizationFinished(class AFortPlayerPawn* Pawn);
	void BeginLoadingAssetsForItem(class UFortItem* ItemToView, TArray<TSoftObjectPtr<class UObject>>& AssetsToLoad, struct FGuid& RequestId);
};

// 0x30 (0x58 - 0x28)
// Class FortniteGame.FortAsyncAction_PartyDisplayManager_SetupPrefabVisuals
class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                  Completed;                                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFortItem*                             Item;                                              // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28CD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals* GetDefaultObj();

	class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals* SetupPrefabVisuals(class APartyDisplayManager* Target, class UFortItem* Item, struct FGuid& RequestId);
	void OnRequestedCustomizationComplete(class AFortPlayerPawn* Pawn);
	void OnPreviousCustomizationComplete(class AFortPlayerPawn* Pawn);
	void Delegate__DelegateSignature(class UFortItem* Item, const struct FGuid& RequestId);
};

// 0x28 (0x68 - 0x40)
// Class FortniteGame.PlayerTrapBonusModMagnitudeCalculation
class UPlayerTrapBonusModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x40(0x20)(Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttributeDefaultValue;                             // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28CE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerTrapBonusModMagnitudeCalculation* GetDefaultObj();

};

// 0x8 (0x6B0 - 0x6A8)
// Class FortniteGame.SBAGrantedBuildingGameplayActor
class ASBAGrantedBuildingGameplayActor : public ABuildingGameplayActor
{
public:
	struct FTeamStrategicBuildingHandle          OwningSBAHandle;                                   // 0x6A8(0x4)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28CF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASBAGrantedBuildingGameplayActor* GetDefaultObj();

	class AStrategicBuildingActor* GetOwnerStrategicBuildingActor();
};

// 0x38 (0x60 - 0x28)
// Class FortniteGame.Stat
class UStat : public UObject
{
public:
	class FName                                  StatName;                                          // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStatRecordingPeriod              HighestPeriodToTrack;                              // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AbsoluteMaxValue;                                  // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28D1[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStat* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class FortniteGame.StatManager
class UStatManager : public UObject
{
public:
	TArray<class UStat*>                         Stats;                                             // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                StatPrefix;                                        // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                 FPC;                                               // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28D2[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStatManager* GetDefaultObj();

};

// 0x1B0 (0x4D8 - 0x328)
// Class FortniteGame.ThreatCloud
class AThreatCloud : public AActor
{
public:
	TArray<class UBoxComponent*>                 LightningSourceAreas;                              // 0x328(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           MiniMapIconBrush;                                  // 0x338(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        MiniMapIconPercent;                                // 0x3C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           MiniMapFarOffIconBrush;                            // 0x3C8(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FLinearColor                          ActiveTint;                                        // 0x450(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          InActiveTint;                                      // 0x460(0x10)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ActiveTransitionTime;                              // 0x470(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DeathTimerDuration;                                // 0x474(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CloudMiniMapTickInterval;                          // 0x478(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28D5[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MiniMapFarOffIconDegreesOfArc;                     // 0x490(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28D6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBox                                  ThreatBoxVolume;                                   // 0x4A0(0x1C)(Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        GroundLevelUnderCloud;                             // 0x4BC(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28D7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       GoalActorLocations;                                // 0x4C8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AThreatCloud* GetDefaultObj();

	void OnThreatVolumeChanged();
	void OnLightningStrike(struct FVector& StartLocation, struct FVector& EndLocation, class ABuildingRift* Rift, bool bLightningStruckRift);
	void OnCloudStart();
	void OnCloudHiddenChange(bool bCloudsAreHidden);
	void OnCloudDeactivated(enum class EFortThreatDeactivationType DeactivationType);
	void OnCloudActivated();
	void OnBeginDeath();
	void ManualLightningFlash();
	struct FBox GetThreatVolume();
};

// 0x10 (0x380 - 0x370)
// Class FortniteGame.WaterVolume_Shallow
class AWaterVolume_Shallow : public APhysicsVolume
{
public:
	class USoundBase*                            EntrySound;                                        // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExitSound;                                         // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AWaterVolume_Shallow* GetDefaultObj();

};

// 0x0 (0x380 - 0x380)
// Class FortniteGame.WaterVolume_Athena
class AWaterVolume_Athena : public AWaterVolume_Shallow
{
public:

	static class UClass* StaticClass();
	static class AWaterVolume_Athena* GetDefaultObj();

};

// 0x18 (0x388 - 0x370)
// Class FortniteGame.WaterVolume_Deep
class AWaterVolume_Deep : public APhysicsVolume
{
public:
	class USoundBase*                            EntrySound;                                        // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            ExitSound;                                         // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamagePerSec;                                      // 0x380(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28D8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWaterVolume_Deep* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class FortniteGame.WeaponHitNotifyAudioBank
class UWeaponHitNotifyAudioBank : public UPrimaryDataAsset
{
public:
	class USoundBase*                            SoundBody;                                         // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundCrit;                                         // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundShield;                                       // 0x40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeath;                                        // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeathCrit;                                    // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundBodyReceive;                                  // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundCritReceive;                                  // 0x60(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeathReceive;                                 // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundDeathCritReceive;                             // 0x70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundFallReceive;                                  // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                            SoundFallDeathReceive;                             // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponHitNotifyAudioBank* GetDefaultObj();

};

// 0x18 (0x340 - 0x328)
// Class FortniteGame.WorldMapPin
class AWorldMapPin : public AActor
{
public:
	class USceneComponent*                       SceneComponent;                                    // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                TheaterId;                                         // 0x330(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AWorldMapPin* GetDefaultObj();

	void SetTheaterId(const class FString& NewId);
	void OnTheaterIdSet();
};

// 0x20 (0x348 - 0x328)
// Class FortniteGame.WorldMapPinManager
class AWorldMapPinManager : public AActor
{
public:
	uint8                                        Pad_28D9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AFortStaticMeshActor*                  WorldMapMesh;                                      // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AWorldMapPin*>                  CurrentPins;                                       // 0x338(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AWorldMapPinManager* GetDefaultObj();

	class AWorldMapPin* CreateWorldMapPin(const class FString& TheaterId);
};

// 0x228 (0x258 - 0x30)
// Class FortniteGame.WorldTheme
class UWorldTheme : public UDataAsset
{
public:
	TArray<struct FTileGroupSelection>           TileGroups;                                        // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UWorldTileGroup*                       FillerTileGroup;                                   // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxCircuitSize;                                    // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 BorderWorld_I;                                     // 0x50(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_IO;                                    // 0x78(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_O;                                     // 0xA0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OO;                                    // 0xC8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OOO;                                   // 0xF0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OOOO;                                  // 0x118(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_S;                                     // 0x140(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_SS;                                    // 0x168(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_OS;                                    // 0x190(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_SO;                                    // 0x1B8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_SOO;                                   // 0x1E0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_U;                                     // 0x208(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 BorderWorld_R;                                     // 0x230(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWorldTheme* GetDefaultObj();

};

// 0x28 (0xCC8 - 0xCA0)
// Class FortniteGame.WorldTileFoundation
class AWorldTileFoundation : public ABuildingFoundation
{
public:
	uint8                                        NumRotations;                                      // 0xCA0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DB[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWorldTileFoundation* GetDefaultObj();

};

// 0xF8 (0x128 - 0x30)
// Class FortniteGame.WorldTileGroup
class UWorldTileGroup : public UDataAsset
{
public:
	class FString                                TileID;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bOnlyPlaceDiagonalWithAdjacent : 1;                // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_228 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_28DC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTileGroupMapInfo>             FlatMapInfos;                                      // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>             InnerMapInfos;                                     // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>             OuterMapInfos;                                     // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FTileGroupMapInfo>             StraightMapInfos;                                  // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                 Sim_FlatWorld;                                     // 0x88(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 Sim_InnerWorld;                                    // 0xB0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 Sim_OuterWorld;                                    // 0xD8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 Sim_StraightWorld;                                 // 0x100(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWorldTileGroup* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class FortniteGame.WorldTileManager
class UWorldTileManager : public UObject
{
public:
	class AFortWorldManager*                     WorldManager;                                      // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DD[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWorldTileManager* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class FortniteGame.WorldTileType
class UWorldTileType : public UDataAsset
{
public:
	class FString                                TileID;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        TileGroups;                                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        TileWeight;                                        // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 North;                                             // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 East;                                              // 0x55(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 South;                                             // 0x56(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFortTileEdgeType                 West;                                              // 0x57(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        MapNames;                                          // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWorldTileType* GetDefaultObj();

};

}


